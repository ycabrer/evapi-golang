openapi: 3.0.0
info:
  title: ExaVault API
  description: "# Introduction\n\nWelcome to the ExaVault API documentation. Our API\
    \ lets you control nearly all aspects of your ExaVault account programatically,\
    \ from uploading and downloading files to creating and managing shares and notifications.\
    \ \n\nCapabilities of the API include\n- Uploading and downloading files.\n- Managing\
    \ files and folders, including standard operations like move, copy and delete.\n\
    - Getting information about activity occuring in your account.\n- Creating, updating\
    \ and deleting users.\n- Creating and managing shares, including download-only\
    \ shares and receive folders. \n- Setting up and managing notifications.\n\nThe\
    \ ExaVault API v2.0 is a RESTful API using JSON.\n\n## The API URL\n\nYou will\
    \ access your account from your server address. For example, if your account is\
    \ available at exampleaccount.exavault.com, you'll connect to the API at https://exampleaccount.exavault.com/api/v2\n\
    \n# Obtaining Your API Key and Access Token\n\nAccount admins can create API Keys\
    \ and personal access tokens within the ExaVault File Manager web application.\
    \ \n\n## Create an API Key\n\n1. Log into the ExaVault File Manager at your account\
    \ name address. i.e., if your account is exampleaccount.exavault.com, go to https://exampleaccount.exavault.com\
    \ and log in with your username and password\n2. Click on the **My Account** option\
    \ in the left-hand sidebar\n3. Click on the **Developer** tab\n4. Click the +\
    \ button next to the table of API Keys to create a new key\n5. Enter a name that\
    \ will uniquely identify connections using this key. This name will appear in\
    \ your activity session logs.\n6. Enter a description with any other information\
    \ that you need to track the purpose of your API key\n7. Save the new key\n\n\
    As soon as you save a new API key, you'll be prompted to create a personal access\
    \ token which will allow a specific user to connect via the API using that API\
    \ key (jump to step 5 in the instructions below)\n\n## Generate an Access Token\n\
    1. Log into the ExaVault File Manager at your account name address. i.e., if your\
    \ account is exampleaccount.exavault.com, go to https://exampleaccount.exavault.com\
    \ and log in with your username and password\n1. Click on the **My Account** option\
    \ in the left-hand sidebar\n1. Click on the **Developer** tab\n1. Click the +\
    \ button next to the table of Access Tokens to create a new token\n1. Select the\
    \ API Key from the first dropdown.\n1. Select the user who will use this token\
    \ from the second dropdown.\n1. Click the **GENERATE TOKEN** button\n\nThe confirmation\
    \ popup will display your API key and your access token. **Copy this access token\
    \ to a safe location (such as a password vault) immediately.** Once you close\
    \ this popup, you will not be able to see the token again. After you have saved\
    \ your token securely, click CLOSE to close the popup.\n\nThe access token you\
    \ have created will allow any program using that token and its API key to masquerade\
    \ as the associated user. You should keep the token safe.\n\n# Authentication\n\
    \nThe ExaVault API uses the combination of an API key and a persistent access\
    \ token to authenticate a user. Both the API key and the access token can be created\
    \ by an admin-level user\n\nEach request made to the API must include 2 headers\n\
    \n| Header Name   | Contains      |\n| ---      | :---:          |\n| **ev-api-key**\
    \      |  Your API key   |\n| **ev-access-token**       |   Your access token\
    \          |   \n\nThe access token uniquely identifies the user account for the\
    \ connection. You should keep this token secure.\n\n\n# HTTP Status Codes\n\n\
    The ExaVault API v2.0 is RESTful and returns appropriate HTTP status codes in\
    \ its responses\n\n**Success Statuses:**\n\n| Status   | Notes   |\n| ---    \
    \  | :---:       |\n| 200      | Successful operation   |\n| 201      | Successful\
    \ creation operation     |\n| 207      | Multiple operation status |\n\n**Request\
    \ Error Statuses:**\n\n| Status   | Notes   |\n| ---      | :---:       |\n| 400\
    \      | Bad Request   |\n| 401      | Unauthorized     |\n| 403      | Forbidden\
    \   |\n| 404      | Not Found* |\n| 429      | Too many requests |\n\n**Server\
    \ Error Statuses:**\n\n| Status   | Notes |\n| ---      | ---   |\n| 500     \
    \ | Server Error |\n| 503      | Service unavailable | \n\n# Response Format\n\
    \nNearly every response from the server will be a JSON object, which will contain\
    \ a `responseStatus` attribute that matches the HTTP status of the response.\n\
    \nMost succesful responses will also include a `data` attribute that contains\
    \ the data related to your request. For instance using GET /account will return\
    \ the information for the account associated with your API key and access token.\n\
    \n\n## Error Responses\n\nError responses will have a similar format. The response\
    \ will contain a `responseStatus` which contains the HTTP status code and an `errors`\
    \ array, which will contain pertinent errors for the request. Each object in the\
    \ `errors` array will contain a human-readable `code` and some explanatory `detail`\
    \ text.\n\n## Common Errors \n\nAs you work with our suite of APIs, you'll likely\
    \ encounter one or more of these error codes throughout the process. Let's take\
    \ a look at some of the most common errors and how to resolve them quickly and\
    \ painlessly. \n\n### 400 Error - Bad Request:\n\n```json\n{\n  \"responseStatus\"\
    :400,\n  \"errors\":[\n    {\n      \"code\":\"ERROR_INVALID_PARAMETER\",\n  \
    \    \"detail\":\"Destination path cannot be an existing folder.\"\n    }\n  ]\n\
    }\n```\n\n```json\n{\n\_\"responseStatus\": 400,\n\_\"errors\": [\n\_\_{\n\_\_\
    \_\"code\": \"ERROR_INVALID_PASSWORD\",\n\_\_\_\"detail\": \"Password must be\
    \ longer than eight (8) characters and contain one uppercase letter, one lowercase\
    \ letter, and one number.\"\n\_\_}\n\_]\n}\n```\n\nThis error will generally mean\
    \ a paramater or body element is invalid or missing. We suggest taking another\
    \ look at the documentation of the API endpoint you're hitting to double check\
    \ for; missing required fields in the request, spelling errors, invalid values\
    \ be used. \n\nThe error messaging returned should point you exactly to what you\
    \ need to correct to avoid going through trial and error. \n\n\n### 401 Error\
    \ - Unauthorized \n\n```json\n{\n\_\"responseStatus\": 401,\n\_\"errors\": [\n\
    \_\_{\n\_\_\_\"code\": \"ERROR_INVALID_CREDENTIALS\",\n\_\_\_\"detail\": \"HTTP_UNAUTHORIZED\"\
    \n\_\_}\n\_]\n}\n```\n\nIf you encounter a 401, it means we're not recognizing\
    \ the credentials you're attempting to authenticate with. To resolve the issue;\
    \  \n\n1. Double check that your credenitals (API Key and Access Token) are correct.\n\
    2. Creating a second set of credentials (see \"Obtaining Your API Key and Access\
    \ Token\" above) and attempt the call again. \n3. If you're able to successfully\
    \ make a call, regenerate the Access Token of the first user and try the call\
    \ one last time. \n\nIf you're still encountering a 401, contact us for help.\n\
    \n### 403 Error - Forbidden\n\n```json\n{\n\_\"responseStatus\": 403,\n\_\"errors\"\
    : [\n\_\_{\n\_\_\_\"code\": \"ERROR_INSUFFICIENT_PRIVILEGES\",\n\_\_\_\"detail\"\
    : \"An error occurred\"\n\_\_}\n\_]\n}\n```\n\nSimilarly to a 401, you'll be unable\
    \ to complete an API call if you encounter this error. Unlike a 401, your credentials\
    \ were authenticated, but the authenticated user does not have permission to perform\
    \ the action you're attempting. \n\nTo resolve the issue you can either; \n- Execute\
    \ the call using an master user's credentials. \n- Log in to the ExaVault File\
    \ Manager OR use the **PATCH /updateUser** endpoint to update the user's permissions.\n\
    \n### 404 Error - Not Found\n\n```json \n{\n\_\"responseStatus\": 404,\n\_\"errors\"\
    : [\n\_\_{\n\_\_\_\"code\": \"ERROR_SHARE_NOT_FOUND\",\n\_\_\_\"detail\": \"Share\
    \ not found\"\n\_\_}\n\_]\n}\n```\n\nEncountering a 404 error means whatever type\
    \ of resource you're attempting to find or update; isn't being found. Usually,\
    \ this is just a case of using the wrong ID when using a call, and can be resolved\
    \ by fixing the ID on your call.  \n\nIf the ID on the call appears to be correct\
    \ we recommend taking the following steps: \n- Attempt a more generic GET call\
    \ to get a list of the type of resource you're looking for to see if you can find\
    \ the ID you're looking for. \n- Check your activity logs to see if what you're\
    \ looking for was recently deleted. \n\n\n# Identifying Resources\n\nMany API\
    \ methods require you to provide one or more resources, which may be expressed\
    \ as paths, ids, hashes, or some combination of the three (for calls that act\
    \ upon multiple resources). \n\nTo specify a resource by path, provide a fully\
    \ qualified string to the resource _relative to the associated user's home directory_.\
    \ This path will always begin with a forward slash. Only forward slash characters\
    \ may be used to separate the folders within a path string.\n\nTo specify a resource\
    \ by ID, you'll need to obtain that ID from some other API method first. For example,\
    \ **GET /resources/list** will return a list of resources in your account along\
    \ with their IDs. Once you have the ID of that resource, append it to the string\
    \ \"id:\" to specify that resource, such as `id:124447`. IDs are always whole-number\
    \ numeric values. \n\nTo specify a resource by hash, first obtain the hash from\
    \ another API method. Once you have the hash representing the resource, append\
    \ it to the string \"hash:\" to specify that resource, such as `hash:3a1597ca982231f6666c75bcc2bd9c85`\
    \ to indicate the resource with the hash value **3a1597ca982231f6666c75bcc2bd9c85**.\
    \ Hashes are always an alphanumeric sequence without any special characters or\
    \ punctuation.\n\n## Paths and Home Folders\n\nUsers with different home folders\
    \ will use different paths to refer to the same resource. As an example, suppose\
    \ there is a file located at **/Data/Production/Inbound/1595978053_G12.xml**.\
    \ For an admin-level user, or any user whose home folder permits them access to\
    \ the entire account, the path for that resource is **/Data/Production/Inbound/1595978053_G12.xml**.\
    \  For a user whose home folder is **/Data/Production/**, the path to the file\
    \ becomes **/Inbound/1595978053_G12.xml**\n\n# Transaction Limits\n\nThe daily\
    \ transaction limit restricts the overall number of operations you can perform\
    \ in a 24-hour period in your ExaVault account. Those transactions could be file\
    \ uploads, file downloads, making a shared folder, creating a user, deleting files,\
    \ to name a few examples. All operations performed in your account count against\
    \ the total daily transactions for your account, including:\n\n- FTP/SFTP operations\n\
    - Actions by users who are logged into your web interface\n- Interacting with\
    \ Receive folders\n- Receiving files through Send files and Shared Folders\n-\
    \ Accessing files shared through direct links\n- API access from any user using\
    \ any of the API keys for your account\n\nEach request sent to the API is one\
    \ transaction. When your account has exceeded its rolling 24-hour rate limit,\
    \ new operations will become available once the number of operations in the past\
    \ 24-hours is below your daily rate limit. The response status of rate-limited\
    \ API operations will be **429**.\n\n## Rate Limit Headers\n\nTo monitor your\
    \ daily account transaction usage, the response object returned by the server\
    \ for all API requests will include these custom headers:\n\n- **X-RateLimit-Limit**\
    \ indicates the total number of operations permitted within a rolling 24-hour\
    \ period across your entire account. This number is dependent upon the plan your\
    \ account is subscribed to, and whether you have an enterprise agreement in place.\n\
    - **X-RateLimit-Remaining** indicates the number of operations currently remaning\
    \ to you at that moment in time. \n\n\n# Webhooks\n\nExaVault provides a webhook\
    \ system for notifying you of changes to your account. The webhook sender will\
    \ send a POST request to an endpoint you have specified whenever certain actions\
    \ happen within your account. Account administrators can change these settings\
    \ within the ExaVault File Manager.\n\nWebhooks will attempt to send a message\
    \ up to 8 times with increasing timeouts between each attempt. All webhook requests\
    \ are tracked in the webhooks log within the ExaVault File Manager web interface.\n\
    \n## Configuring Webhooks\n\n1. Log into the ExaVault File Manager at your account\
    \ name address. i.e., if your account is exampleaccount.exavault.com, go to https://exampleaccount.exavault.com\
    \ and log in with your username and password.\n1. Click on the **My Account**\
    \ option in the left-hand sidebar.\n1. Click on the **Developer** tab\n1. Add\
    \ the URL where your webhook listener can receive requests\n1. Check the boxes\
    \ for the actions which should trigger your webhook.\n1. Scroll to the bottom\
    \ of the page to click SAVE SETTINGS.\n\n## Verification Signature\n\nWhen you\
    \ configure a webhook endpoint and triggering actions, a Verification Token will\
    \ be displayed below the webhook endpoint URL. You may use this token in combination\
    \ with the X-Exavault-Signature header to verify that ExaVault is the sender of\
    \ the webhook request.\n\n## Comparing the Signature\n\nYou'll can use this 3-step\
    \ procedure to validate an individual webhook request to ensure it was sent by\
    \ ExaVault.\n\n**1: Get Verification Token**\n\nIn order to verify the X-Exavault-Signature\
    \ header value, you'll first need to obtain the Verification Token for your account:\n\
    \n1. Click on the **My Account** option in the left-hand sidebar.\n1. Click on\
    \ the **Developer** tab\n1. Copy the Verification Token that appears below the\
    \ Webhooks Endpoint url field.\n\nEvery webhook request sent to your endpoint\
    \ URL will use the same verification token. This token won't change for your account.\n\
    \n**2: Concatenate Token and Request**\n\nOnce you have the verification token,\
    \ you'll concatenate that token along with the raw string representing the request\
    \ body that was received. \n\n**Do not convert the request body to any other type**\
    \ of object; if the library you're using automatically converts the request body\
    \ to an object, look for a method to obtain the raw request body as text.\n\n\
    **3: Calculate MD5 Hash**\n\nCalculate the md5 hash of that concatenation. The\
    \ result should match the contents of your X-Exavault-Signature header.\n\n##\
    \ Webhook Request Examples\n\nThe following examples demonstrate the structure\
    \ of webhook requests and how to validate the verification signature for an individual\
    \ request. All of these examples will use the same verification token; you'll\
    \ need to use the token for your account to do the same checks on your own webhook\
    \ requests.\n\n**User Connect Example**\n\n| Verification Token | X-Exavault-Signature\
    \ header value |\n| --- | --- |\n| efb7e0030e6cef1b45d3d74a67881a2b | 6e13eb14edfd0bd54feff96be131e155\
    \ |\n\n```json\n{\"accountname\":\"exampleaccount\",\"username\":\"exampleaccount\"\
    ,\"operation\":\"Connect\",\"protocol\":\"web\",\"path\":\"\",\"sourcepath\":\"\
    \",\"attempt\":1}\n```\n\n\n**User Disconnect Example**\n\n| Verification Token\
    \ | X-Exavault-Signature header value |\n| --- | --- |\n| efb7e0030e6cef1b45d3d74a67881a2b\
    \ | 186e8c73793666c8b5cfa0b55eee691d |\n\n```json\n{\"accountname\":\"exampleaccount\"\
    ,\"username\":\"exampleaccount\",\"operation\":\"Disconnect\",\"protocol\":\"\
    web\",\"path\":\"\",\"sourcepath\":\"\",\"attempt\":1}\n```\n\n**File Upload Example**\n\
    \n| Verification Token | X-Exavault-Signature header value |\n| --- | --- |\n\
    | efb7e0030e6cef1b45d3d74a67881a2b | e86119ce1b679c7b6010d9ac9a843a36 |\n\n```json\n\
    {\"accountname\":\"exampleaccount\",\"username\":\"exampleaccount\",\"operation\"\
    :\"Upload\",\"protocol\":\"web\",\"path\":\"/7df2beb1c50a8a066493ee47669a4319.jpg\"\
    ,\"sourcepath\":\"\",\"attempt\":1}\n```\n\n## Webhooks Logs\n\nAccount administrators\
    \ can track all of the webhook requests sent for your account within the ExaVault\
    \ File Manager web interface. \n\nTo access Webhook logs:\n\n1. Log into the ExaVault\
    \ File Manager at your account name address. i.e., if your account is exampleaccount.exavault.com,\
    \ go to https://exampleaccount.exavault.com and log in with your username and\
    \ password\n1. Click on the **Activity** option in the left-hand sidebar\n1. Click\
    \ on **Webhooks Logs**\n\nThe webhook logs will show each time a webhook request\
    \ was sent to your endpoint URL. The following information is recorded for each\
    \ request:\n  - date and time - when the system sent the request\n  - endpoint\
    \ url - where the webhook request was sent\n  - event - what triggered the webhook\n\
    \  - status - HTTP status or curl error code returned by the webhook endpoint\n\
    \  - attempt - how many times this request has been sent\n  - response size -\
    \ size of the response from your webhook endpoint\n  - details - the response\
    \ body returned from your webhook endpoint\n"
  version: "2.0"
servers:
- url: https://accountname.exavault.com/api/v2
  description: Replace accountname with your account name
tags:
- name: Authentication
  description: This section contains information on how to authenticate and logout
    from the API. **All ExaVault API calls (other than the authenticateUser method
    itself) require an access token.**
- name: Resources
  description: The file and folder management APIs allow you to work with the core
    of your account. You can upload or download files and create, move and delete
    files & folders, to name a few options.
- name: Activities
  description: The activity APIs allow you to get logs from your account. We track
    multiple types of under the umbrellas; __Activity Logs__ that show an action a
    user performed or initiated on a file, folder or the account. __Webhooks Logs__
    that show records of all outbound webhook calls made by ExaVault. Both can be
    optionally filtered to only return specific data you’re looking for.
- name: Users
  description: The user APIs allow you to create, update and delete users from your
    account. Users can be assigned unique permissions, set to expire after a certain
    time period, and more.
- name: Shares
  description: The sharing APIs allow you create and manage shares. Shares can be
    used to send a single file, share a folder, or set up a receive folder and its
    input form.
- name: Notifications
  description: The notifications APIs allow you to set up and manage notifications
    in your account. When an action is taken on a file folder, you can be notified
    via email or webhook.
- name: Email Lists
  description: The email lists APIs allow you to manage email lists that can be used
    for speeding up actions within the ExaVault File Manager such as adding your marketing
    team, Tom, Jane, and Harry, to a shared folder in a single action instead of three.
- name: Account
  description: The account APIs allow you review and change account settings. Many
    account settings will have immediate effects on all current and future users,
    so consider adding a user facing confirmation step before sending an update call.
- name: Form
  description: The forms APIs allow you to manage the inputs and data submitted through
    receive folder forms.
- name: Recipients
  description: The recipients APIs allow to retrieve, delete, or resend invitations
    for recipients of shared folders.
- name: Email
  description: The emails APIs allow you to generate welcome emails for account users
    and referral emails.
paths:
  /email-lists:
    get:
      tags:
      - Email Lists
      summary: Get all email groups
      description: 'Retrieve a list of all email groups by default. Results can optionally
        be limited by using paramaters to specify the request. '
      operationId: get-email-lists
      parameters:
      - name: ev-access-token
        in: header
        description: Access token required to make the API call.
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: 5dc97cc607985eb8da033220e7447647e7915fbf73808
      - name: include
        in: query
        description: Related record types to include in the response.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - user
      - name: ev-api-key
        in: header
        description: API Key required to make the API call.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
              examples:
                EmailListsResponse:
                  summary: Regular email list response
                  value:
                    responseStatus: 200
                    totalResults: 0
                    returnedResults: 1
                    data:
                    - id: 27
                      type: emailList
                      attributes:
                        name: ExaVault Test
                        created: {}
                        modified: {}
                        members:
                        - exavault@exavault.com
                        - exavault+1@exavault.com
                      relationships:
                        ownerUser:
                          data:
                            type: user
                            id: 124437
                EmailListsExtendedResponse:
                  summary: Email list reponse with included
                  value:
                    responseStatus: 200
                    data:
                    - id: 1
                      type: emailList
                      attributes:
                        name: My friends
                        created: {}
                        modified: {}
                        members:
                        - test@exavault.com
                        - test+1@exavault.com
                      relationships:
                        owner:
                          data:
                            type: user
                            id: 4
                    included:
                    - id: 4
                      type: user
                      attributes:
                        status: 1
                        created: {}
                        modified: {}
                        accessTimestamp: {}
                        accountId: 5
                        accountName: exavault
                        username: exavaultuser
                        nickname: exavaultnickname
                        email: test@exavault.com
                        homeDir: /
                        permissions:
                          download: true
                          upload: true
                          modify: true
                          delete: true
                          list: true
                          changePassword: true
                          share: true
                          notification: true
                          viewFormData: true
                          deleteFormData: true
                        role: admin
                        timeZone: America/Chicago
                        onboarding: false
                        firstLogin: false
    post:
      tags:
      - Email Lists
      summary: Create new email list
      description: Create a new email list. Among other things, email lists can be
        used to send files or share folders with a group of email addresses at once.
      operationId: post-email-lists
      parameters:
      - name: ev-access-token
        in: header
        description: Access token required to make the API call.
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: 5dc97cc607985eb8da033220e7447647e7915fbf73808
      - name: ev-api-key
        in: header
        description: API Key required to make the API call.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/body'
            examples:
              Example Body:
                value:
                  name: ExaVault Test
                  emails:
                  - exavault@exavault.com
                  - exavault+1@exavault.com
      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailListsResponse_1'
              examples:
                Successful Operation:
                  value:
                    responseStatus: 201
                    data:
                      id: 27
                      type: emailList
                      attributes:
                        name: ExaVault Test
                        created: {}
                        modified: {}
                        members:
                        - exavault@exavault.com
                        - exavault+1@exavault.com
                      relationships:
                        ownerUser:
                          data:
                            type: user
                            id: 124437
  /email-lists/{id}:
    get:
      tags:
      - Email Lists
      summary: Get individual email list
      description: 'Retrieve all the metadata tied to a specific email list. '
      operationId: get-email-lists-id
      parameters:
      - name: ev-access-token
        in: header
        description: Access token required to make the API call.
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: 5dc97cc607985eb8da033220e7447647e7915fbf73808
      - name: id
        in: path
        description: Form id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: ev-api-key
        in: header
        description: API Key required to make the API call.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailListResponse_1'
              examples:
                Successful Operation:
                  value:
                    responseStatus: 200
                    data:
                      id: 27
                      type: emailList
                      attributes:
                        name: email list test
                        created: {}
                        modified: {}
                        members:
                        - omorgan@exavault.com
                        - omorgan+1@exavault.com
                      relationships:
                        ownerUser:
                          data:
                            type: user
                            id: 124437
    delete:
      tags:
      - Email Lists
      summary: Delete an email list with given id
      description: 'Permanently delete an email list. List action is not reversable.
        We recommend making a user confirm this action before sending the API call. '
      operationId: delete-email-list
      parameters:
      - name: ev-access-token
        in: header
        description: Access token required to make the API call.
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: 5dc97cc607985eb8da033220e7447647e7915fbf73808
      - name: id
        in: path
        description: Form id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: ev-api-key
        in: header
        description: 'API Key required to make the API call. '
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_1'
              examples:
                Successful Operation:
                  value:
                    responseStatus: 200
                    data: []
    patch:
      tags:
      - Email Lists
      summary: Update an email list
      description: 'Update an email list in your account. This is full replace, so
        if you do not want to delete an email already on your list, be sure to include
        the email in your call. '
      operationId: patch-email-list
      parameters:
      - name: ev-access-token
        in: header
        description: Access token required to make the API call.
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: 5dc97cc607985eb8da033220e7447647e7915fbf73808
      - name: id
        in: path
        description: Form id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: ev-api-key
        in: header
        description: 'API Key required to make the API call. '
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/body_1'
            examples:
              Example Body:
                value:
                  name: Test Email List
                  emails:
                  - test@exavault.com
                  - test+1@exavault.com
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailListsResponse_2'
              examples:
                Successful Operation:
                  value:
                    responseStatus: 200
                    data:
                      id: 27
                      type: emailList
                      attributes:
                        name: Test Email List
                        created: {}
                        modified: {}
                        members:
                        - test@exavault.com
                        - test+1@exavault.com
                      relationships:
                        ownerUser:
                          data:
                            type: user
                            id: 124437
  /forms:
    get:
      tags:
      - Form
      summary: Get form data for a receive folder
      description: |
        Returns the details of the form assigned to a receive folder.
      operationId: get-forms
      parameters:
      - name: ev-api-key
        in: header
        description: API key required to make the API call.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: shareHash
        in: query
        description: Share hash to retrieve the form for.
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: include
        in: query
        description: Related record types to include in the response.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - share
      - name: ev-access-token
        in: header
        description: Access Token required to make the API call.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_2'
              examples:
                Form:
                  summary: Regular form response
                  value:
                    responseStatus: 200
                    data:
                      id: 459
                      type: form
                      attributes:
                        elements:
                        - id: 2329
                          name: Your Name
                          order: 0
                          type: name
                          settings:
                            isRequired: false
                            senderEmail: false
                            useAsFolderName: false
                            width: 1
                        - id: 2331
                          name: Email Address
                          order: 1
                          type: email
                          settings:
                            isRequired: true
                            senderEmail: false
                            useAsFolderName: true
                            width: 1
                        - id: 2333
                          name: Subject
                          order: 2
                          type: text
                          settings:
                            isRequired: true
                            senderEmail: false
                            useAsFolderName: false
                            width: 1
                        - id: 2335
                          name: Message
                          order: 3
                          type: textarea
                          settings:
                            isRequired: false
                            senderEmail: false
                            useAsFolderName: false
                            width: 1
                        - id: 2337
                          name: Upload Area
                          order: 4
                          type: upload_area
                          settings:
                            isRequired: false
                            senderEmail: false
                            useAsFolderName: false
                            width: 1
                        submitButtonText: Send Files
                        successMessage: Your files were uploaded
                        cssStyles: |-
                          #ev-widget-form {
                            /*Change this to change the font. Remove to use your website font*/
                            font-family: Helvetica Neue, sans-serif;
                            /*Makes the form the same width as your website */
                            margin: 0 -2%;
                          }
                          #ev-widget-form label{
                            width: 100%;
                          }
                          #ev-widget-form input,
                          #ev-widget-form textarea {
                            /*Changes color and thickness of borders on form elements */
                            border: 2px solid #ccc;
                            /*Changes spacing inside the form elements (top/bottom and left/right */
                            padding: 5px 5px;
                            /* Changes how far away the inputs are from their label */
                            margin-top: 2px;
                          }

                          #ev-widget-form input:focus,
                          #ev-widget-form textarea:focus {
                            /*Changes the color of the form elements when they are clicked in to */
                            border: 2px solid #b2cf88;
                            /*Removes glow effect from form elements that are clicked in to */
                            outline: none;
                          }

                          #ev-widget-form label {
                            font-size: 14px;
                            font-weight: bold;
                            /*Changes color of labels */
                            color: #232323
                          }

                          #ev-widget-form .ev-form-element-description {
                            /*Changes size of descriptions */
                            font-size: 12px;
                            /*Changes color of descriptions */
                            color: #777;
                            /* Changes how far away the descriptions are from their input */
                            margin-top: 2px;
                          }

                          #ev-widget-form textarea {
                            /* Makes textareas (multiline inputs) a taller. */
                            min-height: 90px;
                          }
                      relationships:
                        share:
                          data:
                            type: share
                            id: 1581
                FormExtended:
                  summary: Form response with relationships
                  value:
                    responseStatus: 200
                    data:
                      id: 459
                      type: form
                      attributes:
                        elements:
                        - id: 2329
                          name: Your Name
                          order: 0
                          type: name
                          settings:
                            isRequired: false
                            senderEmail: false
                            useAsFolderName: false
                            width: 1
                        - id: 2331
                          name: Email Address
                          order: 1
                          type: email
                          settings:
                            isRequired: true
                            senderEmail: false
                            useAsFolderName: true
                            width: 1
                        - id: 2333
                          name: Subject
                          order: 2
                          type: text
                          settings:
                            isRequired: true
                            senderEmail: false
                            useAsFolderName: false
                            width: 1
                        - id: 2335
                          name: Message
                          order: 3
                          type: textarea
                          settings:
                            isRequired: false
                            senderEmail: false
                            useAsFolderName: false
                            width: 1
                        - id: 2337
                          name: Upload Area
                          order: 4
                          type: upload_area
                          settings:
                            isRequired: false
                            senderEmail: false
                            useAsFolderName: false
                            width: 1
                        submitButtonText: Send Files
                        successMessage: Your files were uploaded
                        cssStyles: |-
                          #ev-widget-form {
                            /*Change this to change the font. Remove to use your website font*/
                            font-family: Helvetica Neue, sans-serif;
                            /*Makes the form the same width as your website */
                            margin: 0 -2%;
                          }
                          #ev-widget-form label{
                            width: 100%;
                          }
                          #ev-widget-form input,
                          #ev-widget-form textarea {
                            /*Changes color and thickness of borders on form elements */
                            border: 2px solid #ccc;
                            /*Changes spacing inside the form elements (top/bottom and left/right */
                            padding: 5px 5px;
                            /* Changes how far away the inputs are from their label */
                            margin-top: 2px;
                          }

                          #ev-widget-form input:focus,
                          #ev-widget-form textarea:focus {
                            /*Changes the color of the form elements when they are clicked in to */
                            border: 2px solid #b2cf88;
                            /*Removes glow effect from form elements that are clicked in to */
                            outline: none;
                          }

                          #ev-widget-form label {
                            font-size: 14px;
                            font-weight: bold;
                            /*Changes color of labels */
                            color: #232323
                          }

                          #ev-widget-form .ev-form-element-description {
                            /*Changes size of descriptions */
                            font-size: 12px;
                            /*Changes color of descriptions */
                            color: #777;
                            /* Changes how far away the descriptions are from their input */
                            margin-top: 2px;
                          }

                          #ev-widget-form textarea {
                            /* Makes textareas (multiline inputs) a taller. */
                            min-height: 90px;
                          }
                      relationships:
                        share:
                          data:
                            type: share
                            id: 1581
                    included:
                    - id: 1581
                      type: share
                      attributes:
                        name: HomeTest
                        hasPassword: false
                        public: true
                        accessMode: upload
                        accessDescription: Receive folder
                        embed: false
                        hash: 1a6-eel4wett
                        ownerHash: 1a6-eel4wegt-9t0xc3jb
                        expired: false
                        type: receive
                        requireEmail: false
                        fileDropCreateFolders: false
                        formId: 459
                        assets:
                        - HomeTest
                        paths:
                        - /HomeTest
                        recipients: []
                        messages: []
                        status: 1
                        hasNotification: true
                        created: {}
                        modified: {}
  /forms/{id}:
    get:
      tags:
      - Form
      summary: Get form details
      description: |
        Returns the details of the designated from on a receive folder.
      operationId: get-forms-id
      parameters:
      - name: ev-api-key
        in: header
        description: API key required to make the API call.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: id
        in: path
        description: Form ID to retrieve the setup for
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      - name: include
        in: query
        description: Related record types to include in the response.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - share
      - name: ev-access-token
        in: header
        description: Access Token required to make the API call.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_3'
              examples:
                Form:
                  summary: Regular form response
                  value:
                    responseStatus: 200
                    data:
                      id: 459
                      type: form
                      attributes:
                        elements:
                        - id: 2329
                          name: Your Name
                          order: 0
                          type: name
                          settings:
                            isRequired: false
                            senderEmail: false
                            useAsFolderName: false
                            width: 1
                        - id: 2331
                          name: Email Address
                          order: 1
                          type: email
                          settings:
                            isRequired: true
                            senderEmail: false
                            useAsFolderName: true
                            width: 1
                        - id: 2333
                          name: Subject
                          order: 2
                          type: text
                          settings:
                            isRequired: true
                            senderEmail: false
                            useAsFolderName: false
                            width: 1
                        - id: 2335
                          name: Message
                          order: 3
                          type: textarea
                          settings:
                            isRequired: false
                            senderEmail: false
                            useAsFolderName: false
                            width: 1
                        - id: 2337
                          name: Upload Area
                          order: 4
                          type: upload_area
                          settings:
                            isRequired: false
                            senderEmail: false
                            useAsFolderName: false
                            width: 1
                        submitButtonText: Send Files
                        formDescription: test test
                        successMessage: Your files were uploaded
                        cssStyles: |-
                          #ev-widget-form {
                            /*Change this to change the font. Remove to use your website font*/
                            font-family: Helvetica Neue, sans-serif;
                            /*Makes the form the same width as your website */
                            margin: 0 -2%;
                          }
                          #ev-widget-form label{
                            width: 100%;
                          }
                          #ev-widget-form input,
                          #ev-widget-form textarea {
                            /*Changes color and thickness of borders on form elements */
                            border: 2px solid #ccc;
                            /*Changes spacing inside the form elements (top/bottom and left/right */
                            padding: 5px 5px;
                            /* Changes how far away the inputs are from their label */
                            margin-top: 2px;
                          }

                          #ev-widget-form input:focus,
                          #ev-widget-form textarea:focus {
                            /*Changes the color of the form elements when they are clicked in to */
                            border: 2px solid #b2cf88;
                            /*Removes glow effect from form elements that are clicked in to */
                            outline: none;
                          }

                          #ev-widget-form label {
                            font-size: 14px;
                            font-weight: bold;
                            /*Changes color of labels */
                            color: #232323
                          }

                          #ev-widget-form .ev-form-element-description {
                            /*Changes size of descriptions */
                            font-size: 12px;
                            /*Changes color of descriptions */
                            color: #777;
                            /* Changes how far away the descriptions are from their input */
                            margin-top: 2px;
                          }

                          #ev-widget-form textarea {
                            /* Makes textareas (multiline inputs) a taller. */
                            min-height: 90px;
                          }
                      relationships:
                        share:
                          data:
                            type: share
                            id: 1581
                FormExtended:
                  summary: Form response with relationships
                  value:
                    responseStatus: 200
                    data:
                      id: 459
                      type: form
                      attributes:
                        elements:
                        - id: 2329
                          name: Your Name
                          order: 0
                          type: name
                          settings:
                            isRequired: false
                            senderEmail: false
                            useAsFolderName: false
                            width: 1
                        - id: 2331
                          name: Email Address
                          order: 1
                          type: email
                          settings:
                            isRequired: true
                            senderEmail: false
                            useAsFolderName: true
                            width: 1
                        - id: 2333
                          name: Subject
                          order: 2
                          type: text
                          settings:
                            isRequired: true
                            senderEmail: false
                            useAsFolderName: false
                            width: 1
                        - id: 2335
                          name: Message
                          order: 3
                          type: textarea
                          settings:
                            isRequired: false
                            senderEmail: false
                            useAsFolderName: false
                            width: 1
                        - id: 2337
                          name: Upload Area
                          order: 4
                          type: upload_area
                          settings:
                            isRequired: false
                            senderEmail: false
                            useAsFolderName: false
                            width: 1
                        submitButtonText: Send Files
                        formDescription: test test
                        successMessage: Your files were uploaded
                        cssStyles: |-
                          #ev-widget-form {
                            /*Change this to change the font. Remove to use your website font*/
                            font-family: Helvetica Neue, sans-serif;
                            /*Makes the form the same width as your website */
                            margin: 0 -2%;
                          }
                          #ev-widget-form label{
                            width: 100%;
                          }
                          #ev-widget-form input,
                          #ev-widget-form textarea {
                            /*Changes color and thickness of borders on form elements */
                            border: 2px solid #ccc;
                            /*Changes spacing inside the form elements (top/bottom and left/right */
                            padding: 5px 5px;
                            /* Changes how far away the inputs are from their label */
                            margin-top: 2px;
                          }

                          #ev-widget-form input:focus,
                          #ev-widget-form textarea:focus {
                            /*Changes the color of the form elements when they are clicked in to */
                            border: 2px solid #b2cf88;
                            /*Removes glow effect from form elements that are clicked in to */
                            outline: none;
                          }

                          #ev-widget-form label {
                            font-size: 14px;
                            font-weight: bold;
                            /*Changes color of labels */
                            color: #232323
                          }

                          #ev-widget-form .ev-form-element-description {
                            /*Changes size of descriptions */
                            font-size: 12px;
                            /*Changes color of descriptions */
                            color: #777;
                            /* Changes how far away the descriptions are from their input */
                            margin-top: 2px;
                          }

                          #ev-widget-form textarea {
                            /* Makes textareas (multiline inputs) a taller. */
                            min-height: 90px;
                          }
                      relationships:
                        share:
                          data:
                            type: share
                            id: 1581
                    included:
                    - id: 1581
                      type: share
                      attributes:
                        name: HomeTest
                        hasPassword: false
                        public: true
                        accessMode: upload
                        accessDescription: Receive folder
                        embed: false
                        hash: 1a6-eel4nxrt
                        ownerHash: 1a6-eel4nxrt-9t0xc3jb
                        expired: false
                        type: receive
                        requireEmail: false
                        fileDropCreateFolders: false
                        formId: 459
                        assets:
                        - HomeTest
                        paths:
                        - /HomeTest
                        recipients: []
                        messages: []
                        status: 1
                        hasNotification: true
                        created: {}
                        modified: {}
    patch:
      tags:
      - Form
      summary: Updates a form with given parameters
      description: 'Add, update, or delete a form''s parameters. This call will replace
        your current form in its entirety, so if you want to keep any existing elements
        unchanged, submit the call with an element''s current settings to preserve
        them. '
      operationId: updateForm
      parameters:
      - name: ev-access-token
        in: header
        description: Access token required to make the API call.
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: 5dc97cc607985eb8da033220e7447647e7915fbf73808
      - name: id
        in: path
        description: Form id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: ev-api-key
        in: header
        description: API Key required to make the API call.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/body_2'
            examples:
              Example Body:
                value:
                  formDescription: hello world
                  submitButtonText: goodbye world
                  successMessage: thank you
                  elements:
                  - name: Name
                    order: 0
                    type: name
                    settings:
                      isRequired: "true"
                      senderEmail: "false"
                      useAsFolderName: "false"
                      description: this is a description test
                      width: 1
                  - id: 2331
                    name: Email Address
                    order: 1
                    type: email
                    settings:
                      isRequired: true
                      senderEmail: false
                      useAsFolderName: false
                      width: 1
                  - id: 2333
                    name: Subject
                    order: 2
                    type: text
                    settings:
                      isRequired: true
                      senderEmail: false
                      useAsFolderName: false
                      width: 1
                  - id: 2335
                    name: Message
                    order: 3
                    type: textarea
                    settings:
                      isRequired: false
                      senderEmail: false
                      useAsFolderName: false
                      width: 1
                  - id: 2337
                    name: Upload Area
                    order: 4
                    type: upload_area
                    settings:
                      isRequired: false
                      senderEmail: false
                      useAsFolderName: false
                      width: 1
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Regular form response'
              examples:
                Successful Operation:
                  value:
                    responseStatus: 200
                    data:
                      id: 459
                      type: form
                      attributes:
                        elements:
                        - id: 2351
                          name: rename test
                          order: 0
                          type: name
                          settings:
                            isRequired: "true"
                            senderEmail: false
                            useAsFolderName: "false"
                            description: this is a description test
                            width: "1"
                        - id: 2331
                          name: Email Address
                          order: 1
                          type: email
                          settings:
                            isRequired: true
                            senderEmail: false
                            useAsFolderName: false
                            width: 1
                        - id: 2333
                          name: Subject
                          order: 2
                          type: text
                          settings:
                            isRequired: true
                            senderEmail: false
                            useAsFolderName: false
                            width: 1
                        - id: 2335
                          name: Message
                          order: 3
                          type: textarea
                          settings:
                            isRequired: false
                            senderEmail: false
                            useAsFolderName: false
                            width: 1
                        - id: 2337
                          name: Upload Area
                          order: 4
                          type: upload_area
                          settings:
                            isRequired: false
                            senderEmail: false
                            useAsFolderName: false
                            width: 1
                        submitButtonText: goodbye world
                        formDescription: hello world
                        successMessage: thank you
                      relationships:
                        share:
                          data:
                            type: share
                            id: 1581
  /forms/{shareHash}/entries:
    post:
      tags:
      - Form
      summary: Add user data to a form
      description: |
        Upload collected form field data and associate the data with files that are in the receive folder.
      operationId: formEntries
      parameters:
      - name: ev-api-key
        in: header
        description: API key required to make the API call.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: shareHash
        in: path
        description: Hash of a receive that related to a given form
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/body_3'
      responses:
        "201":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_201'
  /forms/entries/{shareHash}/{entryId}/{nodeId}:
    post:
      tags:
      - Form
      summary: Add a form submission
      description: |
        Adds a set of submission data to the form submission history
      operationId: add-form-message
      parameters:
      - name: ev-api-key
        in: header
        description: API Key
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: exampleaccount-zwSuWUZ8S38h33qPS8v0s
      - name: ev-access-token
        in: header
        description: Access Token
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: 19853ef63a0bc348024a9e4cfd4a92520d2dfd04e88d8679fb1ed6bc551593d1
      - name: entryId
        in: path
        description: Id of the entry to associate a node with
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: nodeId
        in: path
        description: Id of the node to be associated with an entry
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: shareHash
        in: path
        description: Hash of a share that owns current form
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_201_1'
  /forms/entries/complete-entry/{id}:
    post:
      tags:
      - Form
      description: |
        Notifies about form entry completion
      parameters:
      - name: ev-api-key
        in: header
        description: API key required to make the API call.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: id
        in: path
        description: Id of the entry to be completed
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_4'
  /forms/entries/{id}:
    get:
      tags:
      - Form
      description: |
        Returns form data entries for a specific form
      parameters:
      - name: ev-access-token
        in: header
        description: Access token required to make the API call.
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: 5dc97cc607985eb8da033220e7447647e7915fbf73808
      - name: formId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: limit
        in: query
        description: Limit of records to be returned (for pagination)
        required: false
        style: form
        explode: true
        schema:
          type: integer
        example: 10
      - name: offset
        in: query
        description: Current offset of records (for pagination)
        required: false
        style: form
        explode: true
        schema:
          type: integer
        example: 100
      - name: ev-api-key
        in: header
        description: 'API Key required to make the API call. '
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FormDataResponse'
              example:
                responseStatus: 200
                totalResults: 2
                returnedResults: 2
                data:
                - Name: test
                  created: {}
                  Details (optional): Please call to discuss 510 555 1212
                  paths:
                  - /Customers/uploads/Smedley/prospectus.docx
                - Name: July
                  created: {}
                  Details (optional): ""
                  paths:
                  - /Customers/uploads/George/Draft_Schedule_THREE.xlsx
                  - /Customers/uploads/George/README.md
                  - /Customers/uploads/George/assets_FINAL.zip
    delete:
      tags:
      - Form
      description: |
        Deletes form data for a given entry id
      parameters:
      - name: ev-access-token
        in: header
        description: Access token required to make the API call.
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: 5dc97cc607985eb8da033220e7447647e7915fbf73808
      - name: id
        in: path
        description: Id of the entry to be deleted data for
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: ev-api-key
        in: header
        description: 'API Key required to make the API call. '
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successful operation
  /activity/session:
    get:
      tags:
      - Activity
      summary: Get activity logs
      description: 'Returns the activity logs for your account. Optional query paramaters
        will filter the returned results based on a number of options including usernames,
        activtiy types, or date ranges. '
      operationId: get-activity-logs
      parameters:
      - name: ev-api-key
        in: header
        description: API Key
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: exampleaccount-zwSuWUZ8S38h33qPS8v0s
      - name: ev-access-token
        in: header
        description: Access Token
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: 19853ef63a0bc348024a9e4cfd4a92520d2dfd04e88d8679fb1ed6bc551593d1
      - name: offset
        in: query
        description: Offset of the records list
        required: false
        style: form
        explode: true
        schema:
          type: integer
        example: 100
      - name: limit
        in: query
        description: Limit of the records list
        required: false
        style: form
        explode: true
        schema:
          type: integer
        example: 10
      - name: userName
        in: query
        description: Username used for filtering a list
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: jdoe
      - name: path
        in: query
        description: Path used to filter records
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: /folder*
      - name: ipAddress
        in: query
        description: Used to filter session logs by ip address
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: 127.0.0.1
      - name: type
        in: query
        description: Filter session logs for operation type
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: EDIT_SHARE
      - name: startDate
        in: query
        description: Start date of the filter data range
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: ISO 8601
        example: {}
      - name: endDate
        in: query
        description: End date of the filter data range
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: ISO 8601
        example: {}
      - name: sort
        in: query
        description: Comma separated list sort params
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: -date
          enum:
          - date
          - -date
          - ip_address
          - -ip_address
          - username
          - -username
          - file
          - -file
          - type
          - -type
          - duration
          - -duration
          - size
          - -size
          - protocol
          - -protocol
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionActivityResponse'
  /activity/webhooks:
    get:
      tags:
      - Activity
      - Webhooks
      summary: Get webhook logs
      description: 'Returns the webhook logs for your account. Optional query paramaters
        will filter the returned results based on a number of options including path,
        tpye of event, or status code. '
      operationId: get-webhook-logs
      parameters:
      - name: ev-api-key
        in: header
        description: API Key
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: exampleaccount-zwSuWUZ8S38h33qPS8v0s
      - name: ev-access-token
        in: header
        description: Access Token
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: 19853ef63a0bc348024a9e4cfd4a92520d2dfd04e88d8679fb1ed6bc551593d1
      - name: offset
        in: query
        description: Records to skip before returning results
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
        example: 100
      - name: limit
        in: query
        description: Limit of the records list
        required: false
        style: form
        explode: true
        schema:
          maximum: 500
          minimum: 1
          type: integer
          example: 100
        example: 10
      - name: path
        in: query
        description: Path used to filter records
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: /Production
        example: /folder*
      - name: statusCode
        in: query
        description: Filter by webhook response status code
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 200
        example: 200
      - name: event
        in: query
        description: Filter by triggered event
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: Upload
          enum:
          - Upload
          - Download
          - Delete
          - Create Folder
          - Rename
          - Move
          - Copy
          - Compress
          - Extract
          - Share Folder
          - Send Files
          - Receive Files
          - Update Share
          - Update Receive
          - Delete Send
          - Delete Receive
          - Delete Share
          - Create Notification
          - Update Notification
          - Delete Notification
          - Create User
          - Update User
          - Delete User
          - Connect
          - Disconnect
        example: upload
      - name: sort
        in: query
        description: Comma separated list sort params
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: -date
          enum:
          - date
          - -date
          - endpoint_url
          - -endpoint_url
          - event
          - -event
          - status
          - -status
          - size
          - -size
          - attempt
          - -attempt
        example: -date,event
      - name: username
        in: query
        description: Filter by triggering username
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: exampleuser
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhooksActivityResponse'
              examples:
                Success:
                  value:
                    responseStatus: 200
                    totalResults: 1469
                    returnedResults: 1
                    data:
                    - id: 2602725
                      type: webhookActivity
                      attributes:
                        created: {}
                        endpointUrl: https://example.com/api/webhook
                        event: Upload
                        status: 200
                        attempt: 1
                        responseSize: 0
                        response: ""
  /notifications/{id}:
    get:
      tags:
      - Notifications
      summary: Get a notification's metadata
      description: Returns the specified notification object's metadata.
      parameters:
      - name: ev-access-token
        in: header
        description: Access token required to make the API call.
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: 5dc97cc607985eb8da033220e7447647e7915fbf73808
      - name: id
        in: path
        description: ID of the notification. Use <a href="#operation/getNotifications">getNotifications</a>
          if you need to lookup an ID.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 3
      - name: include
        in: query
        description: Related record types to include in the response.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - resource
          - share
          - user
        example: resource,share,user
      - name: ev-api-key
        in: header
        description: 'API Key required to make the API call. '
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_5'
              examples:
                'Successful Operation ':
                  value:
                    responseStatus: 200
                    data:
                      id: 1143
                      type: notification
                      attributes:
                        type: folder
                        path: /Test
                        name: /Test
                        action: upload
                        usernames:
                        - exavaultuser
                        recipients:
                        - id: 81
                          notificationId: 1143
                          email: exavault@exavault.com
                          created: {}
                          modified: {}
                        - id: 83
                          notificationId: 1143
                          email: exavault+1@exavault.com
                          created: {}
                          modified: {}
                        recipientEmails:
                        - exavault@exavault.com
                        - exavault+1@exavault.com
                        sendEmail: false
                        readableDescription: anybody uploads to '/Test'
                        readableDescriptionWithoutPath: anybody uploads to this folder
                        created: {}
                        modified: {}
                      relationships:
                        ownerUser:
                          data:
                            type: user
                            id: 124437
                        resource:
                          data:
                            type: resource
                            id: 2554051
    delete:
      tags:
      - Notifications
      summary: Delete a notification
      description: |
        Deletes the specified notification. Note that deleting a notification _only_ deletes the notification &ndash; it does not delete any underlying files or folders.
        >
        **Notes:**
        - Authenticated user requires notification permission.

        - Authenticated user should be the owner of the specified notification.
      parameters:
      - name: ev-access-token
        in: header
        description: Access token required to make the API call.
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: 5dc97cc607985eb8da033220e7447647e7915fbf73808
      - name: id
        in: path
        description: ID of the notification. Use <a href="#operation/getNotifications">getNotifications</a>
          if you need to lookup an ID.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
        example: 3
      - name: ev-api-key
        in: header
        description: API Key required to make the API call.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_6'
              examples:
                Successful Operation:
                  value:
                    responseStatus: 200
                    data: []
    patch:
      tags:
      - Notifications
      summary: Update a notification
      description: |
        Update an existing notification object.

        **Notes:**
        - Authenticated user should have notification permission.

        - Authenticated user should be the owner of the specified notification.
      parameters:
      - name: ev-access-token
        in: header
        description: Access token required to make the API call.
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: 5dc97cc607985eb8da033220e7447647e7915fbf73808
      - name: id
        in: path
        description: ID of the notification. Use <a href="#operation/getNotifications">getNotifications</a>
          if you need to lookup an ID.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 3
      - name: ev-api-key
        in: header
        description: API Key required to make the API call.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/body_4'
            examples:
              Example Body:
                value:
                  path: /Test Folder
                  action: upload
                  usernames:
                  - notice_user_all_recipients
                  sendEmail: "true"
                  emails:
                  - exavault@exavault.com
                  - exavault+1@exavault.com
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notification response object'
              examples:
                Successful Operation:
                  value:
                    responseStatus: 200
                    data:
                      id: 1143
                      type: notification
                      attributes:
                        type: folder
                        path: /Test
                        name: /Test
                        action: all
                        usernames:
                        - exavalutuser
                        recipients:
                        - id: 85
                          notificationId: 1143
                          email: exavault@exavault.com
                          created: {}
                          modified: {}
                        - id: 87
                          notificationId: 1143
                          email: exavault+1@exavualt.com
                          created: {}
                          modified: {}
                        recipientEmails:
                        - exavault@exavault.com
                        - exavault+1@exavualt.com
                        sendEmail: false
                        readableDescription: anybody uploads to, downloads from or
                          deletes from '/Test'
                        readableDescriptionWithoutPath: anybody uploads to or downloads
                          from this folder
                        created: {}
                        modified: {}
                      relationships:
                        ownerUser:
                          data:
                            type: user
                            id: 124437
                        resource:
                          data:
                            type: resource
                            id: 2554051
  /notifications/unsubscribe:
    post:
      tags:
      - Notifications
      summary: Unsubscribe an email from a notification
      description: 'Unsubscribe an email address from a notification. '
      parameters:
      - name: ev-api-key
        in: header
        description: API key required to make the API call.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: ev-access-token
        in: header
        description: 'Access Token required to make the API call. '
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/body_5'
      responses:
        "200":
          description: Successful Operation
  /notifications:
    get:
      tags:
      - Notifications
      summary: Get a list of notifications
      description: |-
        Returns array of all notification objects owned by the authenticated user. You can use sorting and filtering to limit the returned list.

        **Notes:**
          - Autheticated user should have notification permission
      parameters:
      - name: ev-access-token
        in: header
        description: Access token required to make the API call.
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: 5dc97cc607985eb8da033220e7447647e7915fbf73808
      - name: type
        in: query
        description: Type of notification to filter on.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - file
          - folder
          - shared_folder
          - send_receipt
          - share_receipt
          - file_drop
        example: file
      - name: offset
        in: query
        description: Starting notification record in the result set. Can be used for
          pagination.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 0
        example: 50
      - name: sort
        in: query
        description: Endpoint support multiple sort fields by allowing array of sort
          params. Sort fields should be applied in the order specified. The sort order
          for each sort field is ascending unless it is prefixed with a minus (“-“),
          in which case it will be descending.
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: sort_notifications_date
          enum:
          - sort_notifications_folder_name
          - -sort_notifications_folder_name
          - sort_notifications_path
          - -sort_notifications_path
          - sort_notifications_date
          - -sort_notifications_date
        example: sort_notifications_dat
      - name: limit
        in: query
        description: Number of notification records to return. Can be used for pagination.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 25
        example: 100
      - name: include
        in: query
        description: Related record types to include in the response.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - resource
          - share
          - user
        example: resource,share,user
      - name: ev-api-key
        in: header
        description: 'API Key required to make the API call. '
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_7'
              examples:
                Successful Operation:
                  value:
                    responseStatus: 200
                    totalResults: 1
                    returnedResults: 1
                    data:
                    - id: 1117
                      type: notification
                      attributes:
                        type: folder
                        path: /Test
                        name: /Test
                        action: all
                        usernames:
                        - exavaultuser
                        recipients:
                        - email: exavault@exavault.com
                          created: {}
                          modified: {}
                        recipientEmails:
                        - exavault@exavault.com
                        sendEmail: true
                        readableDescription: anybody uploads to, downloads from or
                          deletes from '/Test'
                        readableDescriptionWithoutPath: anybody uploads to or downloads
                          from this folder
                        created: {}
                        modified: {}
                      relationships:
                        ownerUser:
                          data:
                            type: user
                            id: 124437
                        resource:
                          data:
                            type: resource
                            id: 2554051
    post:
      tags:
      - Notifications
      summary: Create a new notification
      description: "Create a new notification for the given path in the current account.\
        \ Notifications can be sent via email or webhook. To enable email, pass an\
        \ array of email addresses to the `emails` parameter of this call. To enable\
        \ webhooks, setup the webhook callback URL in your account settings. \n\n\
        **Notes:**\n- Authenticated user requires notification permission.\n"
      parameters:
      - name: ev-access-token
        in: header
        description: Access token required to make the API call.
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: 5dc97cc607985eb8da033220e7447647e7915fbf73808
      - name: ev-api-key
        in: header
        description: 'API Key required to make API call. '
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: resource
        in: query
        description: 'Path to the resource where a notification will be created. '
        required: true
        style: form
        explode: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/body_6'
      responses:
        "201":
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notification response object_1'
              examples:
                Successful Operation:
                  value:
                    responseStatus: 201
                    data:
                      id: 1143
                      type: notification
                      attributes:
                        type: folder
                        path: /Test
                        name: /Test
                        action: upload
                        usernames:
                        - exavaultuser
                        recipients:
                        - id: 81
                          notificationId: 1143
                          email: exavault@exavault.com
                          created: {}
                          modified: {}
                        - id: 83
                          notificationId: 1143
                          email: exavault@exavault.com
                          created: {}
                          modified: {}
                        recipientEmails:
                        - exavault@exavault.com
                        - exavault+1@exavault.com
                        sendEmail: false
                        readableDescription: anybody uploads to '/Test'
                        readableDescriptionWithoutPath: anybody uploads to this folder
                        created: {}
                        modified: {}
                      relationships:
                        ownerUser:
                          data:
                            type: user
                            id: 124437
                        resource:
                          data:
                            type: resource
                            id: 2554051
  /users:
    get:
      tags:
      - Users
      summary: Get a list of users
      description: |
        Gets array of all user objects in your account. Each element of the array will contain details on a single user.

        **Notes:**
        - Authenticated user's role must be admin or master.
      operationId: get-users
      parameters:
      - name: ev-access-token
        in: header
        description: Access token required to make the API call.
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: 5dc97cc607985eb8da033220e7447647e7915fbf73808
      - name: username
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: testuser
      - name: offset
        in: query
        description: Starting user record in the result set. Can be used for pagination.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 0
        example: 50
      - name: sort
        in: query
        description: Endpoint support multiple sort fields by allowing array of sort
          params. Sort fields should be applied in the order specified. The sort order
          for each sort field is ascending unless it is prefixed with a minus (“-“),
          in which case it will be descending.
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: sort_users_nickname
          enum:
          - sort_users_nickname
          - -sort_users_nickname
          - sort_users_username
          - -sort_users_username
          - sort_users_email
          - -sort_users_email
          - sort_users_home_folder
          - -sort_users_home_folder
        example: sort_users_home_folder
      - name: limit
        in: query
        description: Number of users to return. Can be used for pagination.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 25
        example: 100
      - name: include
        in: query
        description: Comma separated list of relationships to include in response.
          Possible values are `resource`, `account`.
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: resource,account
      - name: ev-api-key
        in: header
        description: API key required to make the API call.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_8'
              examples:
                Successful Operations:
                  value:
                    responseStatus: 200
                    totalResults: 3
                    returnedResults: 3
                    data:
                    - id: 124421
                      type: user
                      attributes:
                        status: 1
                        created: {}
                        modified: {}
                        accessTimestamp: {}
                        accountName: exavault
                        username: exavaultuser
                        nickname: exavaultnickname
                        email: test@exavault.com
                        permissions:
                          download: true
                          upload: true
                          modify: true
                          delete: true
                          list: true
                          changePassword: true
                          share: true
                          notification: true
                          viewFormData: true
                          deleteFormData: true
                        homeDir: /
                        onboarding: true
                        firstLogin: false
                        role: admin
                        timeZone: America/Los_Angeles
                      relationships:
                        ownerAccount:
                          data:
                            type: account
                            id: 251
                        homeResource:
                          data:
                            type: resource
                            id: 2536831
                    - id: 124423
                      type: user
                      attributes:
                        status: 1
                        created: {}
                        modified: {}
                        accessTimestamp: {}
                        accountName: exavault
                        username: exavaultuser
                        nickname: exavaultnickname
                        email: test@exavault.com
                        permissions:
                          download: true
                          upload: true
                          modify: true
                          delete: true
                          list: true
                          changePassword: true
                          share: true
                          notification: true
                          viewFormData: true
                          deleteFormData: true
                        homeDir: /
                        onboarding: true
                        role: user
                        timeZone: America/Los_Angeles
                      relationships:
                        ownerAccount:
                          data:
                            type: account
                            id: 251
                        homeResource:
                          data:
                            type: resource
                            id: 2536831
                    - id: 124439
                      type: user
                      attributes:
                        status: 1
                        created: {}
                        modified: {}
                        accessTimestamp: {}
                        accountName: exavault
                        username: exavaultuser
                        nickname: exavaultnickname
                        email: test+4@exavault.com
                        permissions:
                          download: true
                          upload: true
                          modify: true
                          delete: true
                          list: true
                          changePassword: true
                          share: true
                          notification: false
                          viewFormData: false
                          deleteFormData: false
                        homeDir: /Sample Files and Folders
                        onboarding: false
                        role: user
                        timeZone: America/Los_Angeles
                      relationships:
                        ownerAccount:
                          data:
                            type: account
                            id: 251
                        homeResource:
                          data:
                            type: resource
                            id: 2536835
    post:
      tags:
      - Users
      summary: Create a user
      description: "Adds a new user to the account. The user may be configured as\
        \ an admin or standard user, and (if a standard user) may be assigned a restricted\
        \ home directory and restricted permissions. \n\n**Notes:**\n- Authenticated\
        \ user's role must be admin or master; standard users are not allowed to create\
        \ other users.\n"
      operationId: create-user
      parameters:
      - name: ev-access-token
        in: header
        description: Access token required to make the API call.
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: 5dc97cc607985eb8da033220e7447647e7915fbf73808
      - name: ev-api-key
        in: header
        description: API key required to make the API call
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: exampleaccount-zwSuWUZ8S38h33qPS8v0s
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/body_7'
            examples: {}
          multipart/form-data:
            schema:
              type: object
              properties: {}
      responses:
        "201":
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User response object'
              examples:
                Successful Operation:
                  value:
                    responseStatus: 201
                    data:
                      id: 124449
                      type: user
                      attributes:
                        status: 1
                        expiration: {}
                        created: {}
                        modified: {}
                        accountName: exavault
                        username: exavaultuser
                        nickname: exavaultnickname
                        email: test@exavault.com
                        permissions:
                          download: true
                          upload: true
                          modify: false
                          delete: false
                          list: false
                          changePassword: false
                          share: false
                          notification: false
                          viewFormData: false
                          deleteFormData: false
                        homeDir: /
                        onboarding: false
                        role: user
                        timeZone: America/Los_Angeles
                      relationships:
                        ownerAccount:
                          data:
                            type: account
                            id: 251
                        homeResource:
                          data:
                            type: resource
                            id: 2536831
  /users/{id}:
    get:
      tags:
      - Users
      summary: Get info for a user
      description: |
        Get details for the specified user in your account.  See the response sample, below, for full details.
      operationId: get-user
      parameters:
      - name: ev-access-token
        in: header
        description: Access token required to make the API call.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: 19853ef63a0bc348024a9e4cfd4a92520d2dfd04e88d8679fb1ed6bc551593d1
        example: 5dc97cc607985eb8da033220e7447647e7915fbf73808
      - name: id
        in: path
        description: The user's ID. Note that this is our internal ID, and _not the
          username_. You can obtain it by calling the <a href="#operation/getUser">getUser</a>
          method.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
        example: 5
      - name: include
        in: query
        description: Comma-separated list of relationships to include in response.
          Possible values include `homeResource` and `ownerAccount`.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: homeResource,ownerAccount
        example: homeResource,owneraccount
      - name: ev-api-key
        in: header
        description: API Key
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: exampleaccount-zwSuWUZ8S38h33qPS8v0s
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_9'
              examples:
                Successful Operation:
                  value:
                    responseStatus: 200
                    data:
                      id: 124419
                      type: user
                      attributes:
                        status: 1
                        created: {}
                        modified: {}
                        accessTimestamp: {}
                        accountName: exavault
                        username: exavaultuser
                        nickname: exavaultnickname
                        email: test@exavault.com
                        permissions:
                          download: true
                          upload: true
                          modify: true
                          delete: true
                          list: true
                          changePassword: true
                          share: true
                          notification: true
                          viewFormData: true
                          deleteFormData: true
                        homeDir: /
                        onboarding: true
                        firstLogin: false
                        role: master
                        timeZone: America/Los_Angeles
                      relationships:
                        ownerAccount:
                          data:
                            type: account
                            id: 251
                        homeResource:
                          data:
                            type: resource
                            id: 2536831
    delete:
      tags:
      - Users
      summary: Delete a user
      description: "Delete a user from the account. Deleting a user does **NOT** delete\
        \ any files from the account; it merely removes a user's access. \n\nOnly\
        \ account administrators can delete a user\n"
      operationId: delete-user
      parameters:
      - name: ev-access-token
        in: header
        description: Access token required to make the API call.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: 19853ef63a0bc348024a9e4cfd4a92520d2dfd04e88d8679fb1ed6bc551593d1
        example: 5dc97cc607985eb8da033220e7447647e7915fbf73808
      - name: id
        in: path
        description: The user's ID. Note that this is our internal ID, and _not the
          username_. You can obtain it by calling the <a href="#operation/getUser">getUser</a>
          method.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
        example: 5
      - name: ev-api-key
        in: header
        description: API key required to make the API call.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: exampleaccount-zwSuWUZ8S38h33qPS8v0s
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_10'
              examples:
                Successful Operation:
                  value:
                    responseStatus: 200
                    data: []
    patch:
      tags:
      - Users
      summary: Update a user
      description: "Updates specified user record in your account. Note that the unique\
        \ key for this API call is our internal ID, and _not_ the username, as the\
        \ username can be changed.  \n\n**Notes:**\n- Authenticated user's role must\
        \ be admin or master.\n"
      operationId: update-user
      parameters:
      - name: ev-access-token
        in: header
        description: Access token required to make the API call.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: 19853ef63a0bc348024a9e4cfd4a92520d2dfd04e88d8679fb1ed6bc551593d1
        example: 5dc97cc607985eb8da033220e7447647e7915fbf73808
      - name: id
        in: path
        description: The user's ID. Note that this is our internal ID, and _not the
          username_. You can obtain it by calling the <a href="#operation/getUser">getUser</a>
          method.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
        example: 5
      - name: ev-api-key
        in: header
        description: API key required to make the API call.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: exampleaccount-zwSuWUZ8S38h33qPS8v0s
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/body_8'
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_11'
              examples:
                Successful Operation:
                  value:
                    responseStatus: 200
                    data:
                      id: 124447
                      type: user
                      attributes:
                        status: 1
                        expiration: {}
                        created: {}
                        modified: {}
                        accessTimestamp: {}
                        accountName: exavault
                        username: exavaultuser
                        nickname: exavaultnickname
                        email: test@exavault.com
                        permissions:
                          download: true
                          upload: true
                          modify: false
                          delete: false
                          list: false
                          changePassword: false
                          share: false
                          notification: false
                          viewFormData: false
                          deleteFormData: false
                        homeDir: /
                        onboarding: false
                        role: user
                        timeZone: America/Los_Angeles
                      relationships:
                        ownerAccount:
                          data:
                            type: account
                            id: 251
                        homeResource:
                          data:
                            type: resource
                            id: 2536831
  /resources/list:
    get:
      tags:
      - Resources
      summary: Get a list of all resources
      description: Returns a list of all resources in the account. List can be filtered
        with the addition of query parameters.
      operationId: getResourceList
      parameters:
      - name: ev-access-token
        in: header
        description: Access token required to make the API call.
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: 5dc97cc607985eb8da033220e7447647e7915fbf73808
      - name: hash
        in: query
        description: Hash of the resource to get listing of resources for. Required
          if no path specified.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: path
        in: query
        description: Path to get listing of resources for. Required if no hash specified.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: type
        in: query
        description: Optional param to get only folder resources.
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: folder
      - name: sortBy
        in: query
        description: Endpoint support multiple sort fields by allowing array of sort
          params. Sort fields should be applied in the order specified. The sort order
          for each sort field is ascending unless it is prefixed with a minus (“-“),
          in which case it will be descending.
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: sort_files_name
          enum:
          - sort_files_name
          - -sort_files_name
          - sort_files_size
          - -sort_files_size
          - sort_files_date
          - -sort_files_date
          - sort_files_type
          - -sort_files_type
      - name: offset
        in: query
        description: Determines which item to start on for pagination. Use zero (0)
          to start at the beginning of the list.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 0
      - name: limit
        in: query
        description: The number of files to limit the result. Cannot be set higher
          than 100. If you have more than one hundred files in your directory, make
          multiple calls to **getResourceList**, incrementing the **offset** parameter,
          above.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 50
      - name: include
        in: query
        description: Comma separated list of relationships to include in response.
          Possible values are `share`, `notification`, `directFile`, `parentNode`.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ev-api-key
        in: header
        description: API Key required to make the API call.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_12'
  /resources/{id}:
    get:
      tags:
      - Resources
      summary: Get resource metadata
      description: |
        Gets metadata for specified file/folder path, including things like upload date, size and type. For the full list of returned properties, see the response syntax, below.
        >
        **Notes:**
        - Authenticated user should have list permission.
      operationId: getResourceProperties
      parameters:
      - name: ev-access-token
        in: header
        description: Access token required to make the API call.
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: 5dc97cc607985eb8da033220e7447647e7915fbf73808
      - name: id
        in: path
        description: ID of the file or folder to get metadata for.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: include
        in: query
        description: Comma separated list of relationships to include in response.
          Possible values are `share`, `notification`, `directFile`, `parentNode`.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ev-api-key
        in: header
        description: API Key required to make the API call.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_13'
              examples:
                Successful Operation:
                  value:
                    responseStatus: 200
                    data:
                      id: 2554051
                      type: resource
                      attributes:
                        hash: 7a2abd9f90ce196hf3f650c612372c0b
                        name: Test
                        extension: ""
                        type: dir
                        createdBy: exavaultuser
                        uploadDate: {}
                        createdAt: {}
                        updatedAt: {}
                        accessedAt: {}
                        createdTime: 1595977163
                        updatedTime: 1596041567
                        accessedTime: 1596041616
                        path: /Test
                        size: 33415
                        fileCount: 2
                        previewable: false
                      relationships:
                        share:
                          data:
                            type: share
                            id: 1499
                        notifications:
                        - data:
                            type: notification
                            id: 1117
                        directFile:
                          data:
                            type: directFile
                            id: 101
                        parentResource:
                          data:
                            type: resource
                            id: 103
                        ownerUser:
                          data:
                            type: user
                            id: 124437
                        ownerAccount:
                          data:
                            type: account
                            id: 7
                    included:
                    - id: 1499
                      type: share
                      attributes:
                        name: Test
                        hasPassword: false
                        public: true
                        accessMode: download
                        accessDescription: Download only
                        embed: false
                        hash: 17t-eojdhh1j
                        ownerHash: 17t-eojowf1j-sfh242uj
                        expired: false
                        type: shared_folder
                        requireEmail: false
                        fileDropCreateFolders: false
                        assets:
                        - Test
                        paths:
                        - /Test
                        recipients: []
                        messages: []
                        status: 1
                        hasNotification: false
                        created: {}
                        modified: {}
                    - id: 101
                      type: directFile
                      attributes:
                        accountId: 7
                        path: /Test
                        isEnabled: true
                        isIndexEnabled: true
                        blockUntil: -001-11-29T16:07:02-07:52
                        created: {}
                        modified: {}
    delete:
      tags:
      - Resources
      summary: Delete a Resource
      description: |
        Delete the files/folders located at a given set of paths. Note that this call performs the delete **immediately**, and it is irreversible. We strongly recommend that you confirm your user's intention to delete file(s) before issuing this API call.

        **Notes:**
        - Authenticated user should have delete permission.
      operationId: delete-resource
      parameters:
      - name: ev-access-token
        in: header
        description: Access token required to make the API call.
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: 5dc97cc607985eb8da033220e7447647e7915fbf73808
      - name: id
        in: path
        description: ID of the file or folder to delete.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: ev-api-key
        in: header
        description: API Key required to make the API call.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_14'
              examples:
                Successful Operation:
                  value:
                    responseStatus: 200
                    data:
                      id: 2554101
                      type: resource
                      meta:
                        id: 2554101
    patch:
      tags:
      - Resources
      summary: Rename a resource.
      description: |
        Allows for updating the specified file or folder resource record's "name" parameter. The resource is identified by the numeric resource ID that is passed in as the last segment of the URI.
      parameters:
      - name: ev-access-token
        in: header
        description: Access token required to make the API call.
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: 5dc97cc607985eb8da033220e7447647e7915fbf73808
      - name: ev-api-key
        in: header
        description: API key required to make the API call.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: id
        in: path
        description: The numeric resource identifier. Resource IDs for all resources
          within a given directory, can be found by calling GET /resources/list using
          the resource ID of, or path to, that directory.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
        example: 5371
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/body_9'
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resource response object'
              examples:
                Successful Operations:
                  value:
                    responseStatus: 200
                    data:
                      id: 2554051
                      type: resource
                      attributes:
                        hash: 7a2hhf9f90ce196de3f650c612372c0b
                        name: Test Folder
                        extension: ""
                        type: dir
                        createdBy: exavaultuser
                        uploadDate: {}
                        createdAt: {}
                        updatedAt: {}
                        accessedAt: {}
                        createdTime: 1595977163
                        updatedTime: 1596043628
                        accessedTime: 1596041616
                        path: /Test Folder
                        size: 33415
                        fileCount: 2
                        previewable: false
                      relationships:
                        share:
                          data:
                            type: share
                            id: 1499
                        notifications:
                        - data:
                            type: notification
                            id: 1117
                        directFile:
                          data:
                            type: directFile
                            id: 101
                        parentResource:
                          data:
                            type: resource
                            id: 103
                        ownerUser:
                          data:
                            type: user
                            id: 124437
                        ownerAccount:
                          data:
                            type: account
                            id: 7
  /resources:
    get:
      tags:
      - Resources
      summary: Get Resource Properties
      description: |
        Gets metadata for specified file/folder id or hash, including things like upload date, size and type. For the full list of returned properties, see the response syntax, below.
        >
        **Notes:**
        - Authenticated user should have list permission.
      operationId: get-resource-properties
      parameters:
      - name: ev-access-token
        in: header
        description: Access token required to make the API call.
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: 5dc97cc607985eb8da033220e7447647e7915fbf73808
      - name: path
        in: query
        description: Paths of the file or folder to get metadata for.
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: hash
        in: query
        description: Hash of the file or folder to get metadata for.
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: include
        in: query
        description: Comma separated list of relationships to include in response.
          Possible values are `share`, `notification`, `directFile`, `resource`.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ev-api-key
        in: header
        description: API Key required to make the API call.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_15'
    post:
      tags:
      - Resources
      summary: Create a folder
      description: |
        Create a new folder at the specified path.
        >
        **Notes:**
        - Authenticated user should have modify permission.
      operationId: createFolder
      parameters:
      - name: ev-access-token
        in: header
        description: Access token required to make the API call.
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: 5dc97cc607985eb8da033220e7447647e7915fbf73808
      - name: ev-api-key
        in: header
        description: API Key required to make the API call.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/body_10'
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resource response object_1'
    delete:
      tags:
      - Resources
      summary: Delete Resources
      description: |
        Delete the files/folders located at a given set of paths. Note that this call performs the delete **immediately**, and it is irreversible. We strongly recommend that you confirm your user's intention to delete file(s) before issuing this API call.

        **Notes:**
        - Authenticated user should have delete permission.
      operationId: delete-resources
      parameters:
      - name: ev-api-key
        in: header
        description: API Key
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: exampleaccount-zwSuWUZ8S38h33qPS8v0s
      - name: ev-access-token
        in: header
        description: Access Token
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: 19853ef63a0bc348024a9e4cfd4a92520d2dfd04e88d8679fb1ed6bc551593d1
      - name: filePaths[]
        in: query
        description: Array containing paths of the files or folder to delete.
        required: true
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: id[]
        in: query
        description: Array containing ids of the files or folder to delete.
        required: true
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: hash[]
        in: query
        description: Array containing hashes of the files or folder to delete.
        required: true
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_14'
              examples:
                Successful Operation:
                  value:
                    responseStatus: 200
                    data:
                      id: 2554101
                      type: resource
                      meta:
                        id: 2554101
        "207":
          description: Multi Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resource delete multi response object'
  /resources/list/{id}:
    get:
      tags:
      - Resources
      summary: Get a list of resources
      description: "Get a listing of files/folders for the specified path. \n\nYou\
        \ can use this API call to get information about all files and folders at\
        \ a specified path. By default, the API returns basic metadata on each file/folder.\
        \ An optional 'detailed' parameter forces the return of additional metadata.\
        \ As with all API calls, the path should be the full path relative to the\
        \ user's home directory (e.g. `/myfiles/some_folder`).\n\n**Notes:**\n- Authenticated\
        \ user should have list permission.\n"
      parameters:
      - name: ev-access-token
        in: header
        description: Access token required to make the API call.
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: 5dc97cc607985eb8da033220e7447647e7915fbf73808
      - name: id
        in: path
        description: ID of the resource to get listing of resources for.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: sort
        in: query
        description: Sort method. Use in conjunction with **sort_order**, below.
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: sort_files_name
          enum:
          - sort_files_name
          - sort_files_size
          - sort_files_date
          - sort_files_type
      - name: offset
        in: query
        description: Determines which item to start on for pagination. Use zero (0)
          to start at the beginning of the list.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 0
      - name: limit
        in: query
        description: The number of files to limit the result. Cannot be set higher
          than 100. If you have more than one hundred files in your directory, make
          multiple calls to **getResourceList**, incrementing the **offset** parameter,
          above.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 50
      - name: include
        in: query
        description: Comma separated list of relationships to include in response.
          Possible values are `share`, `notification`, `directFile`, `resource`.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ev-api-key
        in: header
        description: 'API Key required to make the API call. '
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_16'
  /resources/compress:
    post:
      tags:
      - Resources
      summary: Compress resources
      description: |
        Create a zip archive containing the files from given set of paths. Note that this can be a very slow operation if you have indicated many files should be included in the archive.

        **Notes:**
        - Authenticated user should have modify permission.
      operationId: compressFiles
      parameters:
      - name: ev-access-token
        in: header
        description: Access token required to make the API call.
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: 5dc97cc607985eb8da033220e7447647e7915fbf73808
      - name: ev-api-key
        in: header
        description: API Key required to make the API call.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: resources[]
        in: query
        description: Array of resources to be compressed into a zip archive.
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: parentResource
        in: query
        description: Path where the new archive will be stored.
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: archiveName
        in: query
        description: Name of the newly created archive.
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "201":
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_201_2'
              examples:
                Successful Operation:
                  value:
                    responseStatus: 201
                    data:
                      id: 2566609
                      type: resource
                      attributes:
                        hash: b2d987d4ed9dhh28e3a18adafe59107c
                        name: Compress test.zip
                        extension: zip
                        type: file
                        createdBy: exavault
                        uploadDate: {}
                        createdAt: {}
                        updatedAt: {}
                        accessedAt: {}
                        createdTime: 1596074649
                        updatedTime: 1596074649
                        accessedTime: 1596074649
                        path: /Test/Compress test.zip
                        size: 33434
                        previewable: false
                      relationships:
                        parentResource:
                          data:
                            type: resource
                            id: 2554051
                        ownerUser:
                          data:
                            type: user
                            id: 124437
                        ownerAccount:
                          data:
                            type: account
                            id: 7
  /resources/extract:
    post:
      tags:
      - Resources
      summary: Extract resources
      description: |
        Extract the contents of a zip archive to a specified directory. Note that this can be a very slow operation.

        **Notes:**
        - Authenticated user should have modify permission.
      operationId: extractFiles
      parameters:
      - name: ev-access-token
        in: header
        description: Access token required to make the API call.
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: 5dc97cc607985eb8da033220e7447647e7915fbf73808
      - name: ev-api-key
        in: header
        description: API Key required to make the API call.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: resource
        in: query
        description: 'Path of the compressed resource, including the archive name. '
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: parentResource
        in: query
        description: 'Path for the extracted resoure(s) to be stored. '
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "201":
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_201_3'
              examples:
                Successful Operation:
                  value:
                    responseStatus: 201
                    returnedResults: 1
                    data:
                    - id: 2559471
                      type: resource
                      attributes:
                        hash: f836b417707583b017a26d4e5a2e6dd0
                        name: test.jpg
                        extension: jpg
                        type: file
                        createdBy: exavaultuser
                        uploadDate: {}
                        createdAt: {}
                        updatedAt: {}
                        accessedAt: {}
                        createdTime: 1596041567
                        updatedTime: 1596076051
                        accessedTime: 1596052238
                        path: /exavault/test.jpg
                        size: 33415
                        previewable: false
                      relationships:
                        parentResource:
                          data:
                            type: resource
                            id: 2554051
                        ownerUser:
                          data:
                            type: user
                            id: 124437
                        ownerAccount:
                          data:
                            type: account
                            id: 7
  /resources/copy:
    post:
      tags:
      - Resources
      summary: Copy resources
      description: "Copies a set of exisiting files/folders (provided by an array\
        \ **filePaths**) to the requested **destinationPath** in your account.\nIn\
        \ the **filePaths** array, you may specify paths pointing files/folders throughout\
        \ the account, but everything will be copied to the \nroot of the **destinationPath**.\n\
        \n**Notes:**\n- Authenticated user should have modify permission.\n"
      operationId: copyResources
      parameters:
      - name: ev-access-token
        in: header
        description: Access token required to make the API call.
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: 5dc97cc607985eb8da033220e7447647e7915fbf73808
      - name: ev-api-key
        in: header
        description: API Key required to make the API call.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: resources[]
        in: query
        description: Array of resources to be copied. Can be path/id/hash
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: parentResource
        in: query
        description: Destination of the copied files or folders. Can be path/id/hash
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_17'
              examples:
                Successful Operation:
                  value:
                    responseStatus: 200
                    data:
                      id: 2563533
                      type: resource
                      attributes:
                        hash: f573b417707095b017a26d4e5a2e6dd0
                        name: test.jpg
                        extension: jpg
                        type: file
                        createdBy: exavault
                        uploadDate: {}
                        createdAt: {}
                        updatedAt: {}
                        accessedAt: {}
                        createdTime: 1596052406
                        updatedTime: 1596052406
                        accessedTime: 1596052406
                        path: /HomeTest/test.jpg
                        size: 33415
                        previewable: false
                    meta:
                      path: /Test/test.jpg
                      destinationPath: /HomeTest
        "207":
          description: Multi Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resource multi response object'
  /resources/move:
    post:
      tags:
      - Resources
      summary: Move resources
      description: "Moves a set of exisiting files/folders (provided by an array **filePaths**)\
        \ to the requested **destinationPath** in your account.\nIn the **filePaths**\
        \ array, you may specify paths pointing files/folders throughout the account,\
        \ but everything will be moved to the \nroot of the **destinationPath**.\n\
        \n**Notes:**\n- Authenticated user should have modify permission.\n"
      operationId: move-resources
      parameters:
      - name: ev-access-token
        in: header
        description: Access token required to make the API call.
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: 5dc97cc607985eb8da033220e7447647e7915fbf73808
      - name: ev-api-key
        in: header
        description: API Key required to make the API call.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: resources
        in: query
        description: Resource name.
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: parentResource
        in: query
        description: Path to the resource.
        required: true
        style: form
        explode: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/body_11'
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_18'
        "207":
          description: Multi Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resource multi response object'
  /resources/preview:
    get:
      tags:
      - Resources
      summary: Preview a file
      description: "Returns a resized image of the specified document for supported\
        \ file types.\n\nImage data returned is encoded in base64 format and can be\
        \ viewed using the `<img>` element. \n\n```<img src='data:image/jpeg;base64'\
        \ + results.image/>```\n\n**Notes:**\n- Supported files types are `'jpg'`,\
        \ `'jpeg'`, `'gif'`, `'png'`, `'bmp'`, `'pdf'`, `'psd'`, `'doc'`\n"
      operationId: preview
      parameters:
      - name: ev-api-key
        in: header
        description: API Key
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: exampleaccount-zwSuWUZ8S38h33qPS8v0s
      - name: ev-access-token
        in: header
        description: Access Token
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: 19853ef63a0bc348024a9e4cfd4a92520d2dfd04e88d8679fb1ed6bc551593d1
      - name: resource
        in: query
        description: Path of the image relative to the user's home directory.
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: size
        in: query
        description: The size of the image.
        required: true
        style: form
        explode: true
        schema:
          type: string
          enum:
          - small
          - medium
          - large
      - name: width
        in: query
        description: Overrides sizes. Sets to a specific width.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: height
        in: query
        description: Overrides sizes. Sets to a specific height.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: page
        in: query
        description: Page number for the `.pdf` or `.doc` files.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 0
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreivewFile response object'
              examples:
                Successful Operation:
                  value:
                    responseStatus: 200
                    data:
                      id: 2554101
                      type: resource
                    meta:
                      image: exampleimagebinary
                      size: 13941
                      imageHash: 007e01062d91f9787f87c0cf78472d61
  /resources/upload:
    post:
      tags:
      - Resources
      summary: Upload a file
      description: |
        Uploads a file, with optional support for resuming a partially uploaded existing file.
      operationId: upload
      parameters:
      - name: ev-access-token
        in: header
        description: Access token required to make the API call.
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: 5dc97cc607985eb8da033220e7447647e7915fbf73808
      - name: offsetBytes
        in: header
        description: Allows a file upload to resume at a certain number of bytes.
        required: false
        style: simple
        explode: false
        schema:
          type: integer
        example: 4852
      - name: path
        in: query
        description: Destination path for the file being uploaded, including the file
          name.
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: fileSize
        in: query
        description: File size, in bits, of the file being uploaded.
        required: true
        style: form
        explode: true
        schema:
          type: integer
        example: 2935
      - name: resume
        in: query
        description: |
          True if upload resume is supported, false if it isn't.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: true
        example: true
      - name: allowOverwrite
        in: query
        description: True if the file should be overwritten, false if different file
          names should be generated. Call checkFilesExist first if you need to determine
          whether or not a file with the same name already exists.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
        example: true
      - name: ev-api-key
        in: header
        description: API Key required to make API call.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/body_12'
      responses:
        "201":
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resource response object'
              examples:
                Successful Operation:
                  value:
                    responseStatus: 201
                    data:
                      id: 2554085
                      type: resource
                      attributes:
                        hash: '******'
                        name: example file
                        extension: jpg
                        type: file
                        createdBy: exavault
                        uploadDate: {}
                        createdAt: {}
                        updatedAt: {}
                        accessedAt: {}
                        createdTime: 1595977795
                        updatedTime: 1595977796
                        accessedTime: 1595977795
                        path: /home/example file.jpg
                        size: 33415
                        previewable: false
                      relationships:
                        parentResource:
                          data:
                            type: resource
                            id: 2554083
                        ownerUser:
                          data:
                            type: user
                            id: 124437
                        ownerAccount:
                          data:
                            type: account
                            id: 7
  /resources/download:
    get:
      tags:
      - Resources
      summary: Download a file
      description: |
        Download a file.
        If more than one path is supplied, the files will be zipped before downloading with the downloadName param if supplied.
      operationId: download
      parameters:
      - name: ev-access-token
        in: header
        description: Access token required to make the API call.
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: 5dc97cc607985eb8da033220e7447647e7915fbf73808
      - name: resources
        in: query
        description: Path of file or folder to be downloaded, starting from the root.
          Can also be an array of paths.
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: downloadName
        in: query
        description: If zipping multiple files, the name of the zip file to create
          and download.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: polling
        in: query
        description: Used when downloading multiple files so url will be pulled till
          zip file is created.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
        example: false
      - name: pollingZipName
        in: query
        description: Reference to the previously created zip for polling operation.
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: /archive.zip
      - name: ev-api-key
        in: header
        description: API Key required to make the API call
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Content of the file
        "202":
          description: Succes Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Download with polling response object'
  /account:
    get:
      tags:
      - Account
      summary: Get account settings
      description: |-
        Get information about the an account

        At least one of the headers **ev-api-key** and **ev-access-token** are required.

        If both headers are specified, only information about the the account associated with the key/token is returned.

        If only one of the headers is provided, you must also provide an **accountName** parameter with the name of the desired account, which will provide more limited information.
      operationId: get-account
      parameters:
      - name: ev-api-key
        in: header
        description: Optional if seeking limited info about account, and ev-access-token
          is provided.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: exampleaccount-zwSuWUZ8S38h33qPS8v0s
      - name: ev-access-token
        in: header
        description: Optional if seeking limited info about account, and ev-api-key
          is present
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: 19853ef63a0bc348024a9e4cfd4a92520d2dfd04e88d8679fb1ed6bc551593d1
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_19'
              examples:
                Limited Account Info (single header):
                  value:
                    responseStatus: 200
                    data:
                      id: 12345
                      type: account
                      attributes:
                        accountName: exampleaccount
                        theme: default
                        companyName: Development Company
                        logo: logosample.png
                        created: {}
                        modified: {}
    patch:
      tags:
      - Account
      summary: Update account settings
      description: Update account settings. Only an admin user or the master user
        can perform this operation.
      operationId: patch-account
      parameters:
      - name: ev-api-key
        in: header
        description: ExaVault API Key
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: exampleaccount-zwSuWUZ8S38h33qPS8v0s
      - name: ev-access-token
        in: header
        description: Access token required to make the API call.
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: 19853ef63a0bc348024a9e4cfd4a92520d2dfd04e88d8679fb1ed6bc551593d1
      requestBody:
        description: Update Account Settings
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/body_13'
            examples:
              Example Request:
                value:
                  quotaNoticeEnabled: false
                  quotaNoticeThreshold: 80
                  secureOnly: true
                  complexPasswords: true
                  showReferralLinks: false
                  externalDomain: https://example.com/files
                  emailContent: Greetings, ExampleUser!  Your account is ready for
                    you to start transferring files right now. Here's your link to
                    set up your account [[setpassword]]  Henceforth, you shall be
                    known as [[username]]
                  emailSubject: Welcome to the Example Account
                  allowedIpRanges:
                  - ip_start: 67.208.64.228
                    ip_end: 67.208.64.254
                  callbackSettings:
                    endpointUrl: https://example.com/api/listen
                    triggers:
                      upload: true
                      download: true
                      delete: false
                      createFolder: false
                      rename: false
                      move: false
                      copy: false
                      compress: false
                      extract: false
                      shareFolder: false
                      sendFiles: true
                      receiveFiles: false
                      updateShare: false
                      updateReceive: false
                      deleteSend: false
                      deleteReceive: false
                      deleteShare: false
                      createNotification: true
                      updateNotification: false
                      deleteNotification: false
                      createUser: false
                      updateUser: false
                      deleteUser: false
                      userConnect: false
                      userDisconnect: false
                  customSignature: Please consider the planet before printing this
                    email
                  accountOnboarding: true
                  brandingSettings:
                    companyName: Example File Transfer
                    theme: light
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountPublicResponse'
  /email/welcome/{username}:
    post:
      tags:
      - Email
      summary: Resend welcome email to specific user
      description: Resend the initial welcome email to specific user.
      operationId: post-email-welcome-username
      parameters:
      - name: ev-access-token
        in: header
        description: Access token required to make the API call.
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: 5dc97cc607985eb8da033220e7447647e7915fbf73808
      - name: username
        in: path
        description: A username to send welcome email to
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: exampleuser
      - name: ev-api-key
        in: header
        description: API Key required to make the API call.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_201_4'
              examples:
                Successful Operation:
                  value:
                    responseStatus: 201
                    data: []
  /email/referral:
    post:
      tags:
      - Email
      summary: Send referral email to a given address
      description: 'Send a referral email to an email address. If the recipient signs
        up for ExaVault, we''ll apply a credit to your account for the referral. '
      operationId: post-email-referral
      parameters:
      - name: ev-access-token
        in: header
        description: Access token required to make the API call.
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: 5dc97cc607985eb8da033220e7447647e7915fbf73808
      - name: ev-api-key
        in: header
        description: API Key required to make the API call.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/body_14'
            examples:
              Example Body:
                value:
                  emails:
                  - test@exavault.com
                  message: Hello world
      responses:
        "201":
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_201_4'
              examples:
                Successful Operation:
                  value:
                    responseStatus: 201
                    data: []
  /shares:
    get:
      tags:
      - Share
      summary: Get a list of shares
      description: |-
        Returns array of all share objects that the authenticated user has access to. Sorting and filtering options allow you to limit the returned list.

        Notes:
        Authenticated user requires share permission.
        To get share objects with type send, authenticated user's role must be admin or master.
      operationId: get-shares
      parameters:
      - name: ev-access-token
        in: header
        description: Access token required to make the API call.
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: 5dc97cc607985eb8da033220e7447647e7915fbf73808
      - name: hash
        in: query
        description: Returns single share by hash
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: sdgwq-124
      - name: offset
        in: query
        description: Current offset of records (for pagination)
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 0
        example: 100
      - name: limit
        in: query
        description: Limit of records to be returned (for pagination)
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 100
        example: 10
      - name: scope
        in: query
        description: PLACEHOLDER
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: all
          enum:
          - all
          - active
          - currentUser
        example: active
      - name: sort
        in: query
        description: PLACEHOLDER
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - created
          - -created
        example: created
      - name: type
        in: query
        description: Filter shares by type
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - receive
          - shared_folder
          - send
        example: receive
      - name: include
        in: query
        description: Comma separated list of relationships to include in response.
          Possible values are `owner`, `resource`, `notifications`, `messages`, `activity`.
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: owner,notifications
      - name: path
        in: query
        description: Path expression to filter shares by
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: shared*
      - name: ev-api-key
        in: header
        description: API Key required to make the API call.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_20'
              examples:
                ShareExtendedCollectionExample:
                  summary: Share collection response with relationships
                  value:
                    responseStatus: 200
                    totalResults: 98
                    returnedResults: 27
                    data:
                    - id: 1403
                      type: share
                      attributes:
                        name: Receive test
                        hasPassword: false
                        public: true
                        accessMode: upload
                        accessDescription: Receive folder
                        embed: true
                        hash: 153-3n9ycimh
                        ownerHash: 153-3n9ycimh-99dm0ome
                        expired: false
                        type: receive
                        requireEmail: false
                        fileDropCreateFolders: false
                        formId: 413
                        assets:
                        - Receive test
                        paths:
                        - /YK tests1/Receive test
                        recipients: []
                        messages: []
                        status: 1
                        hasNotification: true
                        created: {}
                        modified: {}
                      relationships:
                        owner:
                          data:
                            type: user
                            id: 7
                        notifications:
                        - data:
                            type: notification
                            id: 1045
                        resources:
                        - data:
                            id: 2497089
                        activity:
                        - data:
                            type: shareActivity
                            id: 1719
                    - id: 1399
                      type: share
                      attributes:
                        name: Logos
                        hasPassword: false
                        public: true
                        accessMode: download
                        accessDescription: Download only
                        embed: false
                        hash: 14y-69359sgr
                        ownerHash: 14y-69359sgr-7tsf6cxx
                        expired: false
                        type: shared_folder
                        requireEmail: false
                        fileDropCreateFolders: false
                        assets:
                        - Logos
                        paths:
                        - /STest071520/Logos
                        recipients: []
                        messages: []
                        status: 1
                        created: {}
                        modified: {}
                      relationships:
                        owner:
                          data:
                            type: user
                            id: 7
                        resources:
                        - data:
                            id: 2547033
                    - id: 1397
                      type: share
                      attributes:
                        name: Red
                        hasPassword: false
                        public: true
                        accessMode: download
                        accessDescription: Download only
                        embed: false
                        hash: 14w-e9jboo6a
                        ownerHash: 14w-e9jboo6a-fmbt4dlm
                        expired: false
                        type: shared_folder
                        requireEmail: false
                        fileDropCreateFolders: false
                        assets:
                        - Red
                        paths:
                        - /Red
                        recipients: []
                        messages: []
                        status: 0
                        created: {}
                        modified: {}
                      relationships:
                        owner:
                          data:
                            type: user
                            id: 7
                        resources:
                        - data:
                            id: 2547617
                    - id: 1395
                      type: share
                      attributes:
                        name: send
                        hasPassword: false
                        public: true
                        accessMode: download_upload
                        accessDescription: Downloads and uploads
                        embed: false
                        hash: 14u-me3uyj7
                        ownerHash: 14u-me3uyj7-3p6rnvt9
                        expiration: {}
                        expired: false
                        type: send
                        requireEmail: false
                        fileDropCreateFolders: false
                        assets:
                        - /Magenta_01.png
                        paths:
                        - /Magenta_01.png
                        recipients: []
                        messages: []
                        status: 1
                        created: {}
                        modified: {}
                      relationships:
                        owner:
                          data:
                            type: user
                            id: 7
                        resources:
                        - data:
                            id: 2551025
                    - id: 1393
                      type: share
                      attributes:
                        name: Blue
                        hasPassword: false
                        public: true
                        accessMode: download
                        accessDescription: Download only
                        embed: false
                        hash: 14s-58l8kxcp
                        ownerHash: 14s-58l8kxcp-6opj8y7p
                        expired: false
                        type: shared_folder
                        requireEmail: false
                        fileDropCreateFolders: false
                        assets:
                        - Blue
                        paths:
                        - /Blue
                        recipients: []
                        messages: []
                        status: 0
                        created: {}
                        modified: {}
                      relationships:
                        owner:
                          data:
                            type: user
                            id: 7
                        resources:
                        - data:
                            id: 2511045
                    - id: 1391
                      type: share
                      attributes:
                        name: direct send
                        hasPassword: false
                        public: true
                        accessMode: download
                        accessDescription: Download only
                        embed: false
                        hash: 14q-f4qngiui
                        ownerHash: 14q-f4qngiui-a700t6ih
                        expiration: {}
                        expired: false
                        type: send
                        requireEmail: false
                        fileDropCreateFolders: false
                        assets: []
                        paths: []
                        recipients: []
                        messages: []
                        status: 1
                        created: {}
                        modified: {}
                      relationships:
                        owner:
                          data:
                            type: user
                            id: 7
                    - id: 1389
                      type: share
                      attributes:
                        name: direct send
                        hasPassword: false
                        public: true
                        accessMode: download
                        accessDescription: Download only
                        embed: false
                        hash: 14o-aww6bdr9
                        ownerHash: 14o-aww6bdr9-dtyvkm4c
                        expiration: {}
                        expired: false
                        type: send
                        requireEmail: false
                        fileDropCreateFolders: false
                        assets: []
                        paths: []
                        recipients: []
                        messages: []
                        status: 1
                        created: {}
                        modified: {}
                      relationships:
                        owner:
                          data:
                            type: user
                            id: 7
                    - id: 1371
                      type: share
                      attributes:
                        name: STemp2P
                        hasPassword: false
                        public: true
                        accessMode: upload
                        accessDescription: Receive folder
                        embed: false
                        hash: 146-2jcm8555
                        ownerHash: 146-2jcm8555-2jqncou7
                        expired: false
                        type: receive
                        requireEmail: true
                        fileDropCreateFolders: false
                        formId: 405
                        assets:
                        - STemp2P
                        paths:
                        - /STest071520/STemp2P
                        recipients: []
                        messages: []
                        status: 0
                        created: {}
                        modified: {}
                      relationships:
                        owner:
                          data:
                            type: user
                            id: 7
                        resources:
                        - data:
                            id: 2506729
                    - id: 1369
                      type: share
                      attributes:
                        name: Red
                        hasPassword: false
                        public: true
                        accessMode: upload
                        accessDescription: Receive folder
                        embed: false
                        hash: 144-el4rsdc0
                        ownerHash: 144-el4rsdc0-3jhot6v
                        expired: false
                        type: receive
                        requireEmail: false
                        fileDropCreateFolders: false
                        formId: 403
                        assets:
                        - Red
                        paths:
                        - /Red
                        recipients: []
                        messages: []
                        status: 0
                        created: {}
                        modified: {}
                      relationships:
                        owner:
                          data:
                            type: user
                            id: 7
                        resources:
                        - data:
                            id: 2547617
                    - id: 1367
                      type: share
                      attributes:
                        name: Red
                        hasPassword: false
                        public: true
                        accessMode: download_upload
                        accessDescription: Downloads and uploads
                        embed: false
                        hash: 142-4uvx7pio
                        ownerHash: 142-4uvx7pio-dhfejc7d
                        expired: false
                        type: shared_folder
                        requireEmail: false
                        fileDropCreateFolders: false
                        assets:
                        - Red
                        paths:
                        - /Red
                        recipients: []
                        messages: []
                        status: 0
                        created: {}
                        modified: {}
                      relationships:
                        owner:
                          data:
                            type: user
                            id: 7
                        resources:
                        - data:
                            id: 2547617
                    - id: 1365
                      type: share
                      attributes:
                        name: smallFolderTree
                        hasPassword: false
                        public: true
                        accessMode: upload
                        accessDescription: Receive folder
                        embed: false
                        hash: 140-fvhgr1vk
                        ownerHash: 140-fvhgr1vk-7itjgpxh
                        expired: false
                        type: receive
                        requireEmail: false
                        fileDropCreateFolders: true
                        formId: 401
                        assets:
                        - smallFolderTree
                        paths:
                        - /STest071520/smallFolderTreeOG
                        recipients: []
                        messages: []
                        status: 0
                        created: {}
                        modified: {}
                      relationships:
                        owner:
                          data:
                            type: user
                            id: 7
                        resources:
                        - data:
                            id: 2534523
                    - id: 1363
                      type: share
                      attributes:
                        name: smallFolderTree
                        hasPassword: false
                        public: true
                        accessMode: download_upload_modify_delete
                        accessDescription: Downloads, uploads, changes, deletes
                        embed: false
                        hash: 13x-2ve7jen2
                        ownerHash: 13x-2ve7jen2-b0xj9n4i
                        expired: false
                        type: shared_folder
                        requireEmail: false
                        fileDropCreateFolders: false
                        assets:
                        - smallFolderTree
                        paths:
                        - /STest071520/smallFolderTreeOG
                        recipients: []
                        messages: []
                        status: 0
                        created: {}
                        modified: {}
                      relationships:
                        owner:
                          data:
                            type: user
                            id: 7
                        resources:
                        - data:
                            id: 2534523
                    - id: 1361
                      type: share
                      attributes:
                        name: direct send
                        hasPassword: false
                        public: true
                        accessMode: download
                        accessDescription: Download only
                        embed: false
                        hash: 13v-8yeyruol
                        ownerHash: 13v-8yeyruol-3oi5klfv
                        expiration: {}
                        expired: false
                        type: send
                        requireEmail: false
                        fileDropCreateFolders: false
                        assets:
                        - /1/test.dat
                        paths:
                        - /1/test.dat
                        recipients: []
                        messages: []
                        status: 1
                        created: {}
                        modified: {}
                      relationships:
                        owner:
                          data:
                            type: user
                            id: 7
                        resources:
                        - data:
                            id: 2546133
                    - id: 1143
                      type: share
                      attributes:
                        name: Receive Into Here
                        hasPassword: false
                        public: true
                        accessMode: upload
                        accessDescription: Receive folder
                        embed: false
                        hash: wn-ae6d0rr0
                        ownerHash: wn-ae6d0rr0-etl6ucqe
                        expired: false
                        type: receive
                        requireEmail: false
                        fileDropCreateFolders: true
                        formId: 395
                        assets:
                        - Receive Into Here
                        paths:
                        - /STest071520/Receive Into Here
                        recipients: []
                        messages: []
                        status: 0
                        created: {}
                        modified: {}
                      relationships:
                        owner:
                          data:
                            type: user
                            id: 7
                        resources:
                        - data:
                            id: 2534571
                    - id: 1141
                      type: share
                      attributes:
                        name: Receive Into Here
                        hasPassword: false
                        public: true
                        accessMode: upload
                        accessDescription: Receive folder
                        embed: false
                        hash: wl-24cqfp7i
                        ownerHash: wl-24cqfp7i-dq6omh86
                        expired: false
                        type: receive
                        requireEmail: false
                        fileDropCreateFolders: false
                        formId: 393
                        assets:
                        - Receive Into Here
                        paths:
                        - /STest071520/Receive Into Here
                        recipients: []
                        messages: []
                        status: 0
                        created: {}
                        modified: {}
                      relationships:
                        owner:
                          data:
                            type: user
                            id: 7
                        resources:
                        - data:
                            id: 2534571
                    - id: 1139
                      type: share
                      attributes:
                        name: Somebody
                        hasPassword: false
                        public: true
                        accessMode: download
                        accessDescription: Download only
                        embed: false
                        hash: wj-vrcrjch
                        ownerHash: wj-vrcrjch-37q7e8cb
                        expired: false
                        type: shared_folder
                        requireEmail: false
                        fileDropCreateFolders: false
                        assets:
                        - Somebody
                        paths:
                        - /STest071520/Color Test Files
                        recipients: []
                        messages: []
                        status: 0
                        created: {}
                        modified: {}
                      relationships:
                        owner:
                          data:
                            type: user
                            id: 7
                        resources:
                        - data:
                            id: 2531105
                    - id: 1137
                      type: share
                      attributes:
                        name: send
                        hasPassword: false
                        public: false
                        accessMode: download_upload
                        accessDescription: Downloads and uploads
                        embed: false
                        hash: wh-g8cstof0
                        ownerHash: wh-g8cstof0-3g4t0qng
                        expiration: {}
                        trackingStatus: pending
                        expired: false
                        type: send
                        requireEmail: false
                        fileDropCreateFolders: false
                        assets:
                        - /STest071520/Indigo_00Part2.png
                        paths:
                        - /STest071520/Indigo_00Part2.png
                        recipients:
                        - id: 299
                          type: direct
                          hash: d4sy3q70
                          email: ssaeed+check@exavault.com
                          sent: false
                          received: false
                          created: {}
                        messages: []
                        status: 1
                        hasNotification: true
                        created: {}
                        modified: {}
                      relationships:
                        owner:
                          data:
                            type: user
                            id: 7
                        notifications:
                        - data:
                            type: notification
                            id: 985
                        resources:
                        - data:
                            id: 2534743
                    - id: 1135
                      type: share
                      attributes:
                        name: ReceiveFolder
                        hasPassword: false
                        public: true
                        accessMode: upload
                        accessDescription: Receive folder
                        embed: false
                        hash: wf-65ubrorp
                        ownerHash: wf-65ubrorp-6mree9a0
                        expired: false
                        type: receive
                        requireEmail: false
                        fileDropCreateFolders: false
                        formId: 391
                        assets:
                        - ReceiveFolder
                        paths:
                        - /STest071520/ReceiveFolder
                        recipients: []
                        messages: []
                        status: 0
                        created: {}
                        modified: {}
                      relationships:
                        owner:
                          data:
                            type: user
                            id: 7
                        resources:
                        - data:
                            id: 2531071
                    - id: 1127
                      type: share
                      attributes:
                        name: New Folder Part 2
                        hasPassword: false
                        public: true
                        accessMode: upload
                        accessDescription: Receive folder
                        embed: false
                        hash: w7-56y9kk3w
                        ownerHash: w7-56y9kk3w-c6k37y47
                        expired: false
                        type: receive
                        requireEmail: false
                        fileDropCreateFolders: true
                        formId: 389
                        assets:
                        - New Folder Part 2
                        paths:
                        - /STest071520/New Folder Part 2
                        recipients: []
                        messages: []
                        status: 1
                        hasNotification: true
                        created: {}
                        modified: {}
                      relationships:
                        owner:
                          data:
                            type: user
                            id: 7
                        notifications:
                        - data:
                            type: notification
                            id: 967
                        resources:
                        - data:
                            id: 2528385
                    - id: 1125
                      type: share
                      attributes:
                        name: new Receive Folder 0722 Part 2
                        hasPassword: false
                        public: true
                        accessMode: upload
                        accessDescription: Receive folder
                        embed: false
                        hash: w5-deklimp7
                        ownerHash: w5-deklimp7-3aarwmwm
                        expired: false
                        type: receive
                        requireEmail: false
                        fileDropCreateFolders: true
                        formId: 387
                        assets:
                        - new Receive Folder 0722 Part 2
                        paths:
                        - /STest071520/new Receive Folder 0722 Part 2
                        recipients: []
                        messages: []
                        status: 0
                        created: {}
                        modified: {}
                      relationships:
                        owner:
                          data:
                            type: user
                            id: 7
                        resources:
                        - data:
                            id: 2528375
                    - id: 1123
                      type: share
                      attributes:
                        name: new Receive Folder 0722
                        hasPassword: false
                        public: true
                        accessMode: upload
                        accessDescription: Receive folder
                        embed: true
                        hash: w3-5pqg2x75
                        ownerHash: w3-5pqg2x75-2oqskp72
                        expired: false
                        type: receive
                        requireEmail: false
                        fileDropCreateFolders: true
                        formId: 385
                        assets:
                        - new Receive Folder 0722
                        paths:
                        - /STest071520/new Receive Folder 0722
                        recipients: []
                        messages: []
                        status: 1
                        hasNotification: true
                        created: {}
                        modified: {}
                      relationships:
                        owner:
                          data:
                            type: user
                            id: 7
                        notifications:
                        - data:
                            type: notification
                            id: 963
                        resources:
                        - data:
                            id: 2528059
                    - id: 1121
                      type: share
                      attributes:
                        name: testReceive
                        hasPassword: false
                        public: true
                        accessMode: upload
                        accessDescription: Receive folder
                        embed: false
                        hash: w1-en2p0r9k
                        ownerHash: w1-en2p0r9k-a510c0ho
                        expired: false
                        type: receive
                        requireEmail: false
                        fileDropCreateFolders: false
                        formId: 383
                        assets:
                        - testReceive
                        paths:
                        - /STest071520/testReceive
                        recipients: []
                        messages: []
                        status: 1
                        hasNotification: true
                        created: {}
                        modified: {}
                      relationships:
                        owner:
                          data:
                            type: user
                            id: 7
                        notifications:
                        - data:
                            type: notification
                            id: 961
                        resources:
                        - data:
                            id: 2526409
                    - id: 1119
                      type: share
                      attributes:
                        name: direct send
                        hasPassword: true
                        public: true
                        accessMode: download
                        accessDescription: Download only
                        embed: false
                        hash: vy-3yuxygf2
                        ownerHash: vy-3yuxygf2-cmfmnhlq
                        expiration: {}
                        expired: false
                        type: send
                        requireEmail: false
                        fileDropCreateFolders: false
                        assets:
                        - /July2020Web/blackborder.jpg
                        - Black_10.png
                        - Part 2
                        - /Blue/Turquoise2
                        paths:
                        - /July2020Web/blackborder.jpg
                        - Black_10.png
                        - Part 2
                        - /Blue/Turquoise2
                        recipients: []
                        messages: []
                        status: 1
                        created: {}
                        modified: {}
                      relationships:
                        owner:
                          data:
                            type: user
                            id: 7
                        resources:
                        - data:
                            id: 2527919
                        - data:
                            id: 2527921
                        - data:
                            id: 2527923
                        - data:
                            id: 2527905
                    - id: 1117
                      type: share
                      attributes:
                        name: RetestCompressExtract
                        hasPassword: false
                        public: false
                        accessMode: upload
                        accessDescription: Receive folder
                        embed: false
                        hash: vw-eqpdss1s
                        ownerHash: vw-eqpdss1s-9hl651sr
                        trackingStatus: complete
                        expired: false
                        type: receive
                        requireEmail: false
                        fileDropCreateFolders: false
                        formId: 381
                        assets:
                        - RetestCompressExtract
                        paths:
                        - /STest071520/RetestCompressExtract
                        recipients:
                        - id: 289
                          type: cc
                          hash: 2cun8goq
                          email: ssaeed+checkcc@exavault.com
                          sent: true
                          received: true
                          created: {}
                        - id: 291
                          type: direct
                          hash: 48wlxeif
                          email: ssaeed+check@exavault.com
                          sent: true
                          received: true
                          created: {}
                        messages:
                        - id: 223
                          userId: 7
                          shareId: 1117
                          subject: Shared Receive File 072202 5:05 pm
                          body: |-
                            This is a custom message.

                            Blah
                            Blah
                            Blah
                          created: {}
                          modified: {}
                        status: 1
                        hasNotification: true
                        created: {}
                        modified: {}
                      relationships:
                        owner:
                          data:
                            type: user
                            id: 7
                        notifications:
                        - data:
                            type: notification
                            id: 959
                        resources:
                        - data:
                            id: 2523737
                    - id: 1115
                      type: share
                      attributes:
                        name: direct send
                        hasPassword: false
                        public: true
                        accessMode: download
                        accessDescription: Download only
                        embed: false
                        hash: vu-1isrwddy
                        ownerHash: vu-1isrwddy-8lyjl8ai
                        expiration: {}
                        trackingStatus: complete
                        expired: false
                        type: send
                        requireEmail: false
                        fileDropCreateFolders: false
                        assets:
                        - /STest071520/folderTreeTest
                        - /STest071520/Gold_01.png
                        - /STest071520/folderTreeTest2Rename/innerFolder1/innerFolder2/innerFolder3
                        - Copy_CreateNewFolder.jpg
                        - TestFolder
                        paths:
                        - /STest071520/folderTreeTest
                        - /STest071520/Gold_01.png
                        - /STest071520/folderTreeTest2Rename/innerFolder1/innerFolder2/innerFolder3
                        - Copy_CreateNewFolder.jpg
                        - TestFolder
                        recipients:
                        - id: 285
                          type: cc
                          hash: 3dk34hll
                          email: ssaeed+newtestcc@exavault.com
                          sent: true
                          received: true
                          created: {}
                        - id: 287
                          type: direct
                          hash: 7ijyax4b
                          email: ssaeed+newtest@exavault.com
                          sent: true
                          received: true
                          created: {}
                        messages:
                        - id: 221
                          userId: 7
                          shareId: 1115
                          subject: Testing Send Email Again 072220 4:20 pm
                          body: "This is another custom message - \n\nTwinkle twinkle\
                            \ little star"
                          created: {}
                          modified: {}
                        status: 1
                        hasNotification: true
                        created: {}
                        modified: {}
                      relationships:
                        owner:
                          data:
                            type: user
                            id: 7
                        notifications:
                        - data:
                            type: notification
                            id: 957
                        resources:
                        - data:
                            id: 2527555
                        - data:
                            id: 2527593
                        - data:
                            id: 2527595
                        - data:
                            id: 2527601
                        - data:
                            id: 2527603
                    - id: 1113
                      type: share
                      attributes:
                        name: direct send
                        hasPassword: false
                        public: true
                        accessMode: download
                        accessDescription: Download only
                        embed: false
                        hash: vs-520y8ty8
                        ownerHash: vs-520y8ty8-fjeti6hm
                        expiration: {}
                        trackingStatus: complete
                        expired: false
                        type: send
                        requireEmail: false
                        fileDropCreateFolders: false
                        assets:
                        - /STest071520/folderTreeTest/Pink_6.png
                        - /STest071520/folderTreeTest/innerFolder1/innerFolder2/innerFolder3
                        - Copy_CreateNewFolder.jpg
                        - TestFolder
                        paths:
                        - /STest071520/folderTreeTest/Pink_6.png
                        - /STest071520/folderTreeTest/innerFolder1/innerFolder2/innerFolder3
                        - Copy_CreateNewFolder.jpg
                        - TestFolder
                        recipients:
                        - id: 281
                          type: cc
                          hash: 45sin3xp
                          email: ssaeed+checkcc@exavault.com
                          sent: true
                          received: true
                          created: {}
                        - id: 283
                          type: direct
                          hash: 5bl42n6i
                          email: ssaeed+check@exavault.com
                          sent: true
                          received: true
                          created: {}
                        messages:
                        - id: 219
                          userId: 7
                          shareId: 1113
                          subject: Test If Send Email Comes 072220 3:48pm
                          body: |-
                            New Custom Message:

                            Mary had a little lamb.
                          created: {}
                          modified: {}
                        status: 1
                        hasNotification: true
                        created: {}
                        modified: {}
                      relationships:
                        owner:
                          data:
                            type: user
                            id: 7
                        notifications:
                        - data:
                            type: notification
                            id: 955
                        resources:
                        - data:
                            id: 2527449
                        - data:
                            id: 2527451
                        - data:
                            id: 2527457
                        - data:
                            id: 2527459
                    - id: 1111
                      type: share
                      attributes:
                        name: direct send
                        hasPassword: false
                        public: true
                        accessMode: download
                        accessDescription: Download only
                        embed: false
                        hash: vq-5omtdodn
                        ownerHash: vq-5omtdodn-fqjy0ngc
                        expiration: {}
                        trackingStatus: pending
                        expired: false
                        type: send
                        requireEmail: false
                        fileDropCreateFolders: false
                        assets:
                        - OnboardRightScrollbar.jpg
                        - NoSharesSends
                        - /STest071520/testReceive
                        - /STest071520/Gold_01.png
                        paths:
                        - OnboardRightScrollbar.jpg
                        - NoSharesSends
                        - /STest071520/testReceive
                        - /STest071520/Gold_01.png
                        recipients:
                        - id: 277
                          type: cc
                          hash: 18ywfpjf
                          email: ssaeed+test1cc@exavault.com
                          sent: true
                          received: true
                          created: {}
                        - id: 279
                          type: direct
                          hash: 5dk6xs8f
                          email: ssaeed+test1@exavault.com
                          sent: true
                          received: false
                          created: {}
                        messages:
                        - id: 217
                          userId: 124387
                          shareId: 1111
                          subject: SendEmail 072220 3:33 pm
                          body: "This is a custom message.\n\nRoses are red, \nviolets\
                            \ are blue,\nI am writing this, \nbecause I don't know\
                            \ what else to do. :)"
                          created: {}
                          modified: {}
                        status: 1
                        hasNotification: true
                        created: {}
                        modified: {}
                      relationships:
                        owner:
                          data:
                            type: user
                            id: 124387
                        notifications:
                        - data:
                            type: notification
                            id: 953
                        resources:
                        - data:
                            id: 2527407
                        - data:
                            id: 2527409
                        - data:
                            id: 2527401
                        - data:
                            id: 2527403
                ShareResponseExample:
                  summary: Regular share response
                  value:
                    responseStatus: 200
                    totalResults: 98
                    returnedResults: 27
                    data:
                    - id: 1403
                      type: share
                      attributes:
                        name: Receive test
                        hasPassword: false
                        public: true
                        accessMode: upload
                        accessDescription: Receive folder
                        embed: true
                        hash: 153-3n9giomh
                        ownerHash: 153-3n9ycesg-99dm0ome
                        expired: false
                        type: receive
                        requireEmail: false
                        fileDropCreateFolders: false
                        formId: 413
                        assets:
                        - Receive test
                        paths:
                        - /tests1/Receive test
                        recipients:
                        - id: 325
                          type: share
                          hash: bo6e0sfg
                          email: test+3@exavault.com
                          sent: true
                          received: false
                          created: {}
                        - id: 327
                          type: share
                          hash: 382dfhj2
                          email: test+4@exavault.com
                          sent: true
                          received: false
                          created: {}
                        - id: 329
                          type: share
                          hash: 2er9b3ls
                          email: test+5@exavault.com
                          sent: true
                          received: false
                          created: {}
                        messages:
                        - id: 263
                          userId: 124437
                          shareId: 1445
                          subject: Hello
                          body: 'Hello '
                          created: {}
                          modified: {}
                        status: 1
                        hasNotification: true
                        created: {}
                        modified: {}
                      relationships:
                        owner:
                          data:
                            type: user
                            id: 7
                        notifications:
                        - data:
                            type: notification
                            id: 1045
                        resources:
                        - data:
                            id: 2497089
                        activity:
                        - data:
                            type: shareActivity
                            id: 1719
    post:
      tags:
      - Shares
      summary: Creates a share
      description: |-
        Creates a new share object for the given path in your account. We support three types of shares:

          - A **shared folder** allows you to let outside parties access a folder in your account (including any files and nested subfolders) using just a link. Shared folders can be restricted; e.g. with an expiration date, password, download-only, etc. Shared folders are 'live'; if someone makes a change to a file in your shared folder, it will be immediately reflected in your account, and vice-versa.
          - A **file send** lets you send one or more files via an easy download link. File sends are different than shared folders because file sends are 'point in time' -- the recipient will get the files as you sent them. If you later make a change to the source file, it will not be updated for the recipient.
          - A **receive folder** lets you receive files into your account. You can either send users a link, or optionally [embed a customized form](https://www.exavault.com/docs/account/05-file-sharing/05-upload-widget) on your website.

        **Notes:**

        Authenticated user requires share permission.
      operationId: post-shares
      parameters:
      - name: ev-access-token
        in: header
        description: Access token required to make the API call.
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: 5dc97cc607985eb8da033220e7447647e7915fbf73808
      - name: ev-api-key
        in: header
        description: API Key required to make the API call.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/body_15'
      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Regular share response'
  /shares/{id}:
    get:
      tags:
      - Shares
      summary: Get a share
      description: |-
        Returns a share object specified by a given share ID.

        **Notes:**

          - Authenticated user should be the owner of the specified share.
      operationId: get-shares-id
      parameters:
      - name: ev-api-key
        in: header
        description: API Key
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: exampleaccount-zwSuWUZ8S38h33qPS8v0s
      - name: ev-access-token
        in: header
        description: Access Token
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: 19853ef63a0bc348024a9e4cfd4a92520d2dfd04e88d8679fb1ed6bc551593d1
      - name: id
        in: path
        description: PLACEHOLDER
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      - name: include
        in: query
        description: Comma separated list of relationships to include in response.
          Possible values are `owner`, `resource`, `notifications`, `messages`.
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: owner,notifications
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_21'
              examples:
                ShareResponseExample:
                  summary: Regular share response
                  value:
                    responseStatus: 200
                    data:
                      id: 10
                      type: share
                      attributes:
                        name: Example Share
                        hasPassword: false
                        public: true
                        accessMode: upload
                        accessDescription: Upload only
                        embed: true
                        hash: wgf1-352
                        ownerHash: hd1e-3erufo72-fwggk999
                        expired: false
                        type: shared_folder
                        requireEmail: false
                        fileDropCreateFolders: false
                        paths:
                        - /example share
                        recipients:
                        - id: 11
                          type: direct
                          hash: fsesghan
                          email: recipient@gmail.com
                          sent: true
                          received: false
                          created: {}
                        messages:
                        - id: 23
                          subject: Message subject.
                          body: You have files available for download.
                          created: {}
                          modified: {}
                        inherited: false
                        status: 1
                        hasNotification: true
                        created: {}
                        modified: {}
                      relationships:
                        owner:
                          type: user
                          id: 12
                        resource:
                          type: resource
                          id: 13
                        notifications:
                        - type: notification
                          id: 14
                        - type: notification
                          id: 15
                ShareExtendedResponseExample:
                  summary: Share response with relationships
                  value:
                    responseStatus: 200
                    data:
                      id: 10
                      type: share
                      attributes:
                        name: Example Share
                        hasPassword: false
                        public: true
                        accessMode: upload
                        accessDescription: Upload only
                        embed: true
                        hash: wef1-352
                        ownerHash: hd1e-3eerg72-fsxak999
                        expired: false
                        type: shared_folder
                        requireEmail: false
                        fileDropCreateFolders: false
                        paths:
                        - /example share
                        recipients:
                        - id: 11
                          type: direct
                          hash: fethwxan
                          email: recipient@gmail.com
                          sent: true
                          received: false
                          created: {}
                        messages:
                        - id: 23
                          subject: Message subject.
                          body: You have files available for download.
                          created: {}
                          modified: {}
                        inherited: false
                        status: 1
                        hasNotification: true
                        created: {}
                        modified: {}
                      relationships:
                        owner:
                          type: user
                          id: 12
                        resource:
                          type: resource
                          id: 13
                        notifications:
                        - type: notification
                          id: 14
                        - type: notification
                          id: 15
                    included:
                    - type: user
                      id: 12
                      attributes:
                        status: 0
                        expiration: {}
                        username: exampleuser
                        nickname: examplenickname
                        email: user@example.com
                        homeDir: /
                        onboarding: true
                        firstLogin: false
                        role: master
                        timeZone: UTC
                        permissions:
                          download: true
                          upload: true
                          modify: true
                          delete: true
                          list: true
                          changePassword: true
                          share: true
                          notification: true
                          viewFormData: true
                          deleteFormData: true
                        created: {}
                        modified: {}
                        accessTimestamp: {}
                    - type: resource
                      id: 13
                      attributes:
                        hash: ec4aa9a91er282666a165899a14f29b1
                        name: Shared Folder
                        type: folder
                        uploadDate: {}
                        createdAt: {}
                        updatedAt: {}
                        accessedAt: {}
                        path: /Shared Folder
                        fileCount: 1
                        size: 987
                        previewable: false
                    - type: notification
                      id: 14
                      attributes:
                        type: shared_folder
                        path: /Shared Folder
                        name: Shared Folder
                        action: upload
                        usernames:
                        - notice_user_all
                        recipients:
                        - id: 18
                          email: recipient@example.com
                          notificationId: 14
                          created: {}
                          modified: {}
                        recipientEmails:
                        - recipient@example.com
                        sendEmail: 1
                        readableDescription: PLACEHOLDER
                        readableDescriptionWithoutPath: PLACEHOLDER
                        message: PLACEHOLDER
                        created: {}
                        updated: {}
                    - type: notification
                      id: 15
                      attributes:
                        type: shared_folder
                        path: /Shared Folder2
                        name: Shared Folder2
                        action: upload
                        usernames:
                        - notice_user_all
                        recipients:
                        - id: 18
                          email: recipient@example.com
                          notificationId: 14
                          created: {}
                          modified: {}
                        recipientEmails:
                        - recipient@example.com
                        sendEmail: 1
                        readableDescription: PLACEHOLDER
                        readableDescriptionWithoutPath: PLACEHOLDER
                        message: PLACEHOLDER
                        created: {}
                        updated: {}
    delete:
      tags:
      - Shares
      summary: Deactivate a share
      description: |-
        Delete a share. Deleting a share does not remove the underlying files for shared_folder and receive share types; it merely removes the access URL. Delating a send share type does remove the associated files, as files that have been sent are only associated with the share, and aren't stored anywhere else in the account.

        **Notes:**

        Authenticated user's role must be admin or master, or user must be the owner of the specified share.
      operationId: delete-shares-id
      parameters:
      - name: ev-access-token
        in: header
        description: Access token required to make the API call.
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: 5dc97cc607985eb8da033220e7447647e7915fbf73808
      - name: id
        in: path
        description: ID of the share
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      - name: ev-api-key
        in: header
        description: API Key required to make the API call.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: exampleaccount-zwSuWUZ8S38h33qPS8v0s
      responses:
        "200":
          description: Successful operation
    patch:
      tags:
      - Shares
      summary: Update a share
      description: Change the settings on an active share.
      operationId: patch-shares-id
      parameters:
      - name: ev-api-key
        in: header
        description: API Key
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: exampleaccount-zwSuWUZ8S38h33qPS8v0s
      - name: ev-access-token
        in: header
        description: Access Token
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: 19853ef63a0bc348024a9e4cfd4a92520d2dfd04e88d8679fb1ed6bc551593d1
      - name: id
        in: path
        description: PLACEHOLDER
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/body_16'
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Regular share response_1'
  /shares/complete-send/{id}:
    post:
      tags:
      - Shares
      summary: Complete send files
      description: After uploading the files to be sent, use this method to trigger
        invitation emails and finish the send files setup.
      operationId: post-shares-complete-send-id
      parameters:
      - name: ev-api-key
        in: header
        description: API Key
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: exampleaccount-zwSuWUZ8S38h33qPS8v0s
      - name: ev-access-token
        in: header
        description: Access Token
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: 19853ef63a0bc348024a9e4cfd4a92520d2dfd04e88d8679fb1ed6bc551593d1
      - name: id
        in: path
        description: PLACEHOLDER
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Regular share response_2'
  /recipients:
    get:
      tags:
      - Recipients
      summary: Get share recipient emails
      description: Retrieve all email addresses that have been sent a share in the
        past.
      operationId: get-recipients
      parameters:
      - name: ev-access-token
        in: header
        description: Access token required to make the API call.
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: 5dc97cc607985eb8da033220e7447647e7915fbf73808
      - name: ev-api-key
        in: header
        description: API Key required to make the API call.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_22'
              examples:
                Successful Operation:
                  value:
                    responseStatus: 200
                    data:
                    - test+3@exavault.com
                    - test+4@exavault.com
                    - test+5@exavault.com
  /recipients/shares/{shareId}/{email}:
    delete:
      tags:
      - Recipients
      summary: Delete a share recipient from a single share
      description: 'Delete a share recipient from a single share they''ve been invited
        to. This will not delete any files or folders. '
      operationId: delete-recipients-shares-share-id-email
      parameters:
      - name: ev-access-token
        in: header
        description: Access token required to make the API call.
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: 5dc97cc607985eb8da033220e7447647e7915fbf73808
      - name: shareId
        in: path
        description: PLACEHOLDER
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      - name: email
        in: path
        description: PLACEHOLDER
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: email
      - name: ev-api-key
        in: header
        description: API Key required to make the API call.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_23'
              examples:
                Successful Operation:
                  value:
                    responseStatus: 200
                    data: []
  /recipients/shares/{email}:
    delete:
      tags:
      - Recipients
      summary: Delete a share recipient from all shares
      description: 'Delete a share recipient from all shares they''ve been invited
        to. This will not delete any files or folders. '
      operationId: delete-recipients-shares-email
      parameters:
      - name: ev-access-token
        in: header
        description: Access token required to make the API call.
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: 5dc97cc607985eb8da033220e7447647e7915fbf73808
      - name: email
        in: path
        description: PLACEHOLDER
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: email
      - name: ev-api-key
        in: header
        description: API Key required to make the API call.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_23'
              examples:
                Successful Operation:
                  value:
                    responseStatus: 200
                    data: []
  /recipients/shares/invites/{shareId}:
    post:
      tags:
      - Recipients
      summary: Resend invitations to share recipients
      description: 'Resend invitations to all recipients on a defined share. '
      operationId: post-recipients-shares-invites-share-id
      parameters:
      - name: ev-access-token
        in: header
        description: Access token required to make the API call.
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: 5dc97cc607985eb8da033220e7447647e7915fbf73808
      - name: shareId
        in: path
        description: PLACEHOLDER
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      - name: ev-api-key
        in: header
        description: API Key required to make the API call.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_201_5'
              examples:
                Successful Operation:
                  value:
                    responseStatus: 201
                    data:
                    - test+3@exavault.com
                    - test+4@exavault.com
                    - test+5@exavault.com
components:
  schemas:
    Error:
      title: Error
      type: object
      properties:
        code:
          type: string
          description: Specific internal error string.
          example: <PLACEHOLDER_ERROR_CODE>
        title:
          type: string
          description: Human readable summary of the problem.
          example: <PLACEHOLDER_TITLE>
        detail:
          type: string
          description: human-readable explanation specific to this occurrence of the
            problem.
          example: <PLACEHOLDER_DETAIL>
        meta:
          type: object
          description: Meta object containing non-standard meta-information about
            the error.
          example: <PLACEHOLDER_META_OBJECT>
    NotificationRecipient:
      title: NotificartionRecipient
      type: object
      properties:
        id:
          type: integer
          description: ID of the recipient.
          format: int32
          example: 2
        notificationId:
          type: string
          description: ID of the notification that the recipient belongs to.
          example: "23"
        email:
          type: string
          description: Recipient email.
          example: exampleuser@exavault.com
        created:
          type: string
          description: Timestamp of adding notification recipient.
          format: ISO 8601
          example: '{}'
        modified:
          type: string
          description: Timestamp of notification recipient modification.
          format: ISO 8601
          example: '{}'
    NotificationCollectionExtendedResponse:
      allOf:
      - type: object
        properties:
          responseStatus:
            type: integer
            example: 200
          totalResults:
            type: integer
            example: 2
          returnedResults:
            type: integer
            example: 2
          data:
            type: array
            items:
              $ref: '#/components/schemas/Notification_1'
      - type: object
        properties:
          included:
            type: array
            items:
              anyOf:
              - title: Share
                type: object
                properties:
                  id:
                    type: integer
                    description: ID of the share.
                    format: int32
                    example: 655621
                  type:
                    type: string
                    example: share
                    enum:
                    - share
                  attributes:
                    type: object
                    properties:
                      name:
                        type: string
                        description: Share name.
                        example: Example Folder
                      hasPassword:
                        type: boolean
                        description: True if the share has password.
                        example: false
                        enum:
                        - true
                        - false
                      public:
                        type: boolean
                        description: True if the share has a public url.
                        example: true
                        enum:
                        - true
                        - false
                      accessMode:
                        type: string
                        description: Access rights for the share.
                        example: upload
                        enum:
                        - upload
                        - download
                        - download_upload
                        - download_upload_modify_delete
                      accessDescription:
                        type: string
                        description: Description of the share access rights.
                        example: Download only
                      embed:
                        type: boolean
                        description: True if share can be embedded.
                        example: false
                      hash:
                        type: string
                        description: Share hash.
                        example: hd1e-3erufo72
                      ownerHash:
                        type: string
                        description: Share owner's hash.
                        example: hd1e-3erufo72-fsxak999
                      expiration:
                        type: string
                        description: Expiration date of the share.
                      expired:
                        type: boolean
                        description: True if the share has expired.
                        example: false
                        enum:
                        - true
                        - false
                      resent:
                        type: string
                        description: Invitations resent date. Can be `null` if resent
                          never happened.
                        format: ISO 8601
                      type:
                        type: string
                        description: Type of share.
                        example: shared_folder
                        enum:
                        - shared_folder
                        - send
                        - receive
                      requireEmail:
                        type: boolean
                        description: True if share requires email to access.
                        example: true
                      fileDropCreateFolders:
                        type: boolean
                        description: Flag to show if separate folders should be created
                          for each file upload to receive folder.
                        example: false
                        enum:
                        - true
                        - false
                      paths:
                        type: array
                        description: Path to the shared resource in your account.
                        example:
                        - /Example Folder
                        items:
                          type: string
                      recipients:
                        type: array
                        description: Array of recipients.
                        example:
                        - id: 2
                          shareId: 23
                          type: direct
                          hash: fseowxan
                          email: recipient@gmail.com
                          sent: true
                          received: false
                          created: {}
                        items:
                          title: ShareRecipient
                          type: object
                          properties:
                            id:
                              type: integer
                              description: ID of the recipient.
                              format: int32
                              example: 2
                            shareId:
                              type: string
                              description: ID of the share that the recipoient belongs
                                to.
                              example: "23"
                            type:
                              type: string
                              description: Type of the recipient.
                              example: owner
                              enum:
                              - owner
                              - direct
                            hash:
                              type: string
                              description: Share hash.
                              example: fseowxan
                            email:
                              type: string
                              description: Recipient email address.
                              example: recipient@gmail.com
                            sent:
                              type: boolean
                              description: Set to true if invite email was sent; false
                                otherwise.
                              example: true
                              enum:
                              - true
                              - false
                            received:
                              type: boolean
                              description: Set to true if recipient has accessed the
                                share. Note this is set to true when the recipient
                                clicks the link to access the share; not when they
                                download a file.
                              example: false
                              enum:
                              - true
                              - false
                            created:
                              type: string
                              description: Timestamp of adding recipient to the share.
                              format: ISO 8601
                              example: '{}'
                      messages:
                        type: array
                        description: Array of invitation messages.
                        items:
                          title: Message
                          type: object
                          properties:
                            id:
                              type: integer
                              description: Message id.
                              format: int32
                              example: 397584
                            type:
                              type: string
                              description: Resource type
                              example: message
                              enum:
                              - message
                            attributes:
                              type: object
                              properties:
                                subject:
                                  type: string
                                  description: Message subject.
                                  example: Files available for download
                                body:
                                  type: string
                                  description: Message text.
                                  example: You have files available for download.
                                created:
                                  type: string
                                  description: Timestamp of message creation.
                                  format: ISO 8601
                                  example: '{}'
                                modified:
                                  type: string
                                  description: Timestamp of message modification.
                                  format: ISO 8601
                                  example: '{}'
                      inherited:
                        type: boolean
                        description: True if share inherited from parent folder.
                        enum:
                        - true
                        - null
                      status:
                        type: integer
                        description: Share activity status. Can be active (1) or deactivated
                          (0).
                        format: int32
                        example: 1
                        enum:
                        - 0
                        - 1
                      hasNotification:
                        type: boolean
                        description: True if share has notification.
                        example: false
                        enum:
                        - true
                        - false
                      notification:
                        type: string
                        description: Notification object if share has one.
                      created:
                        type: string
                        description: Timestamp of share creation.
                        format: YYYY-mm-dd hh:mm:ss
                        example: 2017-05-03 5:49:34 pm
                      modified:
                        type: string
                        description: Timestamp of share modification. Can be `null`
                          if it wasn't modified.
                        format: YYYY-mm-dd hh:mm:ss
                  relationships:
                    type: object
                    properties:
                      messages:
                        type: array
                        description: PLACEHOLDER
                        items:
                          type: object
                          properties:
                            type:
                              type: string
                              description: PLACEHOLDER
                              example: message
                              enum:
                              - message
                            id:
                              type: integer
                              description: PLACEHOLDER
                              example: 21
                      owner:
                        type: object
                        properties:
                          type:
                            type: string
                            description: PLACEHOLDER
                            example: user
                            enum:
                            - user
                          id:
                            type: integer
                            description: PLACEHOLDER
                            example: 12345
                      resource:
                        type: object
                        properties:
                          type:
                            type: string
                            description: PLACEHOLDER
                            example: resource
                            enum:
                            - resource
                          id:
                            type: integer
                            description: PLACEHOLDER
                            example: 12345
                        description: PLACEHOLDER
                      notifications:
                        type: array
                        description: PLACEHOLDER
                        items:
                          type: object
                          properties:
                            type:
                              type: string
                              description: PLACEHOLDER
                              example: notification
                              enum:
                              - notification
                            id:
                              type: integer
                              description: PLACEHOLDER
                              example: 9
                description: Object contains share properties.
              - title: Resource
                type: object
                properties:
                  id:
                    type: integer
                    format: int32
                    example: 1
                  type:
                    type: string
                    example: resource
                  attributes:
                    type: object
                    properties:
                      hash:
                        type: string
                        description: Unique hash of the resource.
                        example: ec4aa9a91be282666a165899a14f29b1
                      name:
                        type: string
                        description: Resource name, e.g. the name of the file or folder.
                        example: examplefolder
                      extension:
                        type: string
                        description: Resource extension. Property exists only if resource
                          `type` is file.
                        example: .zip
                      type:
                        type: string
                        description: Type of the resource.
                        enum:
                        - file
                        - folder
                        - dir
                      createdBy:
                        type: string
                        description: Username of the creator.
                        example: exampleuser
                      uploadDate:
                        type: string
                        description: Timestamp of resource upload.
                        format: ISO 8601
                        example: '{}'
                      createdAt:
                        type: string
                        description: Timestamp of resource creation.
                        format: ISO 8601
                        example: '{}'
                      updatedAt:
                        type: string
                        description: Timestamp of resource modification.
                        format: ISO 8601
                        example: '{}'
                      accessedAt:
                        type: string
                        description: Timestamp of the time when resource was accessed.
                        format: ISO 8601
                        example: '{}'
                      parent:
                        type: string
                        description: Parent path of the resource.
                        example: /
                      path:
                        type: string
                        description: Full path to the resource.
                        example: /examplefolder
                      fileCount:
                        type: integer
                        description: Count of files in resource. Property exists only
                          if resource `type` is folder.
                        format: int32
                        example: 0
                      size:
                        type: integer
                        description: Resource size.
                        format: int64
                        example: 0
                      previewable:
                        type: boolean
                        description: Can resource be previewed. Property equals `null`
                          if resource `type` is folder.
                        example: true
                        enum:
                        - true
                        - false
                        - null
                  relationships:
                    type: object
                    properties:
                      share:
                        type: object
                        properties:
                          id:
                            type: integer
                            format: int32
                            example: 2345
                          type:
                            type: string
                            example: share
                      notification:
                        type: object
                        properties:
                          id:
                            type: integer
                            format: int32
                            example: 2
                          type:
                            type: string
                            example: notification
                      directFile:
                        type: object
                        properties:
                          id:
                            type: integer
                            format: int32
                            example: 2
                          type:
                            type: string
                            example: directFile
                      parentNode:
                        type: object
                        properties:
                          id:
                            type: integer
                            format: int32
                            example: 2
                          type:
                            type: string
                            example: resource
                description: All properties of the resource.
                discriminator:
                  propertyName: type
              - title: User
                type: object
                properties:
                  id:
                    type: integer
                    description: ID of the user.
                    format: int32
                    example: 655621
                  type:
                    type: string
                    example: user
                  attributes:
                    type: object
                    properties:
                      status:
                        type: integer
                        description: Indicates user activity status. `0` means the
                          user is locked and cannot log in. `1` means the user is
                          active and can log in.
                        format: int32
                        example: 1
                        enum:
                        - 0
                        - 1
                      expiration:
                        type: string
                        description: Timestamp of user expiration.
                        format: ISO 8601
                      created:
                        type: string
                        description: Timestamp of user creation.
                        format: ISO 8601
                        example: '{}'
                      modified:
                        type: string
                        description: Timestamp of user modification.
                        format: ISO 8601
                        example: '{}'
                      accessTimestamp:
                        type: string
                        description: Timestamp of most recent successful user login.
                        format: ISO 8601
                        example: '{}'
                      accountId:
                        type: integer
                        description: Internal ID of the account this user belongs
                          to.
                        format: int32
                        example: 13758
                      accountName:
                        type: string
                        description: Name of the account this user belongs to.
                        example: exampleuser
                      username:
                        type: string
                        description: Username of the user.
                        example: exampleuser
                      nickname:
                        type: string
                        description: Nickname of the user.
                        example: exampleuser
                      email:
                        type: string
                        description: Email address of the user.
                        example: example@exavault.mail
                      homeDir:
                        type: string
                        description: Path to the user's home folder.
                        example: /
                      permissions:
                        type: object
                        properties:
                          download:
                            type: boolean
                            description: Download permission flag.
                            example: true
                          upload:
                            type: boolean
                            description: Upload permission flag.
                            example: true
                          modify:
                            type: boolean
                            description: Modify permission flag.
                            example: true
                          delete:
                            type: boolean
                            description: Delete permission flag.
                            example: true
                          list:
                            type: boolean
                            description: View files permission flag.
                            example: true
                          changePassword:
                            type: boolean
                            description: Change permission flag.
                            example: true
                          share:
                            type: boolean
                            description: Share folders permission flag.
                            example: true
                          notification:
                            type: boolean
                            description: Create notifications permission flag.
                            example: true
                          viewFormData:
                            type: boolean
                            description: Access Form Data permission flag. If `true`,
                              user can view submissions that have been stored for
                              a receive folder. This includes any data submitted in
                              the receive folder form.
                            example: true
                          deleteFormData:
                            description: Delete form data permission flag. If `true`,
                              user can remove data that was submitted for a receive
                              folder. This applies only to data submitted in the receive
                              folder form, not the actual files uploaded.
                      role:
                        type: string
                        description: User's role.
                        example: user
                        enum:
                        - user
                        - admin
                        - master
                      timeZone:
                        type: string
                        description: User's timezone. See <a href='https://php.net/manual/en/timezones.php'
                          target='blank'>this page</a> for allowed values.
                        example: America/Chicago
                      onboarding:
                        type: boolean
                        description: Whether the onboarding help system is enabled
                          for this user. `true` means that additional help popups
                          are displayed in the web application for this user.
                        example: false
                      firstLogin:
                        type: boolean
                        description: Whether this is the first time the user has logged
                          into the system.
                        example: false
                  relationships:
                    type: object
                    properties:
                      homeDir:
                        type: object
                        properties:
                          type:
                            type: string
                            example: resource
                          id:
                            type: integer
                            format: int32
                            example: 2345
                      account:
                        type: object
                        properties:
                          type:
                            type: string
                            example: account
                          id:
                            type: integer
                            format: int32
                            example: 2
                description: Object contains user properties.
    NotificationCollectionResponse:
      type: object
      properties:
        responseStatus:
          type: integer
          example: 200
        totalResults:
          type: integer
          example: 2
        returnedResults:
          type: integer
          example: 2
        data:
          type: array
          items:
            $ref: '#/components/schemas/Notification_1'
    NotificationResponse:
      title: Notification response object
      type: object
      properties:
        id:
          type: integer
          description: 'ID of the notification. '
          format: int32
          example: 1
        type:
          type: string
          description: Type is notification.
          example: notification
        attributes:
          $ref: '#/components/schemas/NotificationResponse_attributes'
        relationships:
          $ref: '#/components/schemas/NotificationResponse_relationships'
      description: Response object for notifications.
      example:
        relationships:
          ownerUser:
            id: 12345
            type: user
          resource:
            id: 2345
            type: resource
          share:
            id: 2
            type: share
        attributes:
          readableDescription: anybody changes, downloads or deletes '/examplefile.jpg'
          readableDescriptionWithoutPath: anybody changes or downloads this file
          created: '{}'
          shareId: shareId
          type: folder
          message: message
          userId: "2"
          path: /examplefolder
          sendEmail: "1"
          recipients:
          - created: '{}'
            modified: '{}'
            notificationId: "23"
            id: 2
            email: exampleuser@exavault.com
          - created: '{}'
            modified: '{}'
            notificationId: "23"
            id: 2
            email: exampleuser@exavault.com
          name: examplefolder
          action: all
          modified: '{}'
          usernames:
          - notice_user_all
          recipientEmails:
          - recipient@gmail.com
        id: 1
        type: notification
    NotificationExtendedResponse:
      type: object
      description: Response object for notifications with metadata for included relationships.
      allOf:
      - title: Notification response object
        properties:
          id:
            type: integer
            format: int32
            example: 1
          type:
            type: string
            example: notification
          attributes:
            $ref: '#/components/schemas/NotificationCollectionExtendedResponse_attributes'
          relationships:
            $ref: '#/components/schemas/NotificationCollectionExtendedResponse_relationships'
      - properties:
          included:
            type: array
            items:
              type: object
              anyOf:
              - title: Share
                properties:
                  id:
                    type: integer
                    description: ID of the share.
                    format: int32
                    example: 655621
                  type:
                    type: string
                    example: share
                    enum:
                    - share
                  attributes:
                    type: object
                    properties:
                      name:
                        type: string
                        description: Share name.
                        example: Example Folder
                      hasPassword:
                        type: boolean
                        description: True if the share has password.
                        example: false
                        enum:
                        - true
                        - false
                      public:
                        type: boolean
                        description: True if the share has a public url.
                        example: true
                        enum:
                        - true
                        - false
                      accessMode:
                        type: string
                        description: Access rights for the share.
                        example: upload
                        enum:
                        - upload
                        - download
                        - download_upload
                        - download_upload_modify_delete
                      accessDescription:
                        type: string
                        description: Description of the share access rights.
                        example: Download only
                      embed:
                        type: boolean
                        description: True if share can be embedded.
                        example: false
                      hash:
                        type: string
                        description: Share hash.
                        example: hd1e-3erufo72
                      ownerHash:
                        type: string
                        description: Share owner's hash.
                        example: hd1e-3erufo72-fsxak999
                      expiration:
                        type: string
                        description: Expiration date of the share.
                      expired:
                        type: boolean
                        description: True if the share has expired.
                        example: false
                        enum:
                        - true
                        - false
                      resent:
                        type: string
                        description: Invitations resent date. Can be `null` if resent
                          never happened.
                        format: ISO 8601
                      type:
                        type: string
                        description: Type of share.
                        example: shared_folder
                        enum:
                        - shared_folder
                        - send
                        - receive
                      requireEmail:
                        type: boolean
                        description: True if share requires email to access.
                        example: true
                      fileDropCreateFolders:
                        type: boolean
                        description: Flag to show if separate folders should be created
                          for each file upload to receive folder.
                        example: false
                        enum:
                        - true
                        - false
                      paths:
                        type: array
                        description: Path to the shared resource in your account.
                        example:
                        - /Example Folder
                        items:
                          type: string
                      recipients:
                        type: array
                        description: Array of recipients.
                        example:
                        - id: 2
                          shareId: 23
                          type: direct
                          hash: fseowxan
                          email: recipient@gmail.com
                          sent: true
                          received: false
                          created: {}
                        items:
                          title: ShareRecipient
                          type: object
                          properties:
                            id:
                              type: integer
                              description: ID of the recipient.
                              format: int32
                              example: 2
                            shareId:
                              type: string
                              description: ID of the share that the recipoient belongs
                                to.
                              example: "23"
                            type:
                              type: string
                              description: Type of the recipient.
                              example: owner
                              enum:
                              - owner
                              - direct
                            hash:
                              type: string
                              description: Share hash.
                              example: fseowxan
                            email:
                              type: string
                              description: Recipient email address.
                              example: recipient@gmail.com
                            sent:
                              type: boolean
                              description: Set to true if invite email was sent; false
                                otherwise.
                              example: true
                              enum:
                              - true
                              - false
                            received:
                              type: boolean
                              description: Set to true if recipient has accessed the
                                share. Note this is set to true when the recipient
                                clicks the link to access the share; not when they
                                download a file.
                              example: false
                              enum:
                              - true
                              - false
                            created:
                              type: string
                              description: Timestamp of adding recipient to the share.
                              format: ISO 8601
                              example: '{}'
                      messages:
                        type: array
                        description: Array of invitation messages.
                        items:
                          title: Message
                          type: object
                          properties:
                            id:
                              type: integer
                              description: Message id.
                              format: int32
                              example: 397584
                            type:
                              type: string
                              description: Resource type
                              example: message
                              enum:
                              - message
                            attributes:
                              type: object
                              properties:
                                subject:
                                  type: string
                                  description: Message subject.
                                  example: Files available for download
                                body:
                                  type: string
                                  description: Message text.
                                  example: You have files available for download.
                                created:
                                  type: string
                                  description: Timestamp of message creation.
                                  format: ISO 8601
                                  example: '{}'
                                modified:
                                  type: string
                                  description: Timestamp of message modification.
                                  format: ISO 8601
                                  example: '{}'
                      inherited:
                        type: boolean
                        description: True if share inherited from parent folder.
                        enum:
                        - true
                        - null
                      status:
                        type: integer
                        description: Share activity status. Can be active (1) or deactivated
                          (0).
                        format: int32
                        example: 1
                        enum:
                        - 0
                        - 1
                      hasNotification:
                        type: boolean
                        description: True if share has notification.
                        example: false
                        enum:
                        - true
                        - false
                      notification:
                        type: string
                        description: Notification object if share has one.
                      created:
                        type: string
                        description: Timestamp of share creation.
                        format: YYYY-mm-dd hh:mm:ss
                        example: 2017-05-03 5:49:34 pm
                      modified:
                        type: string
                        description: Timestamp of share modification. Can be `null`
                          if it wasn't modified.
                        format: YYYY-mm-dd hh:mm:ss
                  relationships:
                    type: object
                    properties:
                      messages:
                        type: array
                        description: PLACEHOLDER
                        items:
                          type: object
                          properties:
                            type:
                              type: string
                              description: PLACEHOLDER
                              example: message
                              enum:
                              - message
                            id:
                              type: integer
                              description: PLACEHOLDER
                              example: 21
                      owner:
                        type: object
                        properties:
                          type:
                            type: string
                            description: PLACEHOLDER
                            example: user
                            enum:
                            - user
                          id:
                            type: integer
                            description: PLACEHOLDER
                            example: 12345
                      resource:
                        type: object
                        properties:
                          type:
                            type: string
                            description: PLACEHOLDER
                            example: resource
                            enum:
                            - resource
                          id:
                            type: integer
                            description: PLACEHOLDER
                            example: 12345
                        description: PLACEHOLDER
                      notifications:
                        type: array
                        description: PLACEHOLDER
                        items:
                          type: object
                          properties:
                            type:
                              type: string
                              description: PLACEHOLDER
                              example: notification
                              enum:
                              - notification
                            id:
                              type: integer
                              description: PLACEHOLDER
                              example: 9
                description: Object contains share properties.
              - title: Resource
                properties:
                  id:
                    type: integer
                    format: int32
                    example: 1
                  type:
                    type: string
                    example: resource
                  attributes:
                    type: object
                    properties:
                      hash:
                        type: string
                        description: Unique hash of the resource.
                        example: ec4aa9a91be282666a165899a14f29b1
                      name:
                        type: string
                        description: Resource name, e.g. the name of the file or folder.
                        example: examplefolder
                      extension:
                        type: string
                        description: Resource extension. Property exists only if resource
                          `type` is file.
                        example: .zip
                      type:
                        type: string
                        description: Type of the resource.
                        enum:
                        - file
                        - folder
                        - dir
                      createdBy:
                        type: string
                        description: Username of the creator.
                        example: exampleuser
                      uploadDate:
                        type: string
                        description: Timestamp of resource upload.
                        format: ISO 8601
                        example: '{}'
                      createdAt:
                        type: string
                        description: Timestamp of resource creation.
                        format: ISO 8601
                        example: '{}'
                      updatedAt:
                        type: string
                        description: Timestamp of resource modification.
                        format: ISO 8601
                        example: '{}'
                      accessedAt:
                        type: string
                        description: Timestamp of the time when resource was accessed.
                        format: ISO 8601
                        example: '{}'
                      parent:
                        type: string
                        description: Parent path of the resource.
                        example: /
                      path:
                        type: string
                        description: Full path to the resource.
                        example: /examplefolder
                      fileCount:
                        type: integer
                        description: Count of files in resource. Property exists only
                          if resource `type` is folder.
                        format: int32
                        example: 0
                      size:
                        type: integer
                        description: Resource size.
                        format: int64
                        example: 0
                      previewable:
                        type: boolean
                        description: Can resource be previewed. Property equals `null`
                          if resource `type` is folder.
                        example: true
                        enum:
                        - true
                        - false
                        - null
                  relationships:
                    type: object
                    properties:
                      share:
                        type: object
                        properties:
                          id:
                            type: integer
                            format: int32
                            example: 2345
                          type:
                            type: string
                            example: share
                      notification:
                        type: object
                        properties:
                          id:
                            type: integer
                            format: int32
                            example: 2
                          type:
                            type: string
                            example: notification
                      directFile:
                        type: object
                        properties:
                          id:
                            type: integer
                            format: int32
                            example: 2
                          type:
                            type: string
                            example: directFile
                      parentNode:
                        type: object
                        properties:
                          id:
                            type: integer
                            format: int32
                            example: 2
                          type:
                            type: string
                            example: resource
                description: All properties of the resource.
                discriminator:
                  propertyName: type
              - title: User
                properties:
                  id:
                    type: integer
                    description: ID of the user.
                    format: int32
                    example: 655621
                  type:
                    type: string
                    example: user
                  attributes:
                    type: object
                    properties:
                      status:
                        type: integer
                        description: Indicates user activity status. `0` means the
                          user is locked and cannot log in. `1` means the user is
                          active and can log in.
                        format: int32
                        example: 1
                        enum:
                        - 0
                        - 1
                      expiration:
                        type: string
                        description: Timestamp of user expiration.
                        format: ISO 8601
                      created:
                        type: string
                        description: Timestamp of user creation.
                        format: ISO 8601
                        example: '{}'
                      modified:
                        type: string
                        description: Timestamp of user modification.
                        format: ISO 8601
                        example: '{}'
                      accessTimestamp:
                        type: string
                        description: Timestamp of most recent successful user login.
                        format: ISO 8601
                        example: '{}'
                      accountId:
                        type: integer
                        description: Internal ID of the account this user belongs
                          to.
                        format: int32
                        example: 13758
                      accountName:
                        type: string
                        description: Name of the account this user belongs to.
                        example: exampleuser
                      username:
                        type: string
                        description: Username of the user.
                        example: exampleuser
                      nickname:
                        type: string
                        description: Nickname of the user.
                        example: exampleuser
                      email:
                        type: string
                        description: Email address of the user.
                        example: example@exavault.mail
                      homeDir:
                        type: string
                        description: Path to the user's home folder.
                        example: /
                      permissions:
                        type: object
                        properties:
                          download:
                            type: boolean
                            description: Download permission flag.
                            example: true
                          upload:
                            type: boolean
                            description: Upload permission flag.
                            example: true
                          modify:
                            type: boolean
                            description: Modify permission flag.
                            example: true
                          delete:
                            type: boolean
                            description: Delete permission flag.
                            example: true
                          list:
                            type: boolean
                            description: View files permission flag.
                            example: true
                          changePassword:
                            type: boolean
                            description: Change permission flag.
                            example: true
                          share:
                            type: boolean
                            description: Share folders permission flag.
                            example: true
                          notification:
                            type: boolean
                            description: Create notifications permission flag.
                            example: true
                          viewFormData:
                            type: boolean
                            description: Access Form Data permission flag. If `true`,
                              user can view submissions that have been stored for
                              a receive folder. This includes any data submitted in
                              the receive folder form.
                            example: true
                          deleteFormData:
                            description: Delete form data permission flag. If `true`,
                              user can remove data that was submitted for a receive
                              folder. This applies only to data submitted in the receive
                              folder form, not the actual files uploaded.
                      role:
                        type: string
                        description: User's role.
                        example: user
                        enum:
                        - user
                        - admin
                        - master
                      timeZone:
                        type: string
                        description: User's timezone. See <a href='https://php.net/manual/en/timezones.php'
                          target='blank'>this page</a> for allowed values.
                        example: America/Chicago
                      onboarding:
                        type: boolean
                        description: Whether the onboarding help system is enabled
                          for this user. `true` means that additional help popups
                          are displayed in the web application for this user.
                        example: false
                      firstLogin:
                        type: boolean
                        description: Whether this is the first time the user has logged
                          into the system.
                        example: false
                  relationships:
                    type: object
                    properties:
                      homeDir:
                        type: object
                        properties:
                          type:
                            type: string
                            example: resource
                          id:
                            type: integer
                            format: int32
                            example: 2345
                      account:
                        type: object
                        properties:
                          type:
                            type: string
                            example: account
                          id:
                            type: integer
                            format: int32
                            example: 2
                description: Object contains user properties.
    Notification:
      title: Notification
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        type:
          type: string
          example: notification
        attributes:
          $ref: '#/components/schemas/NotificationCollectionExtendedResponse_attributes'
        relationships:
          $ref: '#/components/schemas/NotificationCollectionExtendedResponse_relationships'
      description: Object containing notification properties.
    UserCollectionExtendedResponse:
      allOf:
      - type: object
        properties:
          responseStatus:
            type: integer
            example: 200
          totalResults:
            type: integer
            example: 2
          returnedResults:
            type: integer
            example: 2
          data:
            type: array
            items:
              $ref: '#/components/schemas/User_1'
      - type: object
        properties:
          included:
            type: array
            items:
              anyOf:
              - title: Account
                type: object
                properties:
                  id:
                    type: integer
                    description: (ExaVault Use Only) Internal ID of the account.
                    format: int32
                    example: 13758
                  type:
                    type: string
                    example: account
                  attributes:
                    type: object
                    properties:
                      accountName:
                        type: string
                        description: PLACEHOLDER
                        example: exampleaccount
                      username:
                        type: string
                        description: Name of the account.
                        example: exampleuser
                      maxUsers:
                        type: integer
                        description: Maximum number of users the account can have.
                          This can be increased by contacting ExaVault Support.
                        format: int32
                        example: 1000
                      userCount:
                        type: integer
                        description: Current number of users on the account.
                        format: int32
                        example: 3
                      status:
                        type: integer
                        description: Account status flag. A one (1) means the account
                          is active; zero (0) means it is suspended.
                        format: int32
                        example: 1
                        enum:
                        - 1
                        - 0
                      branding:
                        type: boolean
                        description: Branding flag. Set to `true` if the account has
                          branding functionality enabled.
                        example: true
                        enum:
                        - true
                        - false
                      customDomain:
                        type: boolean
                        description: Custom domain flag. Set to `true` if account
                          type allows custom domain functionality.
                        example: true
                        enum:
                        - true
                        - false
                      planCode:
                        type: string
                        description: (ExaVault Use Only) Code of the plan account
                          is signed up for.
                        example: 350gb-r206
                      whmcsPlanId:
                        type: integer
                        description: (ExaVault Use Only) Internal ID of the service
                          in CMS.
                        format: int32
                        example: 5970
                      quota:
                        type: object
                        properties:
                          diskLimit:
                            type: integer
                            description: Amount of disk space that the account has
                              available to it. This may be increased by upgrading
                              to a larger plan.
                            format: int64
                            example: 375809638400
                          bandwidthLimit:
                            type: integer
                            description: Amount of bandwidth that the account has
                              available before a warning is generated. All ExaVault
                              accounts include unlimited bandwidth, but we flag high-bandwidth
                              users.
                            format: int64
                          diskUsed:
                            type: integer
                            description: Amount of disk space currently in use.
                            format: int64
                            example: 1225352192
                          bandwidthUsed:
                            type: integer
                            description: Amount of bandwidth used by this account
                              in the last billing period.
                            format: int64
                            example: 0
                          noticeEnabled:
                            type: integer
                            description: Should a quota warning be sent to the account
                              owner when a threshold level of space utilization is
                              reached?
                            format: int32
                            example: 1
                          noticeThreshold:
                            type: integer
                            description: Treshold that triggers a quota notification.
                              This represents the "percent full" your account must
                              be before the quota notification is generated.
                            format: int32
                            example: 80
                      secureOnly:
                        type: boolean
                        description: Flag to indicate whether the account disables
                          connections via insecure protocols (e.g. FTP). Set to `true`
                          to disable all traffic over port 21.
                        example: false
                      complexPasswords:
                        type: boolean
                        description: Flag to indicate whether the account requires
                          complex passwords. Set to `true` to require complex passwords
                          on all users and shares.
                        example: false
                      showReferralLinks:
                        type: boolean
                        description: Flag to indicate showing of referrals links in
                          the account. Set to `true` to include marketing messages
                          in share invitations.
                        example: true
                      externalDomains:
                        type: string
                        description: Custom domain used to brand this account.
                      allowedIp:
                        type: string
                        description: Range of IP addresses allowed to access this
                          account.
                      callbackSettings:
                        type: array
                        description: Callback settings (Webhooks) of the account.
                        items:
                          title: CallbackSettings
                          type: object
                          properties:
                            accountId:
                              type: string
                              description: ID of the account these settings belongs
                                to.
                              example: "13058"
                            endpointUrl:
                              type: string
                              description: Where callback settings object sent to.
                              example: http://test-endpoint.exavault.com
                            token:
                              type: string
                              description: Verification token for the request authentication.
                              example: 380814daa6886641d2ffsw2f43b30312
                            triggers:
                              type: object
                              properties:
                                upload:
                                  type: string
                                  description: Trigger callback on upload.
                                  example: "1"
                                download:
                                  type: string
                                  description: Trigger callback on download.
                                  example: "0"
                                delete:
                                  type: string
                                  description: Trigger callback on delete.
                                  example: "0"
                                createFolder:
                                  type: string
                                  description: Trigger callback on fodler create.
                                  example: "1"
                                rename:
                                  type: string
                                  description: Trigger callback on rename.
                                  example: "0"
                                move:
                                  type: string
                                  description: Trigger callback on move.
                                  example: "0"
                                copy:
                                  type: string
                                  description: Trigger callback on copy.
                                  example: "0"
                                compress:
                                  type: string
                                  description: Trigger callback on compress.
                                  example: "0"
                                extract:
                                  type: string
                                  description: Trigger callback on extract.
                                  example: "0"
                                shareFolder:
                                  type: string
                                  description: Trigger callback on share folder create.
                                  example: "0"
                                sendFiles:
                                  type: string
                                  description: Trigger callback on send files.
                                  example: "0"
                                receiveFiles:
                                  type: string
                                  description: Trigger callback on receive folder
                                    create.
                                  example: "1"
                                updateShare:
                                  type: string
                                  description: Trigger callback on share folder update.
                                  example: "0"
                                updateReceive:
                                  type: string
                                  description: Trigger callback on receive folder
                                    update.
                                  example: "0"
                                deleteSend:
                                  type: string
                                  description: Trigger callback on send files delete.
                                  example: "0"
                                deleteReceive:
                                  type: string
                                  description: Trigger callback on receive folder
                                    delete.
                                  example: "0"
                                deleteShare:
                                  type: string
                                  description: Trigger callback on share folder delete.
                                  example: "0"
                                createNotification:
                                  type: string
                                  description: Trigger callback on notification create.
                                  example: "0"
                                updateNotification:
                                  type: string
                                  description: Trigger callback on notification update.
                                  example: "1"
                                deleteNotification:
                                  type: string
                                  description: Trigger callback on notification delete.
                                  example: "0"
                                createUser:
                                  type: string
                                  description: Trigger callback on user create.
                                  example: "0"
                                updateUser:
                                  type: string
                                  description: Trigger callback on user update.
                                  example: "0"
                                deleteUser:
                                  type: string
                                  description: Trigger callback on user delete.
                                  example: "0"
                                userConnect:
                                  type: string
                                  description: Trigger callback on user connect.
                                  example: "0"
                                userDisconnect:
                                  type: string
                                  description: Trigger callback on user disconnect.
                                  example: "0"
                      brandingSettings:
                        title: BrandingSettings
                        type: object
                        properties:
                          companyName:
                            type: string
                            description: PLACEHOLDER
                          customEmail:
                            type: string
                            description: PLACEHOLDER
                            format: email
                            example: custom@example.com
                          logo:
                            type: string
                            description: PLACEHOLDER
                            example: examplelogo.png
                          logoExt:
                            type: string
                            description: PLACEHOLDER
                            example: png
                          theme:
                            type: string
                            description: PLACEHOLDER
                            example: default
                      trial:
                        type: object
                        properties:
                          free:
                            type: boolean
                            description: Flag indicates if free trial enabled.
                            example: true
                          code:
                            type: string
                            description: (ExaVault Use Only) Internal tracking code
                              representing type of free trial for account.
                          status:
                            type: string
                            description: (ExaVault Use Only) Internal tracking code
                              representing whether trial has ended or is still in
                              progress.
                            example: completed
                          start:
                            type: string
                            description: (ExaVault Use Only) Date that free trial
                              period began.
                            format: ISO 8601
                            example: '{}'
                          end:
                            type: string
                            description: (ExaVault Use Only) Date that free trial
                              period ends.
                            format: ISO 8601
                            example: '{}'
                      clientId:
                        type: integer
                        description: (ExaVault Use Only) Internal ID of the account
                          in CMS.
                        format: int32
                        example: 1
                      welcomeEmailContent:
                        type: string
                        description: Content of welcome email each new user will receive.
                        example: Welcome to your new account!
                      welcomeEmailSubject:
                        type: string
                        description: Subject of welcome email each new user will receive.
                        example: ExaVault File Sharing Account
                      customSignature:
                        type: string
                        description: Custom signature for all account emails users
                          or recipients will receive.
                      accountOnboarding:
                        type: boolean
                        description: Whether the web application onboarding help is
                          enabled for new users in the account.
                        example: false
                      created:
                        type: string
                        description: Timestamp of account creation.
                        format: ISO 8601
                        example: '{}'
                      modified:
                        type: string
                        description: Timestamp of account modification.
                        format: ISO 8601
                        example: '{}'
                  relationships:
                    type: object
                    properties:
                      masterUser:
                        type: object
                        properties:
                          type:
                            type: string
                            example: user
                          id:
                            type: integer
                            example: 8
                description: Object contains all account properties.
              - title: Resource
                type: object
                properties:
                  id:
                    type: integer
                    format: int32
                    example: 1
                  type:
                    type: string
                    example: resource
                  attributes:
                    type: object
                    properties:
                      hash:
                        type: string
                        description: Unique hash of the resource.
                        example: ec4aa9a91be282666a165899a14f29b1
                      name:
                        type: string
                        description: Resource name, e.g. the name of the file or folder.
                        example: examplefolder
                      extension:
                        type: string
                        description: Resource extension. Property exists only if resource
                          `type` is file.
                        example: .zip
                      type:
                        type: string
                        description: Type of the resource.
                        enum:
                        - file
                        - folder
                        - dir
                      createdBy:
                        type: string
                        description: Username of the creator.
                        example: exampleuser
                      uploadDate:
                        type: string
                        description: Timestamp of resource upload.
                        format: ISO 8601
                        example: '{}'
                      createdAt:
                        type: string
                        description: Timestamp of resource creation.
                        format: ISO 8601
                        example: '{}'
                      updatedAt:
                        type: string
                        description: Timestamp of resource modification.
                        format: ISO 8601
                        example: '{}'
                      accessedAt:
                        type: string
                        description: Timestamp of the time when resource was accessed.
                        format: ISO 8601
                        example: '{}'
                      parent:
                        type: string
                        description: Parent path of the resource.
                        example: /
                      path:
                        type: string
                        description: Full path to the resource.
                        example: /examplefolder
                      fileCount:
                        type: integer
                        description: Count of files in resource. Property exists only
                          if resource `type` is folder.
                        format: int32
                        example: 0
                      size:
                        type: integer
                        description: Resource size.
                        format: int64
                        example: 0
                      previewable:
                        type: boolean
                        description: Can resource be previewed. Property equals `null`
                          if resource `type` is folder.
                        example: true
                        enum:
                        - true
                        - false
                        - null
                  relationships:
                    type: object
                    properties:
                      share:
                        type: object
                        properties:
                          id:
                            type: integer
                            format: int32
                            example: 2345
                          type:
                            type: string
                            example: share
                      notification:
                        type: object
                        properties:
                          id:
                            type: integer
                            format: int32
                            example: 2
                          type:
                            type: string
                            example: notification
                      directFile:
                        type: object
                        properties:
                          id:
                            type: integer
                            format: int32
                            example: 2
                          type:
                            type: string
                            example: directFile
                      parentNode:
                        type: object
                        properties:
                          id:
                            type: integer
                            format: int32
                            example: 2
                          type:
                            type: string
                            example: resource
                description: All properties of the resource.
                discriminator:
                  propertyName: type
    UserCollectionResponse:
      type: object
      properties:
        responseStatus:
          type: integer
          description: 'Http status code of the response. '
          example: 200
        totalResults:
          type: integer
          description: Total results found.
          example: 2
        returnedResults:
          type: integer
          description: Number of results returned.
          example: 2
        data:
          type: array
          items:
            $ref: '#/components/schemas/User_2'
    UserResponse:
      title: User response object
      type: object
      properties:
        id:
          type: integer
          description: ID of the user.
          format: int32
          example: 655621
        type:
          type: string
          description: Type is user.
          example: user
        attributes:
          $ref: '#/components/schemas/UserResponse_attributes'
        relationships:
          $ref: '#/components/schemas/UserResponse_relationships'
      description: Response object for users.
      example:
        relationships:
          homeResource:
            id: 2345
            type: resource
          ownerAccount:
            id: 2
            type: account
        attributes:
          role: user
          accountName: exampleuser
          firstLogin: false
          created: '{}'
          timeZone: America/Chicago
          accessTimestamp: '{}'
          homeDir: /
          permissions:
            modify: true
            notification: true
            download: true
            viewFormData: true
            upload: true
            share: true
            list: true
            delete: true
            changePassword: true
            deleteFormData: ""
          nickname: exampleuser
          modified: '{}'
          onboarding: false
          expiration: expiration
          email: example@exavault.mail
          status: 1
          username: exampleuser
        id: 655621
        type: user
    UserExtendedResponse:
      type: object
      description: Response object for users with metadata for included relationships.
      allOf:
      - title: User response object
        required:
        - data
        - included
        properties:
          data:
            $ref: '#/components/schemas/User'
          included:
            type: array
            items:
              type: object
              anyOf:
              - properties:
                  id:
                    type: integer
                  type:
                    type: string
                  attributes:
                    $ref: '#/components/schemas/AccountAttributes'
              - properties:
                  id:
                    type: integer
                  type:
                    type: string
                  attributes:
                    $ref: '#/components/schemas/ResourceAttributes'
        description: User with related records response
    User:
      title: User
      required:
      - attributes
      - id
      - relationships
      - type
      type: object
      properties:
        id:
          type: integer
          description: ID of the user.
          format: int32
          example: 655621
        type:
          type: string
          description: Type of object being returned. Always "user"
          example: user
        attributes:
          $ref: '#/components/schemas/User_attributes'
        relationships:
          $ref: '#/components/schemas/User_relationships'
      description: Object contains user properties.
    AvailableUserResponse:
      title: Available user response object
      type: object
      properties:
        responseStatus:
          type: integer
          description: 'Http status code of the response. '
          example: 200
        data:
          $ref: '#/components/schemas/AvailableUser_1'
      description: PLACEHOLDER
    AvailableUser:
      title: AvailableUser
      type: object
      properties:
        available:
          type: boolean
          description: Flag indicates if username is available.
          example: true
          enum:
          - true
          - false
      description: Object contains infromation about username availability.
    ResourceCollectionExtendedResponse:
      allOf:
      - type: object
        properties:
          responseStatus:
            type: integer
            example: 200
          totalResults:
            type: integer
            example: 2
          returnedResults:
            type: integer
            example: 2
          data:
            type: array
            items:
              $ref: '#/components/schemas/Resource_1'
      - type: object
        properties:
          included:
            type: array
            items:
              anyOf:
              - title: Share
                type: object
                properties:
                  id:
                    type: integer
                    description: ID of the share.
                    format: int32
                    example: 655621
                  type:
                    type: string
                    example: share
                    enum:
                    - share
                  attributes:
                    type: object
                    properties:
                      name:
                        type: string
                        description: Share name.
                        example: Example Folder
                      hasPassword:
                        type: boolean
                        description: True if the share has password.
                        example: false
                        enum:
                        - true
                        - false
                      public:
                        type: boolean
                        description: True if the share has a public url.
                        example: true
                        enum:
                        - true
                        - false
                      accessMode:
                        type: string
                        description: Access rights for the share.
                        example: upload
                        enum:
                        - upload
                        - download
                        - download_upload
                        - download_upload_modify_delete
                      accessDescription:
                        type: string
                        description: Description of the share access rights.
                        example: Download only
                      embed:
                        type: boolean
                        description: True if share can be embedded.
                        example: false
                      hash:
                        type: string
                        description: Share hash.
                        example: hd1e-3erufo72
                      ownerHash:
                        type: string
                        description: Share owner's hash.
                        example: hd1e-3erufo72-fsxak999
                      expiration:
                        type: string
                        description: Expiration date of the share.
                      expired:
                        type: boolean
                        description: True if the share has expired.
                        example: false
                        enum:
                        - true
                        - false
                      resent:
                        type: string
                        description: Invitations resent date. Can be `null` if resent
                          never happened.
                        format: ISO 8601
                      type:
                        type: string
                        description: Type of share.
                        example: shared_folder
                        enum:
                        - shared_folder
                        - send
                        - receive
                      requireEmail:
                        type: boolean
                        description: True if share requires email to access.
                        example: true
                      fileDropCreateFolders:
                        type: boolean
                        description: Flag to show if separate folders should be created
                          for each file upload to receive folder.
                        example: false
                        enum:
                        - true
                        - false
                      paths:
                        type: array
                        description: Path to the shared resource in your account.
                        example:
                        - /Example Folder
                        items:
                          type: string
                      recipients:
                        type: array
                        description: Array of recipients.
                        example:
                        - id: 2
                          shareId: 23
                          type: direct
                          hash: fseowxan
                          email: recipient@gmail.com
                          sent: true
                          received: false
                          created: {}
                        items:
                          title: ShareRecipient
                          type: object
                          properties:
                            id:
                              type: integer
                              description: ID of the recipient.
                              format: int32
                              example: 2
                            shareId:
                              type: string
                              description: ID of the share that the recipoient belongs
                                to.
                              example: "23"
                            type:
                              type: string
                              description: Type of the recipient.
                              example: owner
                              enum:
                              - owner
                              - direct
                            hash:
                              type: string
                              description: Share hash.
                              example: fseowxan
                            email:
                              type: string
                              description: Recipient email address.
                              example: recipient@gmail.com
                            sent:
                              type: boolean
                              description: Set to true if invite email was sent; false
                                otherwise.
                              example: true
                              enum:
                              - true
                              - false
                            received:
                              type: boolean
                              description: Set to true if recipient has accessed the
                                share. Note this is set to true when the recipient
                                clicks the link to access the share; not when they
                                download a file.
                              example: false
                              enum:
                              - true
                              - false
                            created:
                              type: string
                              description: Timestamp of adding recipient to the share.
                              format: ISO 8601
                              example: '{}'
                      messages:
                        type: array
                        description: Array of invitation messages.
                        items:
                          title: Message
                          type: object
                          properties:
                            id:
                              type: integer
                              description: Message id.
                              format: int32
                              example: 397584
                            type:
                              type: string
                              description: Resource type
                              example: message
                              enum:
                              - message
                            attributes:
                              type: object
                              properties:
                                subject:
                                  type: string
                                  description: Message subject.
                                  example: Files available for download
                                body:
                                  type: string
                                  description: Message text.
                                  example: You have files available for download.
                                created:
                                  type: string
                                  description: Timestamp of message creation.
                                  format: ISO 8601
                                  example: '{}'
                                modified:
                                  type: string
                                  description: Timestamp of message modification.
                                  format: ISO 8601
                                  example: '{}'
                      inherited:
                        type: boolean
                        description: True if share inherited from parent folder.
                        enum:
                        - true
                        - null
                      status:
                        type: integer
                        description: Share activity status. Can be active (1) or deactivated
                          (0).
                        format: int32
                        example: 1
                        enum:
                        - 0
                        - 1
                      hasNotification:
                        type: boolean
                        description: True if share has notification.
                        example: false
                        enum:
                        - true
                        - false
                      notification:
                        type: string
                        description: Notification object if share has one.
                      created:
                        type: string
                        description: Timestamp of share creation.
                        format: YYYY-mm-dd hh:mm:ss
                        example: 2017-05-03 5:49:34 pm
                      modified:
                        type: string
                        description: Timestamp of share modification. Can be `null`
                          if it wasn't modified.
                        format: YYYY-mm-dd hh:mm:ss
                  relationships:
                    type: object
                    properties:
                      messages:
                        type: array
                        description: PLACEHOLDER
                        items:
                          type: object
                          properties:
                            type:
                              type: string
                              description: PLACEHOLDER
                              example: message
                              enum:
                              - message
                            id:
                              type: integer
                              description: PLACEHOLDER
                              example: 21
                      owner:
                        type: object
                        properties:
                          type:
                            type: string
                            description: PLACEHOLDER
                            example: user
                            enum:
                            - user
                          id:
                            type: integer
                            description: PLACEHOLDER
                            example: 12345
                      resource:
                        type: object
                        properties:
                          type:
                            type: string
                            description: PLACEHOLDER
                            example: resource
                            enum:
                            - resource
                          id:
                            type: integer
                            description: PLACEHOLDER
                            example: 12345
                        description: PLACEHOLDER
                      notifications:
                        type: array
                        description: PLACEHOLDER
                        items:
                          type: object
                          properties:
                            type:
                              type: string
                              description: PLACEHOLDER
                              example: notification
                              enum:
                              - notification
                            id:
                              type: integer
                              description: PLACEHOLDER
                              example: 9
                description: Object contains share properties.
              - title: DirectFile
                type: object
                properties:
                  id:
                    type: integer
                    description: ID of the direct file.
                    format: int32
                    example: 655621
                  type:
                    type: string
                    example: direct-file
                    enum:
                    - direct-file
                  attributes:
                    type: object
                    properties:
                      path:
                        type: string
                        description: Path to the folder direct file is set on.
                        example: /dfa folder
                      isEnabled:
                        type: boolean
                        description: Flag indicates if direct file is turned `on`
                          or `off`.
                        example: true
                      isIndexEnabled:
                        type: boolean
                        description: Flag indicates if folder listing is `on` or `off`.
                          If it is enabled you can see folder content in the browser.
                        example: true
                      blockUntil:
                        type: string
                        description: Timestamp of direct file block until date. Equals
                          `0000-00-00 00:00:00` when no block date is setup. Used
                          when direct file bandwidth quota limit crossed.
                        format: ISO 8601
                        example: '{}'
                      created:
                        type: string
                        description: Unix timestamp of direct file creation.
                        example: "1504201616"
                      modified:
                        type: string
                        description: Unix timestamp of direct file modification.
                        example: "1504201780"
                  relationships:
                    type: object
                    properties:
                      owner:
                        type: object
                        properties:
                          type:
                            type: string
                            example: user
                            enum:
                            - user
                          id:
                            type: integer
                            example: 37
                      resource:
                        type: object
                        properties:
                          type:
                            type: string
                            example: resource
                            enum:
                            - resource
                          id:
                            type: integer
                            example: 38
              - title: Notification
                type: object
                properties:
                  id:
                    type: integer
                    format: int32
                    example: 1
                  type:
                    type: string
                    example: notification
                  attributes:
                    type: object
                    properties:
                      userId:
                        type: string
                        description: ID of the user that the notification belongs
                          to.
                        example: "2"
                      type:
                        type: string
                        description: Notification type.
                        example: folder
                        enum:
                        - file
                        - folder
                        - shared_folder
                        - send_receipt
                        - share_receipt
                        - file_drop
                      path:
                        type: string
                        description: Path to the item that the notification is set
                          on.
                        example: /examplefolder
                      name:
                        type: string
                        description: Name of the item that the notification is set
                          on.
                        example: examplefolder
                      action:
                        type: string
                        description: Action that triggers notification.
                        example: all
                        enum:
                        - upload
                        - download
                        - delete
                        - all
                      usernames:
                        type: array
                        description: Detail on which users can trigger the notification.
                        example:
                        - notice_user_all
                        items:
                          type: string
                      recipients:
                        type: array
                        description: Notification recipients.
                        items:
                          title: NotificartionRecipient
                          type: object
                          properties:
                            id:
                              type: integer
                              description: ID of the recipient.
                              format: int32
                              example: 2
                            notificationId:
                              type: string
                              description: ID of the notification that the recipient
                                belongs to.
                              example: "23"
                            email:
                              type: string
                              description: Recipient email.
                              example: exampleuser@exavault.com
                            created:
                              type: string
                              description: Timestamp of adding notification recipient.
                              format: ISO 8601
                              example: '{}'
                            modified:
                              type: string
                              description: Timestamp of notification recipient modification.
                              format: ISO 8601
                              example: '{}'
                      recipientEmails:
                        type: array
                        description: Email addresses of all recipients.
                        example:
                        - recipient@gmail.com
                        items:
                          type: string
                          format: email
                      sendEmail:
                        type: string
                        description: Send email when the notification is triggered.
                        example: "1"
                        enum:
                        - "0"
                        - "1"
                      readableDescription:
                        type: string
                        description: Human readable description of the notification.
                        example: anybody changes, downloads or deletes '/examplefile.jpg'
                      readableDescriptionWithoutPath:
                        type: string
                        description: Human readable description of the notification
                          without item path.
                        example: anybody changes or downloads this file
                      shareId:
                        type: string
                        description: ID of the share that the notification belogns
                          to.
                      message:
                        type: string
                        description: Custom message that will be sent to the notification
                          recipients.
                      created:
                        type: string
                        description: Timestamp of notifiction creation.
                        format: ISO 8601
                        example: '{}'
                      modified:
                        type: string
                        description: Timestamp of notification modification.
                        format: ISO 8601
                        example: '{}'
                  relationships:
                    type: object
                    properties:
                      node:
                        type: object
                        properties:
                          type:
                            type: string
                            example: resource
                          id:
                            type: integer
                            format: int32
                            example: 2345
                      share:
                        type: object
                        properties:
                          type:
                            type: string
                            example: share
                          id:
                            type: integer
                            format: int32
                            example: 2
                      owner:
                        type: object
                        properties:
                          type:
                            type: string
                            description: PLACEHOLDER
                            example: user
                            enum:
                            - user
                          id:
                            type: integer
                            description: PLACEHOLDER
                            example: 12345
                description: Object containing notification properties.
              - title: Resource
                type: object
                properties:
                  id:
                    type: integer
                    format: int32
                    example: 1
                  type:
                    type: string
                    example: resource
                  attributes:
                    type: object
                    properties:
                      hash:
                        type: string
                        description: Unique hash of the resource.
                        example: ec4aa9a91be282666a165899a14f29b1
                      name:
                        type: string
                        description: Resource name, e.g. the name of the file or folder.
                        example: examplefolder
                      extension:
                        type: string
                        description: Resource extension. Property exists only if resource
                          `type` is file.
                        example: .zip
                      type:
                        type: string
                        description: Type of the resource.
                        enum:
                        - file
                        - folder
                        - dir
                      createdBy:
                        type: string
                        description: Username of the creator.
                        example: exampleuser
                      uploadDate:
                        type: string
                        description: Timestamp of resource upload.
                        format: ISO 8601
                        example: '{}'
                      createdAt:
                        type: string
                        description: Timestamp of resource creation.
                        format: ISO 8601
                        example: '{}'
                      updatedAt:
                        type: string
                        description: Timestamp of resource modification.
                        format: ISO 8601
                        example: '{}'
                      accessedAt:
                        type: string
                        description: Timestamp of the time when resource was accessed.
                        format: ISO 8601
                        example: '{}'
                      parent:
                        type: string
                        description: Parent path of the resource.
                        example: /
                      path:
                        type: string
                        description: Full path to the resource.
                        example: /examplefolder
                      fileCount:
                        type: integer
                        description: Count of files in resource. Property exists only
                          if resource `type` is folder.
                        format: int32
                        example: 0
                      size:
                        type: integer
                        description: Resource size.
                        format: int64
                        example: 0
                      previewable:
                        type: boolean
                        description: Can resource be previewed. Property equals `null`
                          if resource `type` is folder.
                        example: true
                        enum:
                        - true
                        - false
                        - null
                  relationships:
                    type: object
                    properties:
                      share:
                        type: object
                        properties:
                          id:
                            type: integer
                            format: int32
                            example: 2345
                          type:
                            type: string
                            example: share
                      notification:
                        type: object
                        properties:
                          id:
                            type: integer
                            format: int32
                            example: 2
                          type:
                            type: string
                            example: notification
                      directFile:
                        type: object
                        properties:
                          id:
                            type: integer
                            format: int32
                            example: 2
                          type:
                            type: string
                            example: directFile
                      parentNode:
                        type: object
                        properties:
                          id:
                            type: integer
                            format: int32
                            example: 2
                          type:
                            type: string
                            example: resource
                description: All properties of the resource.
                discriminator:
                  propertyName: type
    ResourceCollectionMetaResponse:
      allOf:
      - type: object
        properties:
          responseStatus:
            type: integer
            example: 200
          totalResults:
            type: integer
            example: 2
          returnedResults:
            type: integer
            example: 2
          data:
            type: array
            items:
              $ref: '#/components/schemas/Resource_1'
      - type: object
        properties:
          meta:
            $ref: '#/components/schemas/ResourceCollectionMetaResponse_meta'
    ResourceCollectionResponse:
      type: object
      properties:
        responseStatus:
          type: integer
          example: 200
        totalResults:
          type: integer
          example: 2
        returnedResults:
          type: integer
          example: 2
        data:
          type: array
          items:
            $ref: '#/components/schemas/Resource_1'
    ResourceExtendedResponse:
      type: object
      allOf:
      - title: Resource response object
        properties:
          responseStatus:
            type: integer
            description: 'Http status code of the response. '
            example: 200
          data:
            $ref: '#/components/schemas/Resource_2'
        description: Response object for resources with metadata for included relationships.
      - properties:
          included:
            type: array
            items:
              type: object
              anyOf:
              - title: Share
                properties:
                  id:
                    type: integer
                    description: ID of the share.
                    format: int32
                    example: 655621
                  type:
                    type: string
                    example: share
                    enum:
                    - share
                  attributes:
                    type: object
                    properties:
                      name:
                        type: string
                        description: Share name.
                        example: Example Folder
                      hasPassword:
                        type: boolean
                        description: True if the share has password.
                        example: false
                        enum:
                        - true
                        - false
                      public:
                        type: boolean
                        description: True if the share has a public url.
                        example: true
                        enum:
                        - true
                        - false
                      accessMode:
                        type: string
                        description: Access rights for the share.
                        example: upload
                        enum:
                        - upload
                        - download
                        - download_upload
                        - download_upload_modify_delete
                      accessDescription:
                        type: string
                        description: Description of the share access rights.
                        example: Download only
                      embed:
                        type: boolean
                        description: True if share can be embedded.
                        example: false
                      hash:
                        type: string
                        description: Share hash.
                        example: hd1e-3erufo72
                      ownerHash:
                        type: string
                        description: Share owner's hash.
                        example: hd1e-3erufo72-fsxak999
                      expiration:
                        type: string
                        description: Expiration date of the share.
                      expired:
                        type: boolean
                        description: True if the share has expired.
                        example: false
                        enum:
                        - true
                        - false
                      resent:
                        type: string
                        description: Invitations resent date. Can be `null` if resent
                          never happened.
                        format: ISO 8601
                      type:
                        type: string
                        description: Type of share.
                        example: shared_folder
                        enum:
                        - shared_folder
                        - send
                        - receive
                      requireEmail:
                        type: boolean
                        description: True if share requires email to access.
                        example: true
                      fileDropCreateFolders:
                        type: boolean
                        description: Flag to show if separate folders should be created
                          for each file upload to receive folder.
                        example: false
                        enum:
                        - true
                        - false
                      paths:
                        type: array
                        description: Path to the shared resource in your account.
                        example:
                        - /Example Folder
                        items:
                          type: string
                      recipients:
                        type: array
                        description: Array of recipients.
                        example:
                        - id: 2
                          shareId: 23
                          type: direct
                          hash: fseowxan
                          email: recipient@gmail.com
                          sent: true
                          received: false
                          created: {}
                        items:
                          title: ShareRecipient
                          type: object
                          properties:
                            id:
                              type: integer
                              description: ID of the recipient.
                              format: int32
                              example: 2
                            shareId:
                              type: string
                              description: ID of the share that the recipoient belongs
                                to.
                              example: "23"
                            type:
                              type: string
                              description: Type of the recipient.
                              example: owner
                              enum:
                              - owner
                              - direct
                            hash:
                              type: string
                              description: Share hash.
                              example: fseowxan
                            email:
                              type: string
                              description: Recipient email address.
                              example: recipient@gmail.com
                            sent:
                              type: boolean
                              description: Set to true if invite email was sent; false
                                otherwise.
                              example: true
                              enum:
                              - true
                              - false
                            received:
                              type: boolean
                              description: Set to true if recipient has accessed the
                                share. Note this is set to true when the recipient
                                clicks the link to access the share; not when they
                                download a file.
                              example: false
                              enum:
                              - true
                              - false
                            created:
                              type: string
                              description: Timestamp of adding recipient to the share.
                              format: ISO 8601
                              example: '{}'
                      messages:
                        type: array
                        description: Array of invitation messages.
                        items:
                          title: Message
                          type: object
                          properties:
                            id:
                              type: integer
                              description: Message id.
                              format: int32
                              example: 397584
                            type:
                              type: string
                              description: Resource type
                              example: message
                              enum:
                              - message
                            attributes:
                              type: object
                              properties:
                                subject:
                                  type: string
                                  description: Message subject.
                                  example: Files available for download
                                body:
                                  type: string
                                  description: Message text.
                                  example: You have files available for download.
                                created:
                                  type: string
                                  description: Timestamp of message creation.
                                  format: ISO 8601
                                  example: '{}'
                                modified:
                                  type: string
                                  description: Timestamp of message modification.
                                  format: ISO 8601
                                  example: '{}'
                      inherited:
                        type: boolean
                        description: True if share inherited from parent folder.
                        enum:
                        - true
                        - null
                      status:
                        type: integer
                        description: Share activity status. Can be active (1) or deactivated
                          (0).
                        format: int32
                        example: 1
                        enum:
                        - 0
                        - 1
                      hasNotification:
                        type: boolean
                        description: True if share has notification.
                        example: false
                        enum:
                        - true
                        - false
                      notification:
                        type: string
                        description: Notification object if share has one.
                      created:
                        type: string
                        description: Timestamp of share creation.
                        format: YYYY-mm-dd hh:mm:ss
                        example: 2017-05-03 5:49:34 pm
                      modified:
                        type: string
                        description: Timestamp of share modification. Can be `null`
                          if it wasn't modified.
                        format: YYYY-mm-dd hh:mm:ss
                  relationships:
                    type: object
                    properties:
                      messages:
                        type: array
                        description: PLACEHOLDER
                        items:
                          type: object
                          properties:
                            type:
                              type: string
                              description: PLACEHOLDER
                              example: message
                              enum:
                              - message
                            id:
                              type: integer
                              description: PLACEHOLDER
                              example: 21
                      owner:
                        type: object
                        properties:
                          type:
                            type: string
                            description: PLACEHOLDER
                            example: user
                            enum:
                            - user
                          id:
                            type: integer
                            description: PLACEHOLDER
                            example: 12345
                      resource:
                        type: object
                        properties:
                          type:
                            type: string
                            description: PLACEHOLDER
                            example: resource
                            enum:
                            - resource
                          id:
                            type: integer
                            description: PLACEHOLDER
                            example: 12345
                        description: PLACEHOLDER
                      notifications:
                        type: array
                        description: PLACEHOLDER
                        items:
                          type: object
                          properties:
                            type:
                              type: string
                              description: PLACEHOLDER
                              example: notification
                              enum:
                              - notification
                            id:
                              type: integer
                              description: PLACEHOLDER
                              example: 9
                description: Object contains share properties.
              - title: DirectFile
                properties:
                  id:
                    type: integer
                    description: ID of the direct file.
                    format: int32
                    example: 655621
                  type:
                    type: string
                    example: direct-file
                    enum:
                    - direct-file
                  attributes:
                    type: object
                    properties:
                      path:
                        type: string
                        description: Path to the folder direct file is set on.
                        example: /dfa folder
                      isEnabled:
                        type: boolean
                        description: Flag indicates if direct file is turned `on`
                          or `off`.
                        example: true
                      isIndexEnabled:
                        type: boolean
                        description: Flag indicates if folder listing is `on` or `off`.
                          If it is enabled you can see folder content in the browser.
                        example: true
                      blockUntil:
                        type: string
                        description: Timestamp of direct file block until date. Equals
                          `0000-00-00 00:00:00` when no block date is setup. Used
                          when direct file bandwidth quota limit crossed.
                        format: ISO 8601
                        example: '{}'
                      created:
                        type: string
                        description: Unix timestamp of direct file creation.
                        example: "1504201616"
                      modified:
                        type: string
                        description: Unix timestamp of direct file modification.
                        example: "1504201780"
                  relationships:
                    type: object
                    properties:
                      owner:
                        type: object
                        properties:
                          type:
                            type: string
                            example: user
                            enum:
                            - user
                          id:
                            type: integer
                            example: 37
                      resource:
                        type: object
                        properties:
                          type:
                            type: string
                            example: resource
                            enum:
                            - resource
                          id:
                            type: integer
                            example: 38
              - title: Notification
                properties:
                  id:
                    type: integer
                    format: int32
                    example: 1
                  type:
                    type: string
                    example: notification
                  attributes:
                    type: object
                    properties:
                      userId:
                        type: string
                        description: ID of the user that the notification belongs
                          to.
                        example: "2"
                      type:
                        type: string
                        description: Notification type.
                        example: folder
                        enum:
                        - file
                        - folder
                        - shared_folder
                        - send_receipt
                        - share_receipt
                        - file_drop
                      path:
                        type: string
                        description: Path to the item that the notification is set
                          on.
                        example: /examplefolder
                      name:
                        type: string
                        description: Name of the item that the notification is set
                          on.
                        example: examplefolder
                      action:
                        type: string
                        description: Action that triggers notification.
                        example: all
                        enum:
                        - upload
                        - download
                        - delete
                        - all
                      usernames:
                        type: array
                        description: Detail on which users can trigger the notification.
                        example:
                        - notice_user_all
                        items:
                          type: string
                      recipients:
                        type: array
                        description: Notification recipients.
                        items:
                          title: NotificartionRecipient
                          type: object
                          properties:
                            id:
                              type: integer
                              description: ID of the recipient.
                              format: int32
                              example: 2
                            notificationId:
                              type: string
                              description: ID of the notification that the recipient
                                belongs to.
                              example: "23"
                            email:
                              type: string
                              description: Recipient email.
                              example: exampleuser@exavault.com
                            created:
                              type: string
                              description: Timestamp of adding notification recipient.
                              format: ISO 8601
                              example: '{}'
                            modified:
                              type: string
                              description: Timestamp of notification recipient modification.
                              format: ISO 8601
                              example: '{}'
                      recipientEmails:
                        type: array
                        description: Email addresses of all recipients.
                        example:
                        - recipient@gmail.com
                        items:
                          type: string
                          format: email
                      sendEmail:
                        type: string
                        description: Send email when the notification is triggered.
                        example: "1"
                        enum:
                        - "0"
                        - "1"
                      readableDescription:
                        type: string
                        description: Human readable description of the notification.
                        example: anybody changes, downloads or deletes '/examplefile.jpg'
                      readableDescriptionWithoutPath:
                        type: string
                        description: Human readable description of the notification
                          without item path.
                        example: anybody changes or downloads this file
                      shareId:
                        type: string
                        description: ID of the share that the notification belogns
                          to.
                      message:
                        type: string
                        description: Custom message that will be sent to the notification
                          recipients.
                      created:
                        type: string
                        description: Timestamp of notifiction creation.
                        format: ISO 8601
                        example: '{}'
                      modified:
                        type: string
                        description: Timestamp of notification modification.
                        format: ISO 8601
                        example: '{}'
                  relationships:
                    type: object
                    properties:
                      node:
                        type: object
                        properties:
                          type:
                            type: string
                            example: resource
                          id:
                            type: integer
                            format: int32
                            example: 2345
                      share:
                        type: object
                        properties:
                          type:
                            type: string
                            example: share
                          id:
                            type: integer
                            format: int32
                            example: 2
                      owner:
                        type: object
                        properties:
                          type:
                            type: string
                            description: PLACEHOLDER
                            example: user
                            enum:
                            - user
                          id:
                            type: integer
                            description: PLACEHOLDER
                            example: 12345
                description: Object containing notification properties.
              - title: Resource
                properties:
                  id:
                    type: integer
                    format: int32
                    example: 1
                  type:
                    type: string
                    example: resource
                  attributes:
                    type: object
                    properties:
                      hash:
                        type: string
                        description: Unique hash of the resource.
                        example: ec4aa9a91be282666a165899a14f29b1
                      name:
                        type: string
                        description: Resource name, e.g. the name of the file or folder.
                        example: examplefolder
                      extension:
                        type: string
                        description: Resource extension. Property exists only if resource
                          `type` is file.
                        example: .zip
                      type:
                        type: string
                        description: Type of the resource.
                        enum:
                        - file
                        - folder
                        - dir
                      createdBy:
                        type: string
                        description: Username of the creator.
                        example: exampleuser
                      uploadDate:
                        type: string
                        description: Timestamp of resource upload.
                        format: ISO 8601
                        example: '{}'
                      createdAt:
                        type: string
                        description: Timestamp of resource creation.
                        format: ISO 8601
                        example: '{}'
                      updatedAt:
                        type: string
                        description: Timestamp of resource modification.
                        format: ISO 8601
                        example: '{}'
                      accessedAt:
                        type: string
                        description: Timestamp of the time when resource was accessed.
                        format: ISO 8601
                        example: '{}'
                      parent:
                        type: string
                        description: Parent path of the resource.
                        example: /
                      path:
                        type: string
                        description: Full path to the resource.
                        example: /examplefolder
                      fileCount:
                        type: integer
                        description: Count of files in resource. Property exists only
                          if resource `type` is folder.
                        format: int32
                        example: 0
                      size:
                        type: integer
                        description: Resource size.
                        format: int64
                        example: 0
                      previewable:
                        type: boolean
                        description: Can resource be previewed. Property equals `null`
                          if resource `type` is folder.
                        example: true
                        enum:
                        - true
                        - false
                        - null
                  relationships:
                    type: object
                    properties:
                      share:
                        type: object
                        properties:
                          id:
                            type: integer
                            format: int32
                            example: 2345
                          type:
                            type: string
                            example: share
                      notification:
                        type: object
                        properties:
                          id:
                            type: integer
                            format: int32
                            example: 2
                          type:
                            type: string
                            example: notification
                      directFile:
                        type: object
                        properties:
                          id:
                            type: integer
                            format: int32
                            example: 2
                          type:
                            type: string
                            example: directFile
                      parentNode:
                        type: object
                        properties:
                          id:
                            type: integer
                            format: int32
                            example: 2
                          type:
                            type: string
                            example: resource
                description: All properties of the resource.
                discriminator:
                  propertyName: type
    ResourceMultiResponse:
      title: Resource multi response object
      type: object
      properties:
        responses:
          type: array
          items:
            allOf:
            - allOf:
              - type: object
                properties:
                  responseStatus:
                    type: integer
                    example: 200
                  totalResults:
                    type: integer
                    example: 2
                  returnedResults:
                    type: integer
                    example: 2
                  data:
                    type: array
                    items:
                      title: Resource
                      type: object
                      properties:
                        id:
                          type: integer
                          format: int32
                          example: 1
                        type:
                          type: string
                          example: resource
                        attributes:
                          type: object
                          properties:
                            hash:
                              type: string
                              description: Unique hash of the resource.
                              example: ec4aa9a91be282666a165899a14f29b1
                            name:
                              type: string
                              description: Resource name, e.g. the name of the file
                                or folder.
                              example: examplefolder
                            extension:
                              type: string
                              description: Resource extension. Property exists only
                                if resource `type` is file.
                              example: .zip
                            type:
                              type: string
                              description: Type of the resource.
                              enum:
                              - file
                              - folder
                              - dir
                            createdBy:
                              type: string
                              description: Username of the creator.
                              example: exampleuser
                            uploadDate:
                              type: string
                              description: Timestamp of resource upload.
                              format: ISO 8601
                              example: '{}'
                            createdAt:
                              type: string
                              description: Timestamp of resource creation.
                              format: ISO 8601
                              example: '{}'
                            updatedAt:
                              type: string
                              description: Timestamp of resource modification.
                              format: ISO 8601
                              example: '{}'
                            accessedAt:
                              type: string
                              description: Timestamp of the time when resource was
                                accessed.
                              format: ISO 8601
                              example: '{}'
                            parent:
                              type: string
                              description: Parent path of the resource.
                              example: /
                            path:
                              type: string
                              description: Full path to the resource.
                              example: /examplefolder
                            fileCount:
                              type: integer
                              description: Count of files in resource. Property exists
                                only if resource `type` is folder.
                              format: int32
                              example: 0
                            size:
                              type: integer
                              description: Resource size.
                              format: int64
                              example: 0
                            previewable:
                              type: boolean
                              description: Can resource be previewed. Property equals
                                `null` if resource `type` is folder.
                              example: true
                              enum:
                              - true
                              - false
                              - null
                        relationships:
                          type: object
                          properties:
                            share:
                              type: object
                              properties:
                                id:
                                  type: integer
                                  format: int32
                                  example: 2345
                                type:
                                  type: string
                                  example: share
                            notification:
                              type: object
                              properties:
                                id:
                                  type: integer
                                  format: int32
                                  example: 2
                                type:
                                  type: string
                                  example: notification
                            directFile:
                              type: object
                              properties:
                                id:
                                  type: integer
                                  format: int32
                                  example: 2
                                type:
                                  type: string
                                  example: directFile
                            parentNode:
                              type: object
                              properties:
                                id:
                                  type: integer
                                  format: int32
                                  example: 2
                                type:
                                  type: string
                                  example: resource
                      description: All properties of the resource.
                      discriminator:
                        propertyName: type
              - type: object
                properties:
                  meta:
                    type: object
                    properties:
                      originalId:
                        type: integer
                        example: 35
                      resourcePath:
                        type: string
                        example: /file_two
                      destination:
                        type: string
                        example: /test_api\/file_two
            - type: object
              properties:
                responseStatus:
                  type: integer
                  description: 'Http status code of the response. '
                  example: 404
                errors:
                  type: array
                  items:
                    title: Error
                    type: object
                    properties:
                      code:
                        type: string
                        description: Specific internal error string.
                        example: <PLACEHOLDER_ERROR_CODE>
                      title:
                        type: string
                        description: Human readable summary of the problem.
                        example: <PLACEHOLDER_TITLE>
                      detail:
                        type: string
                        description: human-readable explanation specific to this occurrence
                          of the problem.
                        example: <PLACEHOLDER_DETAIL>
                      meta:
                        type: object
                        description: Meta object containing non-standard meta-information
                          about the error.
                        example: <PLACEHOLDER_META_OBJECT>
    ResourceDeleteResponse:
      title: Resource delete response object
      type: object
      properties:
        responseStatus:
          type: integer
          example: 200
        data:
          $ref: '#/components/schemas/ResourceDeleteResponse_data'
      description: PLACEHOLDER
    ResourceMultiResponseDelete:
      title: Resource delete multi response object
      type: object
      properties:
        responses:
          type: array
          items:
            type: object
            allOf:
            - title: Resource delete response object
              properties:
                responseStatus:
                  type: integer
                  description: 'Http status code of the response. '
                  example: 200
                data:
                  type: object
                  properties:
                    id:
                      type: integer
                      description: 'ID of the deleted resource. '
                      format: int32
                      example: 1
                    type:
                      type: string
                      description: 'Type is resource. '
                      example: resource
                    meta:
                      type: object
                      description: Meta object containing non-standard meta-information
                        about the delete operation.
                      example: <PLACEHOLDER_META_OBJECT>
              description: PLACEHOLDER
            - properties:
                responseStatus:
                  type: integer
                  description: 'Http status code of the response. '
                  example: 404
                errors:
                  type: array
                  items:
                    title: Error
                    type: object
                    properties:
                      code:
                        type: string
                        description: Specific internal error string.
                        example: <PLACEHOLDER_ERROR_CODE>
                      title:
                        type: string
                        description: Human readable summary of the problem.
                        example: <PLACEHOLDER_TITLE>
                      detail:
                        type: string
                        description: human-readable explanation specific to this occurrence
                          of the problem.
                        example: <PLACEHOLDER_DETAIL>
                      meta:
                        type: object
                        description: Meta object containing non-standard meta-information
                          about the error.
                        example: <PLACEHOLDER_META_OBJECT>
    ResourceResponse:
      title: Resource response object
      type: object
      properties:
        id:
          type: integer
          description: 'ID of the resource. '
          format: int32
          example: 1
        type:
          type: string
          description: 'Type is resource. '
          example: resource
        attributes:
          $ref: '#/components/schemas/ResourceResponse_attributes'
        relationships:
          $ref: '#/components/schemas/ResourceResponse_relationships'
      description: Response object for resources.
      example:
        relationships:
          notification:
            id: 2
            type: notification
          parentResource:
            id: 2
            type: resource
          ownerUser:
            id: 0
            type: type
          directFile:
            id: 2
            type: directFile
          share:
            id: 2345
            type: share
          ownerAccount:
            id: 6
            type: type
        attributes:
          updatedTime: updatedTime
          extension: .zip
          accessedAt: '{}'
          type: file
          fileCount: 0
          previewable: true
          accessedTime: accessedTime
          createdAt: '{}'
          path: /examplefolder
          uploadDate: '{}'
          size: 0
          createdBy: exampleuser
          name: examplefolder
          createdTime: createdTime
          hash: ec4aa9a91be282666a165899a14f29b1
          updatedAt: '{}'
        id: 1
        type: resource
    Resource:
      title: Resource
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        type:
          type: string
          example: resource
        attributes:
          $ref: '#/components/schemas/ResourceCollectionExtendedResponse_attributes'
        relationships:
          $ref: '#/components/schemas/ResourceCollectionExtendedResponse_relationships'
      description: All properties of the resource.
      discriminator:
        propertyName: type
    DownloadPolling:
      title: DownloadPolling
      type: object
      properties:
        zip:
          type: string
          description: Name of the zip file.
          example: /zipname.zip
        percent:
          type: integer
          description: Indicates archiving process completeness.
          format: int32
          example: 70
      description: Object contains infromation about ongoing arhivation of files for
        download.
    DownloadPollingResponse:
      title: Download with polling response object
      type: object
      properties:
        responseStatus:
          type: integer
          description: 'Http status code of the response. '
          example: 202
        data:
          $ref: '#/components/schemas/DownloadPolling_1'
    PreviewFileResponse:
      title: PreivewFile response object
      type: object
      properties:
        data:
          $ref: '#/components/schemas/PreviewFile_1'
      description: PLACEHOLDER
    PreviewFile:
      title: PreviewFile
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        type:
          type: string
          example: preview
        attributes:
          $ref: '#/components/schemas/PreviewFile_1_attributes'
      description: Object with preview image properties.
    CallbackSettings:
      title: CallbackSettings
      type: object
      properties:
        accountId:
          type: string
          description: ID of the account these settings belongs to.
          example: "13058"
        endpointUrl:
          type: string
          description: Where callback settings object sent to.
          example: http://test-endpoint.exavault.com
        token:
          type: string
          description: Verification token for the request authentication.
          example: 380814daa6886641d2ffsw2f43b30312
        triggers:
          $ref: '#/components/schemas/CallbackSettings_triggers'
    BrandingSettings:
      title: BrandingSettings
      type: object
      properties:
        companyName:
          type: string
          description: PLACEHOLDER
        customEmail:
          type: string
          description: PLACEHOLDER
          format: email
          example: custom@example.com
        logo:
          type: string
          description: PLACEHOLDER
          example: examplelogo.png
        logoExt:
          type: string
          description: PLACEHOLDER
          example: png
        theme:
          type: string
          description: PLACEHOLDER
          example: default
    DirectFile:
      title: DirectFile
      type: object
      properties:
        id:
          type: integer
          description: ID of the direct file.
          format: int32
          example: 655621
        type:
          type: string
          example: direct-file
          enum:
          - direct-file
        attributes:
          $ref: '#/components/schemas/DirectFile_attributes'
        relationships:
          $ref: '#/components/schemas/DirectFile_relationships'
    DirectFileCollectionResponse:
      type: object
      properties:
        responseStatus:
          type: integer
          example: 200
        totalResults:
          type: integer
          example: 2
        returnedResults:
          type: integer
          example: 2
        data:
          type: array
          items:
            $ref: '#/components/schemas/DirectFile_1'
    DirectFileCollectionExtendedResponse:
      title: Direct file collection with relationships
      allOf:
      - type: object
        properties:
          responseStatus:
            type: integer
            example: 200
          totalResults:
            type: integer
            example: 2
          returnedResults:
            type: integer
            example: 2
          data:
            type: array
            items:
              $ref: '#/components/schemas/DirectFile_1'
      - type: object
        properties:
          included:
            type: array
            items:
              anyOf:
              - title: User
                type: object
                properties:
                  id:
                    type: integer
                    description: ID of the user.
                    format: int32
                    example: 655621
                  type:
                    type: string
                    example: user
                  attributes:
                    type: object
                    properties:
                      status:
                        type: integer
                        description: Indicates user activity status. `0` means the
                          user is locked and cannot log in. `1` means the user is
                          active and can log in.
                        format: int32
                        example: 1
                        enum:
                        - 0
                        - 1
                      expiration:
                        type: string
                        description: Timestamp of user expiration.
                        format: ISO 8601
                      created:
                        type: string
                        description: Timestamp of user creation.
                        format: ISO 8601
                        example: '{}'
                      modified:
                        type: string
                        description: Timestamp of user modification.
                        format: ISO 8601
                        example: '{}'
                      accessTimestamp:
                        type: string
                        description: Timestamp of most recent successful user login.
                        format: ISO 8601
                        example: '{}'
                      accountId:
                        type: integer
                        description: Internal ID of the account this user belongs
                          to.
                        format: int32
                        example: 13758
                      accountName:
                        type: string
                        description: Name of the account this user belongs to.
                        example: exampleuser
                      username:
                        type: string
                        description: Username of the user.
                        example: exampleuser
                      nickname:
                        type: string
                        description: Nickname of the user.
                        example: exampleuser
                      email:
                        type: string
                        description: Email address of the user.
                        example: example@exavault.mail
                      homeDir:
                        type: string
                        description: Path to the user's home folder.
                        example: /
                      permissions:
                        type: object
                        properties:
                          download:
                            type: boolean
                            description: Download permission flag.
                            example: true
                          upload:
                            type: boolean
                            description: Upload permission flag.
                            example: true
                          modify:
                            type: boolean
                            description: Modify permission flag.
                            example: true
                          delete:
                            type: boolean
                            description: Delete permission flag.
                            example: true
                          list:
                            type: boolean
                            description: View files permission flag.
                            example: true
                          changePassword:
                            type: boolean
                            description: Change permission flag.
                            example: true
                          share:
                            type: boolean
                            description: Share folders permission flag.
                            example: true
                          notification:
                            type: boolean
                            description: Create notifications permission flag.
                            example: true
                          viewFormData:
                            type: boolean
                            description: Access Form Data permission flag. If `true`,
                              user can view submissions that have been stored for
                              a receive folder. This includes any data submitted in
                              the receive folder form.
                            example: true
                          deleteFormData:
                            description: Delete form data permission flag. If `true`,
                              user can remove data that was submitted for a receive
                              folder. This applies only to data submitted in the receive
                              folder form, not the actual files uploaded.
                      role:
                        type: string
                        description: User's role.
                        example: user
                        enum:
                        - user
                        - admin
                        - master
                      timeZone:
                        type: string
                        description: User's timezone. See <a href='https://php.net/manual/en/timezones.php'
                          target='blank'>this page</a> for allowed values.
                        example: America/Chicago
                      onboarding:
                        type: boolean
                        description: Whether the onboarding help system is enabled
                          for this user. `true` means that additional help popups
                          are displayed in the web application for this user.
                        example: false
                      firstLogin:
                        type: boolean
                        description: Whether this is the first time the user has logged
                          into the system.
                        example: false
                  relationships:
                    type: object
                    properties:
                      homeDir:
                        type: object
                        properties:
                          type:
                            type: string
                            example: resource
                          id:
                            type: integer
                            format: int32
                            example: 2345
                      account:
                        type: object
                        properties:
                          type:
                            type: string
                            example: account
                          id:
                            type: integer
                            format: int32
                            example: 2
                description: Object contains user properties.
              - title: Resource
                type: object
                properties:
                  id:
                    type: integer
                    format: int32
                    example: 1
                  type:
                    type: string
                    example: resource
                  attributes:
                    type: object
                    properties:
                      hash:
                        type: string
                        description: Unique hash of the resource.
                        example: ec4aa9a91be282666a165899a14f29b1
                      name:
                        type: string
                        description: Resource name, e.g. the name of the file or folder.
                        example: examplefolder
                      extension:
                        type: string
                        description: Resource extension. Property exists only if resource
                          `type` is file.
                        example: .zip
                      type:
                        type: string
                        description: Type of the resource.
                        enum:
                        - file
                        - folder
                        - dir
                      createdBy:
                        type: string
                        description: Username of the creator.
                        example: exampleuser
                      uploadDate:
                        type: string
                        description: Timestamp of resource upload.
                        format: ISO 8601
                        example: '{}'
                      createdAt:
                        type: string
                        description: Timestamp of resource creation.
                        format: ISO 8601
                        example: '{}'
                      updatedAt:
                        type: string
                        description: Timestamp of resource modification.
                        format: ISO 8601
                        example: '{}'
                      accessedAt:
                        type: string
                        description: Timestamp of the time when resource was accessed.
                        format: ISO 8601
                        example: '{}'
                      parent:
                        type: string
                        description: Parent path of the resource.
                        example: /
                      path:
                        type: string
                        description: Full path to the resource.
                        example: /examplefolder
                      fileCount:
                        type: integer
                        description: Count of files in resource. Property exists only
                          if resource `type` is folder.
                        format: int32
                        example: 0
                      size:
                        type: integer
                        description: Resource size.
                        format: int64
                        example: 0
                      previewable:
                        type: boolean
                        description: Can resource be previewed. Property equals `null`
                          if resource `type` is folder.
                        example: true
                        enum:
                        - true
                        - false
                        - null
                  relationships:
                    type: object
                    properties:
                      share:
                        type: object
                        properties:
                          id:
                            type: integer
                            format: int32
                            example: 2345
                          type:
                            type: string
                            example: share
                      notification:
                        type: object
                        properties:
                          id:
                            type: integer
                            format: int32
                            example: 2
                          type:
                            type: string
                            example: notification
                      directFile:
                        type: object
                        properties:
                          id:
                            type: integer
                            format: int32
                            example: 2
                          type:
                            type: string
                            example: directFile
                      parentNode:
                        type: object
                        properties:
                          id:
                            type: integer
                            format: int32
                            example: 2
                          type:
                            type: string
                            example: resource
                description: All properties of the resource.
                discriminator:
                  propertyName: type
    DirectFileResponse:
      title: Regular direct file response
      type: object
      properties:
        data:
          $ref: '#/components/schemas/DirectFile_2'
      description: Response object for direct files.
    DirectFileExtendedResponse:
      title: Direct file response with relationships
      type: object
      properties:
        data:
          $ref: '#/components/schemas/DirectFile_3'
        included:
          type: array
          items:
            type: object
            anyOf:
            - title: User
              properties:
                id:
                  type: integer
                  description: ID of the user.
                  format: int32
                  example: 655621
                type:
                  type: string
                  description: 'Type is user. '
                  example: user
                attributes:
                  type: object
                  properties:
                    status:
                      type: integer
                      description: Indicates user activity status. `0` means the user
                        is locked and cannot log in. `1` means the user is active
                        and can log in.
                      format: int32
                      example: 1
                      enum:
                      - 0
                      - 1
                    expiration:
                      type: string
                      description: Timestamp of user expiration.
                      format: ISO 8601
                    created:
                      type: string
                      description: Timestamp of user creation.
                      format: ISO 8601
                      example: '{}'
                    modified:
                      type: string
                      description: Timestamp of user modification.
                      format: ISO 8601
                      example: '{}'
                    accessTimestamp:
                      type: string
                      description: Timestamp of most recent successful user login.
                      format: ISO 8601
                      example: '{}'
                    accountName:
                      type: string
                      description: Name of the account this user belongs to.
                      example: exampleuser
                    username:
                      type: string
                      description: Username of the user.
                      example: exampleuser
                    nickname:
                      type: string
                      description: Nickname of the user.
                      example: exampleuser
                    email:
                      type: string
                      description: Email address of the user.
                      example: example@exavault.mail
                    homeDir:
                      type: string
                      description: Path to the user's home folder.
                      example: /
                    permissions:
                      type: object
                      properties:
                        download:
                          type: boolean
                          description: Download permission flag.
                          example: true
                        upload:
                          type: boolean
                          description: Upload permission flag.
                          example: true
                        modify:
                          type: boolean
                          description: Modify permission flag.
                          example: true
                        delete:
                          type: boolean
                          description: Delete permission flag.
                          example: true
                        list:
                          type: boolean
                          description: View files permission flag.
                          example: true
                        changePassword:
                          type: boolean
                          description: Change permission flag.
                          example: true
                        share:
                          type: boolean
                          description: Share folders permission flag.
                          example: true
                        notification:
                          type: boolean
                          description: Create notifications permission flag.
                          example: true
                        viewFormData:
                          type: boolean
                          description: Access Form Data permission flag. If `true`,
                            user can view submissions that have been stored for a
                            receive folder. This includes any data submitted in the
                            receive folder form.
                          example: true
                        deleteFormData:
                          description: Delete form data permission flag. If `true`,
                            user can remove data that was submitted for a receive
                            folder. This applies only to data submitted in the receive
                            folder form, not the actual files uploaded.
                    role:
                      type: string
                      description: User's role.
                      example: user
                      enum:
                      - user
                      - admin
                      - master
                    timeZone:
                      type: string
                      description: User's timezone. See <a href='https://php.net/manual/en/timezones.php'
                        target='blank'>this page</a> for allowed values.
                      example: America/Chicago
                    onboarding:
                      type: boolean
                      description: Whether the onboarding help system is enabled for
                        this user. `true` means that additional help popups are displayed
                        in the web application for this user.
                      example: false
                    firstLogin:
                      type: boolean
                      description: '`true` if the user has logged into the system.'
                      example: false
                relationships:
                  type: object
                  properties:
                    homeResource:
                      type: object
                      properties:
                        type:
                          type: string
                          description: 'Type is resource. '
                          example: resource
                        id:
                          type: integer
                          description: 'ID of the resource. '
                          format: int32
                          example: 2345
                    ownerAccount:
                      type: object
                      properties:
                        type:
                          type: string
                          description: 'Type is account. '
                          example: account
                        id:
                          type: integer
                          description: 'ID of the owner account. '
                          format: int32
                          example: 2
              description: Object contains user properties.
            - title: Resource
              properties:
                id:
                  type: integer
                  description: ID of the resouce.
                  format: int32
                  example: 1
                type:
                  type: string
                  description: 'Type is resource. '
                  example: resource
                attributes:
                  type: object
                  properties:
                    hash:
                      type: string
                      description: Unique hash of the resource.
                      example: ec4aa9a91be282666a165899a14f29b1
                    name:
                      type: string
                      description: Resource name, e.g. the name of the file or folder.
                      example: examplefolder
                    extension:
                      type: string
                      description: Resource extension. Property exists only if resource
                        `type` is file.
                      example: .zip
                    type:
                      type: string
                      description: Type of the resource.
                      enum:
                      - file
                      - folder
                      - dir
                    createdBy:
                      type: string
                      description: Username of the creator.
                      example: exampleuser
                    uploadDate:
                      type: string
                      description: Timestamp of resource upload.
                      format: ISO 8601
                      example: '{}'
                    createdAt:
                      type: string
                      description: Timestamp of resource creation.
                      format: ISO 8601
                      example: '{}'
                    updatedAt:
                      type: string
                      description: Timestamp of resource modification.
                      format: ISO 8601
                      example: '{}'
                    accessedAt:
                      type: string
                      description: Timestamp of the time when resource was accessed.
                      format: ISO 8601
                      example: '{}'
                    path:
                      type: string
                      description: Full path to the resource.
                      example: /examplefolder
                    fileCount:
                      type: integer
                      description: Count of files in resource. Property exists only
                        if resource `type` is folder.
                      format: int32
                      example: 0
                    size:
                      type: integer
                      description: Resource size in bytes.
                      format: int64
                      example: 0
                    previewable:
                      type: boolean
                      description: Can resource be previewed. Property equals `null`
                        if resource `type` is folder.
                      example: true
                      enum:
                      - true
                      - false
                      - null
                    createdTime:
                      type: string
                    updatedTIme:
                      type: string
                    accessedTime:
                      type: string
                relationships:
                  type: object
                  properties:
                    share:
                      type: object
                      properties:
                        id:
                          type: integer
                          description: 'ID of the share. '
                          format: int32
                          example: 2345
                        type:
                          type: string
                          description: 'Type is share. '
                          example: share
                    notification:
                      type: object
                      properties:
                        id:
                          type: integer
                          description: 'ID of the notification. '
                          format: int32
                          example: 2
                        type:
                          type: string
                          description: 'Type is notification. '
                          example: notification
                    directFile:
                      type: object
                      properties:
                        id:
                          type: integer
                          description: 'ID of the direct file. '
                          format: int32
                          example: 2
                        type:
                          type: string
                          description: 'Type is directFile. '
                          example: directFile
                    parentResource:
                      type: object
                      properties:
                        id:
                          type: integer
                          description: 'ID of the resource. '
                          format: int32
                          example: 2
                        type:
                          type: string
                          description: 'Type is resource. '
                          example: resource
              description: All properties of the resource.
              discriminator:
                propertyName: type
      description: Response object for direct files with metadata for included relationships.
    ShareRecipient:
      title: ShareRecipient
      type: object
      properties:
        id:
          type: integer
          description: ID of the recipient.
          format: int32
          example: 2
        shareId:
          type: string
          description: ID of the share that the recipoient belongs to.
          example: "23"
        type:
          type: string
          description: Type of the recipient.
          example: owner
          enum:
          - owner
          - direct
        hash:
          type: string
          description: Share hash.
          example: fseowxan
        email:
          type: string
          description: Recipient email address.
          example: recipient@gmail.com
        sent:
          type: boolean
          description: Set to true if invite email was sent; false otherwise.
          example: true
          enum:
          - true
          - false
        received:
          type: boolean
          description: Set to true if recipient has accessed the share. Note this
            is set to true when the recipient clicks the link to access the share;
            not when they download a file.
          example: false
          enum:
          - true
          - false
        created:
          type: string
          description: Timestamp of adding recipient to the share.
          format: ISO 8601
          example: '{}'
    Message:
      title: Message
      type: object
      properties:
        id:
          type: integer
          description: Message id.
          format: int32
          example: 397584
        type:
          type: string
          description: Resource type
          example: message
          enum:
          - message
        attributes:
          $ref: '#/components/schemas/Message_attributes'
    Share:
      title: Share
      type: object
      properties:
        id:
          type: integer
          description: ID of the share.
          format: int32
          example: 655621
        type:
          type: string
          example: share
          enum:
          - share
        attributes:
          $ref: '#/components/schemas/Share_attributes'
        relationships:
          $ref: '#/components/schemas/Share_relationships'
      description: Object contains share properties.
    ShareExtendedResponse:
      title: Share response with relationships
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Share_1'
        included:
          type: array
          items:
            type: object
            anyOf:
            - title: User
              properties:
                id:
                  type: integer
                  description: ID of the user.
                  format: int32
                  example: 655621
                type:
                  type: string
                  example: user
                attributes:
                  type: object
                  properties:
                    status:
                      type: integer
                      description: Indicates user activity status. `0` means the user
                        is locked and cannot log in. `1` means the user is active
                        and can log in.
                      format: int32
                      example: 1
                      enum:
                      - 0
                      - 1
                    expiration:
                      type: string
                      description: Timestamp of user expiration.
                      format: ISO 8601
                    created:
                      type: string
                      description: Timestamp of user creation.
                      format: ISO 8601
                      example: '{}'
                    modified:
                      type: string
                      description: Timestamp of user modification.
                      format: ISO 8601
                      example: '{}'
                    accessTimestamp:
                      type: string
                      description: Timestamp of most recent successful user login.
                      format: ISO 8601
                      example: '{}'
                    accountName:
                      type: string
                      description: Name of the account this user belongs to.
                      example: exampleuser
                    username:
                      type: string
                      description: Username of the user.
                      example: exampleuser
                    nickname:
                      type: string
                      description: Nickname of the user.
                      example: exampleuser
                    email:
                      type: string
                      description: Email address of the user.
                      example: example@exavault.mail
                    homeDir:
                      type: string
                      description: Path to the user's home folder.
                      example: /
                    permissions:
                      type: object
                      properties:
                        download:
                          type: boolean
                          description: Download permission flag.
                          example: true
                        upload:
                          type: boolean
                          description: Upload permission flag.
                          example: true
                        modify:
                          type: boolean
                          description: Modify permission flag.
                          example: true
                        delete:
                          type: boolean
                          description: Delete permission flag.
                          example: true
                        list:
                          type: boolean
                          description: View files permission flag.
                          example: true
                        changePassword:
                          type: boolean
                          description: Change permission flag.
                          example: true
                        share:
                          type: boolean
                          description: Share folders permission flag.
                          example: true
                        notification:
                          type: boolean
                          description: Create notifications permission flag.
                          example: true
                        viewFormData:
                          type: boolean
                          description: Access Form Data permission flag. If `true`,
                            user can view submissions that have been stored for a
                            receive folder. This includes any data submitted in the
                            receive folder form.
                          example: true
                        deleteFormData:
                          description: Delete form data permission flag. If `true`,
                            user can remove data that was submitted for a receive
                            folder. This applies only to data submitted in the receive
                            folder form, not the actual files uploaded.
                    role:
                      type: string
                      description: User's role.
                      example: user
                      enum:
                      - user
                      - admin
                      - master
                    timeZone:
                      type: string
                      description: User's timezone. See <a href='https://php.net/manual/en/timezones.php'
                        target='blank'>this page</a> for allowed values.
                      example: America/Chicago
                    onboarding:
                      type: boolean
                      description: Whether the onboarding help system is enabled for
                        this user. `true` means that additional help popups are displayed
                        in the web application for this user.
                      example: false
                    firstLogin:
                      description: true if the user has logged into the system.
                      example: false
                relationships:
                  type: object
                  properties:
                    homeResource:
                      type: object
                      properties:
                        type:
                          type: string
                          description: Type is resource.
                          example: resource
                        id:
                          type: integer
                          description: ID of the resource.
                          format: int32
                          example: 2345
                    ownerAccount:
                      type: object
                      properties:
                        type:
                          type: string
                          description: Type is account.
                          example: account
                        id:
                          type: integer
                          description: ID of the account.
                          format: int32
                          example: 2
              description: Object contains user properties.
            - title: Notification
              properties:
                id:
                  type: integer
                  description: ID of the notification.
                  format: int32
                  example: 1
                type:
                  type: string
                  description: Type is notification.
                  example: notification
                attributes:
                  type: object
                  properties:
                    userId:
                      type: string
                      description: ID of the user that the notification belongs to.
                      example: "2"
                    type:
                      type: string
                      description: 'Type of the resoucre the notification is attached
                        to. '
                      example: folder
                      enum:
                      - file
                      - folder
                      - shared_folder
                      - send_receipt
                      - share_receipt
                      - file_drop
                    path:
                      type: string
                      description: Path to the item that the notification is set on.
                      example: /examplefolder
                    name:
                      type: string
                      description: Name of the item that the notification is set on.
                      example: examplefolder
                    action:
                      type: string
                      description: Action that triggers notification.
                      example: all
                      enum:
                      - upload
                      - download
                      - delete
                      - all
                    usernames:
                      type: array
                      description: Detail on which users can trigger the notification.
                      example:
                      - notice_user_all
                      items:
                        type: string
                    recipients:
                      type: array
                      description: Metadata of the notification recipients.
                      items:
                        title: NotificartionRecipient
                        type: object
                        properties:
                          id:
                            type: integer
                            description: ID of the recipient.
                            format: int32
                            example: 2
                          notificationId:
                            type: string
                            description: ID of the notification that the recipient
                              belongs to.
                            example: "23"
                          email:
                            type: string
                            description: Recipient email.
                            example: exampleuser@exavault.com
                          created:
                            type: string
                            description: Timestamp of adding notification recipient.
                            format: ISO 8601
                            example: '{}'
                          modified:
                            type: string
                            description: Timestamp of notification recipient modification.
                            format: ISO 8601
                            example: '{}'
                    recipientEmails:
                      type: array
                      description: Email addresses of all recipients.
                      example:
                      - recipient@gmail.com
                      items:
                        type: string
                        format: email
                    sendEmail:
                      type: string
                      description: Send email when the notification is triggered.
                      example: "1"
                      enum:
                      - "0"
                      - "1"
                    readableDescription:
                      type: string
                      description: Human readable description of the notification.
                      example: anybody changes, downloads or deletes '/examplefile.jpg'
                    readableDescriptionWithoutPath:
                      type: string
                      description: Human readable description of the notification
                        without item path.
                      example: anybody changes or downloads this file
                    shareId:
                      type: string
                      description: ID of the share that the notification belongs to.
                    message:
                      type: string
                      description: Custom message that will be sent to the notification
                        recipients.
                    created:
                      type: string
                      description: Timestamp of notifiction creation.
                      format: ISO 8601
                      example: '{}'
                    modified:
                      type: string
                      description: Timestamp of notification modification.
                      format: ISO 8601
                      example: '{}'
                relationships:
                  type: object
                  properties:
                    resource:
                      type: object
                      properties:
                        type:
                          type: string
                          description: Type is resource.
                          example: share
                        id:
                          type: integer
                          description: ID of the resource that the notification belongs
                            to.
                          format: int32
                          example: 2
                    ownerUser:
                      type: object
                      properties:
                        type:
                          type: string
                          description: Type is user.
                          example: user
                          enum:
                          - user
                        id:
                          type: integer
                          description: ID of the owner user.
                          example: 12345
              description: Object containing notification properties.
            - title: Resource
              properties:
                id:
                  type: integer
                  description: ID of the resource.
                  format: int32
                  example: 1
                type:
                  type: string
                  description: Type is resource.
                  example: resource
                attributes:
                  type: object
                  properties:
                    hash:
                      type: string
                      description: Unique hash of the resource.
                      example: ec4aa9a91be282666a165899a14f29b1
                    name:
                      type: string
                      description: Resource name, e.g. the name of the file or folder.
                      example: examplefolder
                    extension:
                      type: string
                      description: Resource extension. Property exists only if resource
                        `type` is file.
                      example: .zip
                    type:
                      type: string
                      description: Type of the resource.
                      enum:
                      - file
                      - folder
                      - dir
                    createdBy:
                      type: string
                      description: Username of the creator.
                      example: exampleuser
                    uploadDate:
                      type: string
                      description: Timestamp of resource upload.
                      format: ISO 8601
                      example: '{}'
                    createdAt:
                      type: string
                      description: Timestamp of resource creation.
                      format: ISO 8601
                      example: '{}'
                    updatedAt:
                      type: string
                      description: Timestamp of resource modification.
                      format: ISO 8601
                      example: '{}'
                    accessedAt:
                      type: string
                      description: Timestamp of the time when resource was accessed.
                      format: ISO 8601
                      example: '{}'
                    path:
                      type: string
                      description: Full path to the resource.
                      example: /examplefolder
                    fileCount:
                      type: integer
                      description: Count of files in resource. Property exists only
                        if resource `type` is folder.
                      format: int32
                      example: 0
                    size:
                      type: integer
                      description: Resource size in bytes.
                      format: int64
                      example: 0
                    previewable:
                      type: boolean
                      description: Can resource be previewed. Property equals `null`
                        if resource `type` is folder.
                      example: true
                      enum:
                      - true
                      - false
                      - null
                    createdTime:
                      type: string
                    updatedTime:
                      type: string
                    accessedTime:
                      type: string
                relationships:
                  type: object
                  properties:
                    share:
                      type: object
                      properties:
                        id:
                          type: integer
                          description: ID of the share.
                          format: int32
                          example: 2345
                        type:
                          type: string
                          description: Type is share.
                          example: share
                    notification:
                      type: object
                      properties:
                        id:
                          type: integer
                          description: ID of the notification.
                          format: int32
                          example: 2
                        type:
                          type: string
                          description: 'Type is notification. '
                          example: notification
                    directFile:
                      type: object
                      properties:
                        id:
                          type: integer
                          description: ID of the direct file.
                          format: int32
                          example: 2
                        type:
                          type: string
                          description: Type is directFile.
                          example: directFile
                    parentResource:
                      type: object
                      properties:
                        id:
                          type: integer
                          description: ID of the resource.
                          format: int32
                          example: 2
                        type:
                          type: string
                          description: Type is resource.
                          example: resource
              description: All properties of the resource.
              discriminator:
                propertyName: type
            - title: Message
              properties:
                id:
                  type: integer
                  description: ID of the message.
                  format: int32
                  example: 397584
                type:
                  type: string
                  description: Type is message.
                  example: message
                  enum:
                  - message
                attributes:
                  type: object
                  properties:
                    subject:
                      type: string
                      description: Message subject.
                      example: Files available for download
                    body:
                      type: string
                      description: Message text.
                      example: You have files available for download.
                    created:
                      type: string
                      description: Timestamp of message creation.
                      format: ISO 8601
                      example: '{}'
                    modified:
                      type: string
                      description: Timestamp of message modification.
                      format: ISO 8601
                      example: '{}'
      description: Response object for shares with metadata for included relationships.
    ShareResponse:
      title: Regular share response
      type: object
      properties:
        id:
          type: integer
          description: ID of the share.
          format: int32
          example: 655621
        type:
          type: string
          description: 'Type of the share. '
          example: share
          enum:
          - share
        attributes:
          $ref: '#/components/schemas/Share_1_attributes'
        relationships:
          $ref: '#/components/schemas/ShareResponse_relationships'
      description: Response object for shares.
      example:
        relationships:
          owner:
            id: 12345
            type: type
          messages:
          - id: 21
            type: message
          - id: 21
            type: message
          resources:
            id: 12345
            type: resource
          notifications:
          - id: 9
            type: notification
          - id: 9
            type: notification
        attributes:
          formId: 0
          ownerHash: hd1e-3erufo72-fsxak999
          resent: resent
          created: 2017-05-03 5:49:34 pm
          hasPassword: false
          hasNotification: false
          accessMode: upload
          type: shared_folder
          accessDescription: Download only
          fileDropCreateFolders: false
          expired: false
          public: true
          requireEmail: true
          paths:
          - /Example Folder
          recipients:
          - id: 2
            shareId: 23
            type: direct
            hash: fseowxan
            email: recipient@gmail.com
            sent: true
            received: false
            created: {}
          inherited: true
          name: Example Folder
          messages:
          - attributes:
              subject: Files available for download
              created: '{}'
              modified: '{}'
              body: You have files available for download.
            id: 397584
            type: message
          - attributes:
              subject: Files available for download
              created: '{}'
              modified: '{}'
              body: You have files available for download.
            id: 397584
            type: message
          modified: modified
          expiration: expiration
          embed: false
          trackingStatus: complete
          hash: hd1e-3erufo72
          status: 1
        id: 655621
        type: share
    ShareCollectionResponse:
      type: object
      properties:
        responseStatus:
          type: integer
          description: Http status code of the response.
          example: 200
        totalResults:
          type: integer
          description: 'Total results found. '
          example: 2
        returnedResults:
          type: integer
          description: Number of returned results.
          example: 2
        data:
          type: array
          items:
            $ref: '#/components/schemas/Share_2'
    ShareCollectionExtendedResponse:
      type: object
      allOf:
      - properties:
          responseStatus:
            type: integer
            description: 'Http status code of the response. '
            example: 200
          totalResults:
            type: integer
            description: 'Total results found. '
            example: 2
          returnedResults:
            type: integer
            description: 'Number of results returned. '
            example: 2
          data:
            type: array
            items:
              $ref: '#/components/schemas/Share_3'
      - properties:
          included:
            type: array
            items:
              type: object
              anyOf:
              - title: User
                properties:
                  id:
                    type: integer
                    description: ID of the user.
                    format: int32
                    example: 655621
                  type:
                    type: string
                    description: 'Type is user. '
                    example: user
                  attributes:
                    type: object
                    properties:
                      status:
                        type: integer
                        description: Indicates user activity status. `0` means the
                          user is locked and cannot log in. `1` means the user is
                          active and can log in.
                        format: int32
                        example: 1
                        enum:
                        - 0
                        - 1
                      expiration:
                        type: string
                        description: Timestamp of user expiration.
                        format: ISO 8601
                      created:
                        type: string
                        description: Timestamp of user creation.
                        format: ISO 8601
                        example: '{}'
                      modified:
                        type: string
                        description: Timestamp of user modification.
                        format: ISO 8601
                        example: '{}'
                      accessTimestamp:
                        type: string
                        description: Timestamp of most recent successful user login.
                        format: ISO 8601
                        example: '{}'
                      accountName:
                        type: string
                        description: Name of the account this user belongs to.
                        example: exampleuser
                      username:
                        type: string
                        description: Username of the user.
                        example: exampleuser
                      nickname:
                        type: string
                        description: Nickname of the user.
                        example: exampleuser
                      email:
                        type: string
                        description: Email address of the user.
                        example: example@exavault.mail
                      homeDir:
                        type: string
                        description: Path to the user's home folder.
                        example: /
                      permissions:
                        type: object
                        properties:
                          download:
                            type: boolean
                            description: Download permission flag.
                            example: true
                          upload:
                            type: boolean
                            description: Upload permission flag.
                            example: true
                          modify:
                            type: boolean
                            description: Modify permission flag.
                            example: true
                          delete:
                            type: boolean
                            description: Delete permission flag.
                            example: true
                          list:
                            type: boolean
                            description: View files permission flag.
                            example: true
                          changePassword:
                            type: boolean
                            description: Change permission flag.
                            example: true
                          share:
                            type: boolean
                            description: Share folders permission flag.
                            example: true
                          notification:
                            type: boolean
                            description: Create notifications permission flag.
                            example: true
                          viewFormData:
                            type: boolean
                            description: Access Form Data permission flag. If `true`,
                              user can view submissions that have been stored for
                              a receive folder. This includes any data submitted in
                              the receive folder form.
                            example: true
                          deleteFormData:
                            description: Delete form data permission flag. If `true`,
                              user can remove data that was submitted for a receive
                              folder. This applies only to data submitted in the receive
                              folder form, not the actual files uploaded.
                      role:
                        type: string
                        description: User's role.
                        example: user
                        enum:
                        - user
                        - admin
                        - master
                      timeZone:
                        type: string
                        description: User's timezone. See <a href='https://php.net/manual/en/timezones.php'
                          target='blank'>this page</a> for allowed values.
                        example: America/Chicago
                      onboarding:
                        type: boolean
                        description: Whether the onboarding help system is enabled
                          for this user. `true` means that additional help popups
                          are displayed in the web application for this user.
                        example: false
                      firstLogin:
                        description: '`true` if the user has logged into the system.'
                        example: false
                  relationships:
                    type: object
                    properties:
                      homeResource:
                        type: object
                        properties:
                          type:
                            type: string
                            description: 'Type is resource. '
                            example: resource
                          id:
                            type: integer
                            description: 'ID of the resource. '
                            format: int32
                            example: 2345
                      ownerAccount:
                        type: object
                        properties:
                          type:
                            type: string
                            description: 'Type is account. '
                            example: account
                          id:
                            type: integer
                            description: ID of the account.
                            format: int32
                            example: 2
                description: Object contains user properties.
              - title: Notification
                properties:
                  id:
                    type: integer
                    description: 'ID of the notification. '
                    format: int32
                    example: 1
                  type:
                    type: string
                    description: 'Type is notification. '
                    example: notification
                  attributes:
                    type: object
                    properties:
                      userId:
                        type: string
                        description: ID of the user that the notification belongs
                          to.
                        example: "2"
                      type:
                        type: string
                        description: Notification type.
                        example: folder
                        enum:
                        - file
                        - folder
                        - shared_folder
                        - send_receipt
                        - share_receipt
                        - file_drop
                      path:
                        type: string
                        description: Path to the item that the notification is set
                          on.
                        example: /examplefolder
                      name:
                        type: string
                        description: Name of the item that the notification is set
                          on.
                        example: examplefolder
                      action:
                        type: string
                        description: Action that triggers notification.
                        example: all
                        enum:
                        - upload
                        - download
                        - delete
                        - all
                      usernames:
                        type: array
                        description: Detail on which users can trigger the notification.
                        example:
                        - notice_user_all
                        items:
                          type: string
                      recipients:
                        type: array
                        description: Notification recipients.
                        items:
                          title: NotificartionRecipient
                          type: object
                          properties:
                            id:
                              type: integer
                              description: ID of the recipient.
                              format: int32
                              example: 2
                            notificationId:
                              type: string
                              description: ID of the notification that the recipient
                                belongs to.
                              example: "23"
                            email:
                              type: string
                              description: Recipient email.
                              example: exampleuser@exavault.com
                            created:
                              type: string
                              description: Timestamp of adding notification recipient.
                              format: ISO 8601
                              example: '{}'
                            modified:
                              type: string
                              description: Timestamp of notification recipient modification.
                              format: ISO 8601
                              example: '{}'
                      recipientEmails:
                        type: array
                        description: Email addresses of all recipients.
                        example:
                        - recipient@gmail.com
                        items:
                          type: string
                          format: email
                      sendEmail:
                        type: string
                        description: Send email when the notification is triggered.
                        example: "1"
                        enum:
                        - "0"
                        - "1"
                      readableDescription:
                        type: string
                        description: Human readable description of the notification.
                        example: anybody changes, downloads or deletes '/examplefile.jpg'
                      readableDescriptionWithoutPath:
                        type: string
                        description: Human readable description of the notification
                          without item path.
                        example: anybody changes or downloads this file
                      shareId:
                        type: string
                        description: ID of the share that the notification belogns
                          to.
                      message:
                        type: string
                        description: Custom message that will be sent to the notification
                          recipients.
                      created:
                        type: string
                        description: Timestamp of notifiction creation.
                        format: ISO 8601
                        example: '{}'
                      modified:
                        type: string
                        description: Timestamp of notification modification.
                        format: ISO 8601
                        example: '{}'
                  relationships:
                    type: object
                    properties:
                      resource:
                        type: object
                        properties:
                          type:
                            type: string
                            description: Type is resource.
                            example: resource
                          id:
                            type: integer
                            description: ID of the resource that the notification
                              belongs to.
                            format: int32
                            example: 2345
                      ownerUser:
                        type: object
                        properties:
                          type:
                            type: string
                            description: 'Type is user. '
                            example: user
                            enum:
                            - user
                          id:
                            type: integer
                            description: ID of the owner user.
                            example: 12345
                description: Object containing notification properties.
              - title: Resource
                properties:
                  id:
                    type: integer
                    description: 'ID of the resource. '
                    format: int32
                    example: 1
                  type:
                    type: string
                    description: 'Type is resource. '
                    example: resource
                  attributes:
                    type: object
                    properties:
                      hash:
                        type: string
                        description: Unique hash of the resource.
                        example: ec4aa9a91be282666a165899a14f29b1
                      name:
                        type: string
                        description: Resource name, e.g. the name of the file or folder.
                        example: examplefolder
                      extension:
                        type: string
                        description: Resource extension. Property exists only if resource
                          `type` is file.
                        example: .zip
                      type:
                        type: string
                        description: Type of the resource.
                        enum:
                        - file
                        - folder
                        - dir
                      createdBy:
                        type: string
                        description: Username of the creator.
                        example: exampleuser
                      uploadDate:
                        type: string
                        description: Timestamp of resource upload.
                        format: ISO 8601
                        example: '{}'
                      createdAt:
                        type: string
                        description: Timestamp of resource creation.
                        format: ISO 8601
                        example: '{}'
                      updatedAt:
                        type: string
                        description: Timestamp of resource modification.
                        format: ISO 8601
                        example: '{}'
                      accessedAt:
                        type: string
                        description: Timestamp of the time when resource was accessed.
                        format: ISO 8601
                        example: '{}'
                      path:
                        type: string
                        description: Full path to the resource.
                        example: /examplefolder
                      fileCount:
                        type: integer
                        description: Count of files in resource. Property exists only
                          if resource `type` is folder.
                        format: int32
                        example: 0
                      size:
                        type: integer
                        description: Resource size in bytes.
                        format: int64
                        example: 0
                      previewable:
                        type: boolean
                        description: Can resource be previewed. Property equals `null`
                          if resource `type` is folder.
                        example: true
                        enum:
                        - true
                        - false
                        - null
                      createdTime:
                        type: string
                      updatedTIme:
                        type: string
                      accessedTime:
                        type: string
                  relationships:
                    type: object
                    properties:
                      share:
                        type: object
                        properties:
                          id:
                            type: integer
                            description: ID of the share.
                            format: int32
                            example: 2345
                          type:
                            type: string
                            description: 'Type is share. '
                            example: share
                      notification:
                        type: object
                        properties:
                          id:
                            type: integer
                            description: 'ID of the notification. '
                            format: int32
                            example: 2
                          type:
                            type: string
                            description: 'Type is notification. '
                            example: notification
                      directFile:
                        type: object
                        properties:
                          id:
                            type: integer
                            description: 'ID of the direct file. '
                            format: int32
                            example: 2
                          type:
                            type: string
                            description: Type is directFile.
                            example: directFile
                      parentResource:
                        type: object
                        properties:
                          id:
                            type: integer
                            description: ID of the resource.
                            format: int32
                            example: 2
                          type:
                            type: string
                            description: 'Type is resource. '
                            example: resource
                description: All properties of the resource.
                discriminator:
                  propertyName: type
    ReportResponse:
      title: Report response object
      type: object
      properties:
        responseStatus:
          type: integer
          example: 200
        data:
          title: Report
          type: array
          description: Array contains report lines.
          items:
            type: string
      description: PLACEHOLDER
    Report:
      title: Report
      type: array
      description: Array contains report lines.
      items:
        type: string
    Account:
      title: Account
      type: object
      properties:
        id:
          type: integer
          description: Account ID
          format: int32
          example: 13758
        type:
          type: string
          description: Type of item. "account"
          example: account
          enum:
          - account
        attributes:
          $ref: '#/components/schemas/AccountAttributes'
        relationships:
          $ref: '#/components/schemas/Account_relationships'
      description: Object contains all account properties.
    AccountPublic:
      properties:
        id:
          type: integer
          description: PLACEHOLDER
          format: int32
          example: 12345
        type:
          type: string
          example: account
          enum:
          - account
        attributes:
          $ref: '#/components/schemas/AccountPublic_attributes'
      description: Public account's information available when only ev-api-key provided
    AccountAttributes:
      type: object
      properties:
        accountName:
          type: string
          description: Name of the account
          example: exampleaccount
        username:
          type: string
          description: Name of account's master user
          example: exampleuser
        maxUsers:
          type: integer
          description: Maximum number of users the account can have. This can be increased
            by contacting ExaVault Support.
          format: int32
          example: 1000
        userCount:
          type: integer
          description: Current number of users on the account.
          format: int32
          example: 3
        status:
          type: integer
          description: Account status flag. A one (1) means the account is active;
            zero (0) means it is suspended.
          format: int32
          example: 1
          enum:
          - 1
          - 0
        branding:
          type: boolean
          description: Branding flag. Set to `true` if the account has branding functionality
            enabled.
          example: true
          enum:
          - true
          - false
        customDomain:
          type: boolean
          description: Custom domain flag. Set to `true` if account type allows custom
            domain functionality.
          example: true
          enum:
          - true
          - false
        planCode:
          type: string
          description: (ExaVault Use Only) Code of the plan account is signed up for.
          example: 350gb-r206
        whmcsPlanId:
          type: integer
          description: (ExaVault Use Only) Internal ID of the service in CMS.
          format: int32
          example: 5970
        quota:
          $ref: '#/components/schemas/AccountAttributes_quota'
        secureOnly:
          type: boolean
          description: Flag to indicate whether the account disables connections via
            insecure protocols (e.g. FTP). Set to `true` to disable all traffic over
            port 21.
          example: false
        complexPasswords:
          type: boolean
          description: Flag to indicate whether the account requires complex passwords.
            Set to `true` to require complex passwords on all users and shares.
          example: false
        showReferralLinks:
          type: boolean
          description: Flag to indicate showing of referrals links in the account.
            Set to `true` to include marketing messages in share invitations.
          example: true
        externalDomains:
          type: string
          description: Custom domain used to brand this account.
        allowedIp:
          type: string
          description: Range of IP addresses allowed to access this account.
        callbackSettings:
          type: array
          description: Callback settings (Webhooks) of the account.
          items:
            $ref: '#/components/schemas/CallbackSettings_2'
        brandingSettings:
          $ref: '#/components/schemas/BrandingSettings_2'
        trial:
          $ref: '#/components/schemas/AccountAttributes_trial'
        clientId:
          type: integer
          description: (ExaVault Use Only) Internal ID of the account in CMS.
          format: int32
          example: 1
        welcomeEmailContent:
          type: string
          description: Content of welcome email each new user will receive.
          example: Welcome to your new account!
        welcomeEmailSubject:
          type: string
          description: Subject of welcome email each new user will receive.
          example: ExaVault File Sharing Account
        customSignature:
          type: string
          description: Custom signature for all account emails users or recipients
            will receive.
        accountOnboarding:
          type: boolean
          description: Whether the web application onboarding help is enabled for
            new users in the account.
          example: false
        created:
          type: string
          description: Timestamp of account creation.
          format: ISO 8601
          example: '{}'
        modified:
          type: string
          description: Timestamp of account modification.
          format: ISO 8601
          example: '{}'
    AccountResponse:
      title: Regular account response object
      type: object
      properties:
        responseStatus:
          type: integer
          description: 'Http status code of the response. '
          example: 200
        data:
          $ref: '#/components/schemas/Account_1'
      description: PLACEHOLDER
    AccountExtendedResponse:
      title: Account response with relationships
      description: PLACEHOLDER
      allOf:
      - title: Regular account response object
        type: object
        properties:
          responseStatus:
            type: integer
            example: 200
          data:
            $ref: '#/components/schemas/Account_2'
        description: PLACEHOLDER
      - type: object
        properties:
          included:
            type: array
            items:
              $ref: '#/components/schemas/User_1'
    AccountPublicResponse:
      title: Account details visible to public
      type: object
      properties:
        responseStautus:
          type: integer
          description: 'Http status code of the response. '
          example: 200
        data:
          $ref: '#/components/schemas/AccountPublicResponse_data'
      description: Response object for the account.
      example:
        responseStautus: 200
        data:
          attributes:
            customEmail: ""
            verifiedDomainId: 0
            verifiedDomain: verifiedDomain
            verifiedDomainValid: false
            accountName: exampleaccount
            created: '{}'
            companyName: Development Company
            logo: fee92192b6311b724800b82c7c6c3ff2.png
            modified: '{}'
            theme: default
          id: 12345
          type: account
    ShareRelationship:
      type: object
      properties:
        id:
          type: integer
          description: ID of the share.
          example: 22
        type:
          type: string
          description: 'Type of share. '
          example: share
          enum:
          - share
    Form:
      title: Form
      type: object
      properties:
        type:
          type: string
          description: Resource type
          example: form
          enum:
          - form
        id:
          type: integer
          description: ID of the form.
          format: int32
          example: 823752
        attributes:
          $ref: '#/components/schemas/Form_attributes'
        relationships:
          $ref: '#/components/schemas/Form_relationships'
      description: Object contains form properties.
    FormExtendedResponse:
      title: FormExtendedResponse
      type: object
      description: Response object for forms with metadata for included relationships.
      allOf:
      - title: Regular form response
        properties:
          type:
            type: string
            description: Resource type
            example: form
            enum:
            - form
          id:
            type: integer
            description: ID of the form.
            format: int32
            example: 823752
          attributes:
            $ref: '#/components/schemas/FormExtendedResponse_attributes'
          relationships:
            $ref: '#/components/schemas/Form_relationships'
        description: Object contains properties of selected Form.
      - properties:
          included:
            type: array
            items:
              $ref: '#/components/schemas/Share_4'
    FormResponse:
      title: Regular form response
      type: object
      properties:
        type:
          type: string
          description: 'Type is form. '
          example: form
          enum:
          - form
        id:
          type: integer
          description: ID of the form.
          format: int32
          example: 823752
        attributes:
          $ref: '#/components/schemas/FormResponse_attributes'
        relationships:
          $ref: '#/components/schemas/FormResponse_relationships'
      description: Response object for forms.
      example:
        relationships:
          share:
            data:
              id: 22
              type: share
        attributes:
          elements:
          - id: 234
            name: Project ID
            order: 0
            type: name
            settings:
              width: 1
              isRequired: false
              useAsFolderName: false
          - id: 235
            name: Your Email
            order: 1
            type: email
            setings:
              description: Enter your email from the registration system
              width: 1
              isRequired: true
              senderEmail: true
              useAsFolderName: true
          - id: 236
            name: Upload Area
            order: 2
            type: upload_area
            settings: {}
          formDescription: Upload your photos to us
          submitButtonText: Send Files
          successMessage: Your files were uploaded
          cssStyles: |-
            #ev-widget-form {
              /*Change this to change the font. Remove to use your website font*/
              font-family: Helvetica Neue, sans-serif;
              /*Makes the form the same width as your website */
              margin: 0 -2%;
            }
            #ev-widget-form label{
              width: 100%;
            }
            #ev-widget-form input,
            #ev-widget-form textarea {
              /*Changes color and thickness of borders on form elements */
              border: 2px solid #ccc;
              /*Changes spacing inside the form elements (top/bottom and left/right */
              padding: 5px 5px;
              /* Changes how far away the inputs are from their label */
              margin-top: 2px;
            }

            #ev-widget-form input:focus,
            #ev-widget-form textarea:focus {
              /*Changes the color of the form elements when they are clicked in to */
              border: 2px solid #b2cf88;
              /*Removes glow effect from form elements that are clicked in to */
              outline: none;
            }

            #ev-widget-form label {
              font-size: 14px;
              font-weight: bold;
              /*Changes color of labels */
              color: #232323
            }

            #ev-widget-form .ev-form-element-description {
              /*Changes size of descriptions */
              font-size: 12px;
              /*Changes color of descriptions */
              color: #777;
              /* Changes how far away the descriptions are from their input */
              margin-top: 2px;
            }

            #ev-widget-form textarea {
              /* Makes textareas (multiline inputs) a taller. */
              min-height: 90px;
            }
        id: 823752
        type: form
    FormDataResponse:
      title: Form data response
      type: object
      properties:
        responseStatus:
          type: integer
          description: 'Http status code of the response. '
          example: 200
        totalResults:
          type: integer
          description: 'Total results found. '
          example: 2
        returnedResults:
          type: integer
          description: 'Number of returned results. '
          example: 2
        data:
          type: array
          description: Object submissions data for form.
          example:
          - Name: Smedley
            created: {}
            Details (optional): Please call to discuss 510 555 1212
          - Name: George
            created: {}
            Details (optional): ""
          items:
            $ref: '#/components/schemas/FormFieldData_1'
      example:
        totalResults: 2
        returnedResults: 2
        data:
        - Name: Smedley
          created: {}
          Details (optional): Please call to discuss 510 555 1212
        - Name: George
          created: {}
          Details (optional): ""
        responseStatus: 200
    FormField:
      title: FormField
      type: object
      properties:
        id:
          type: integer
          description: Field id number
          format: int32
          example: 1185
        name:
          type: string
          description: Label of the field
          example: Your Name
        order:
          type: integer
          description: Order that field appears on the form, starting from 0
          format: int32
          example: 0
        type:
          type: string
          description: Field type
          enum:
          - email
          - textarea
          - name
          - text
        settings:
          $ref: '#/components/schemas/FormField_settings'
    FormFieldData:
      title: FormFieldData
      type: object
      properties:
        created:
          type: string
          description: Timestamp of the submission
          format: YYYY-mm-dd hh:mm:ss
          example: '{}'
        paths:
          type: array
          description: Full paths to files associated with the form submission
          items:
            type: string
        other fields:
          description: All fields defined on the form will be included. Name will
            be the name of the field. Value is the value that was submitted in the
            form. Each will be its own attribute of the data object
      description: Contains the data submitted for a form.
    EmailListsResponse:
      title: EmailListsResponse
      type: object
      properties:
        id:
          type: integer
          description: 'ID of the email list. '
          example: 1
        type:
          type: string
          description: 'Type is emailList. '
          example: emailList
          enum:
          - emailList
        attributes:
          $ref: '#/components/schemas/EmailListsResponse_attributes'
        relationships:
          $ref: '#/components/schemas/EmailListsResponse_relationships'
      description: Response object for email lists
      example:
        relationships:
          ownerUser:
            data:
              id: 2
              type: user
        attributes:
          created: '{}'
          members:
          - ykravchuk@exavault.com
          - jdoe@exavault.com
          name: My colleagues
          modified: '{}'
        id: 1
        type: emailList
    EmailListsIncludedResponse:
      title: EmailListsExtendedRresponse
      type: object
      description: Response object for email lists with metadata for included relationships.
      allOf:
      - title: EmailListsResponse
        properties:
          data:
            type: array
            items:
              $ref: '#/components/schemas/EmailList_1'
        description: Response object for email lists
      - properties:
          included:
            type: array
            items:
              $ref: '#/components/schemas/User_3'
    EmailListResponse:
      title: EmailListResponse
      type: object
      properties:
        data:
          $ref: '#/components/schemas/EmailList_2'
      description: Response object for a single email list.
    EmailList:
      title: EmailList
      type: object
      properties:
        id:
          type: integer
          example: 1
        type:
          type: string
          example: emailList
          enum:
          - emailList
        attributes:
          $ref: '#/components/schemas/EmailList_attributes'
        relationships:
          $ref: '#/components/schemas/EmailList_relationships'
    SessionActivityResponse:
      title: Session activity list response
      type: object
      properties:
        responseStatus:
          type: integer
          example: 200
        totalResults:
          type: integer
          example: 2
        returnedResults:
          type: integer
          example: 2
        data:
          type: array
          items:
            $ref: '#/components/schemas/Single entry of session activity'
      example:
        totalResults: 2
        returnedResults: 2
        data:
        - attributes:
            duration: 5
            fileName: /test2/Cassandra2020The20Definitive20Guide.2030947496.pdf
            protocol: web
            bytesTransferred: 10815676
            created: '{}'
            ipAddress: 185.223.113.224
            fileSource: ""
            sessionId: 5da9b4a8bd961dfa0a56fa0dc15aaffe57069271b389e
            operation: PASS
            status: '-'
            username: ykravchuk
          id: 12345
          type: sessionActivity
        - attributes:
            duration: 5
            fileName: /test2/Cassandra2020The20Definitive20Guide.2030947496.pdf
            protocol: web
            bytesTransferred: 10815676
            created: '{}'
            ipAddress: 185.223.113.224
            fileSource: ""
            sessionId: 5da9b4a8bd961dfa0a56fa0dc15aaffe57069271b389e
            operation: PASS
            status: '-'
            username: ykravchuk
          id: 12345
          type: sessionActivity
        responseStatus: 200
    SessionActivityEntry:
      title: Single entry of session activity
      type: object
      properties:
        id:
          type: integer
          example: 12345
        type:
          type: string
          example: sessionActivity
          enum:
          - sessionActivity
        attributes:
          $ref: '#/components/schemas/SessionActivityResponse_attributes'
    WebhooksActivityResponse:
      title: Session activity list response
      type: object
      properties:
        responseStatus:
          type: integer
          description: Http status code of the response.
          example: 200
        totalResults:
          type: integer
          description: Total results found.
          example: 2
        returnedResults:
          type: integer
          description: 'Number of results returned. '
          example: 2
        data:
          type: array
          items:
            $ref: '#/components/schemas/Single entry of session activity_1'
      example:
        totalResults: 2
        returnedResults: 2
        data:
        - attributes:
            created: '{}'
            endpointUrl: https://example.com
            response: OK
            responseSize: 654
            event: Delete File
            attempt: 1
            status: 200
          id: 12345
          type: webhookActivity
        - attributes:
            created: '{}'
            endpointUrl: https://example.com
            response: OK
            responseSize: 654
            event: Delete File
            attempt: 1
            status: 200
          id: 12345
          type: webhookActivity
        responseStatus: 200
    WebhooksActivityEntry:
      title: Single entry of session activity
      type: object
      properties:
        id:
          type: integer
          example: 12345
        type:
          type: string
          example: webhookActivity
          enum:
          - webhookActivity
        attributes:
          $ref: '#/components/schemas/WebhooksActivityEntry_attributes'
    UserPermissions:
      title: UserPermissions
      required:
      - changePassword
      - delete
      - deleteFormData
      - download
      - list
      - modify
      - notification
      - share
      - upload
      - viewFormData
      type: object
      properties:
        download:
          type: boolean
          description: Download permission flag
        upload:
          type: boolean
          description: Upload permission flag
        modify:
          type: boolean
          description: Modify permission flag
        delete:
          type: boolean
          description: Delete permission flag
        list:
          type: boolean
          description: View folder contents permission flag
        changePassword:
          type: boolean
          description: Change (own) password permission flag
        share:
          type: boolean
          description: Sharing permission flag
        notification:
          type: boolean
          description: Notifications permission flag
        viewFormData:
          type: boolean
          description: Access Form Data permission flag. If true, user can view submissions
            that have been stored for a receive folder. This includes any data submitted
            in the receive folder form.
        deleteFormData:
          type: boolean
          description: Delete form data permission flag. If true, user can remove
            data that was submitted for a receive folder. This applies only to data
            submitted in the receive folder form, not the actual files uploaded.
    ResourceAttributes:
      title: ResourceAttributes
      type: object
      properties:
        hash:
          type: string
          description: Unique hash of the resource.
          example: ec4aa9a91be282666a165899a14f29b1
        name:
          type: string
          description: Resource name, e.g. the name of the file or folder.
          example: examplefolder
        extension:
          type: string
          description: Resource extension. Property exists only if resource `type`
            is file.
        type:
          type: string
          description: Type of the resource.
          enum:
          - file
          - dir
        createdBy:
          type: string
          description: Username of the creator.
          example: exampleuser
        uploadDate:
          type: string
          description: Timestamp of resource upload.
          format: ISO 8601
          example: '{}'
        createdAt:
          type: string
          description: Timestamp of resource creation.
          format: ISO 8601
          example: '{}'
        updatedAt:
          type: string
          description: Timestamp of resource modification.
          format: ISO 8601
          example: '{}'
        accessedAt:
          type: string
          description: Timestamp of the time when resource was accessed.
          format: ISO 8601
          example: '{}'
        path:
          type: string
          description: Full path to the resource.
          example: /examplefolder
        size:
          type: integer
          description: Resource size in bytes
          format: int64
          example: 0
        previewable:
          type: boolean
          description: Can resource be previewed. Property equals `null` if resource
            `type` is dir.
          example: true
          enum:
          - true
          - false
          - null
        fileCount:
          description: Number of files within folder. null if resource type is a file.
    Error401:
      title: Error401
      required:
      - responseStatus
      type: object
      properties:
        responseStatus:
          type: integer
          description: HTTP Status Code
          example: 401
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Error401_errors'
      x-examples:
        Unauthorized:
          responseStatus: 401
          errors:
          - code: ERROR_INVALID_CREDENTIALS
            detail: HTTP_UNAUTHORIZED
    Error403:
      title: Error403
      required:
      - responseStatus
      type: object
      properties:
        responseStatus:
          type: integer
          example: 403
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Error403_errors'
      x-examples:
        Insufficient Priveleges:
          responseStatus: 403
          errors:
          - code: ERROR_INSUFFICIENT_PRIVILEGES
            detail: An error occurred
    inline_response_200:
      type: object
      oneOf:
      - title: EmailListsResponse
        properties:
          responseStatus:
            type: integer
            description: Http status code of the response.
            example: 200
          totalResults:
            type: integer
            description: Total count of results found.
          returnedResults:
            type: integer
            description: 'Count of returned results. '
          data:
            type: array
            items:
              $ref: '#/components/schemas/EmailListsResponse'
        description: Response object for email lists
      - properties:
          responseStatus:
            type: integer
            description: Http status code of the response.
          totalResults:
            type: integer
            description: Total count of results found.
          returnedResults:
            type: integer
            description: 'Count of returned results. '
          data:
            type: array
            items:
              $ref: '#/components/schemas/EmailListsIncludedResponse'
    body:
      required:
      - emails
      - name
      type: object
      properties:
        name:
          type: string
          description: 'Name of the email list. '
          example: My friends list
        emails:
          type: array
          description: 'Array of email addresses to include in the email list. '
          example:
          - ykravchuk@exavault.com
          - jdoe@exavault.com
          items:
            type: string
    EmailListsResponse_1:
      title: EmailListsResponse
      type: object
      properties:
        responseStatus:
          type: integer
          description: 'Http status code of the response '
          example: 200
        data:
          $ref: '#/components/schemas/EmailListsResponse'
      example:
        data:
          relationships:
            ownerUser:
              data:
                id: 2
                type: user
          attributes:
            created: '{}'
            members:
            - ykravchuk@exavault.com
            - jdoe@exavault.com
            name: My colleagues
            modified: '{}'
          id: 1
          type: emailList
        responseStatus: 200
    EmailListResponse_1:
      title: EmailListResponse
      type: object
      properties:
        responseStatus:
          type: integer
          description: Http status code of the response.
          example: 200
        data:
          $ref: '#/components/schemas/EmailListsResponse'
      example:
        data:
          relationships:
            ownerUser:
              data:
                id: 2
                type: user
          attributes:
            created: '{}'
            members:
            - ykravchuk@exavault.com
            - jdoe@exavault.com
            name: My colleagues
            modified: '{}'
          id: 1
          type: emailList
        responseStatus: 200
    inline_response_200_1:
      type: object
      properties:
        responseStatus:
          type: integer
          description: Http status code of the response.
        data:
          type: array
          items:
            type: object
      example:
        data:
        - {}
        - {}
        responseStatus: 0
    body_1:
      type: object
      properties:
        name:
          type: string
          description: 'Name of the email list. '
          example: My friends list
        emails:
          type: array
          description: 'Array of email addresses to add to the email list. '
          example:
          - ykravchuk@exavault.com
          - jdoe@exavault.com
          items:
            type: string
    EmailListsResponse_2:
      title: EmailListsResponse
      type: object
      properties:
        responseStatus:
          type: integer
          description: 'Http status code of the response. '
          example: 200
        data:
          $ref: '#/components/schemas/EmailListsResponse'
      example:
        data:
          relationships:
            ownerUser:
              data:
                id: 2
                type: user
          attributes:
            created: '{}'
            members:
            - ykravchuk@exavault.com
            - jdoe@exavault.com
            name: My colleagues
            modified: '{}'
          id: 1
          type: emailList
        responseStatus: 200
    inline_response_200_2:
      type: object
      oneOf:
      - title: Regular form response
        properties:
          responseStatus:
            type: integer
            description: Http status code of the response.
            example: 200
          data:
            $ref: '#/components/schemas/FormResponse'
      - properties:
          responseStatus:
            type: integer
            description: 'Http status code of the response. '
          data:
            $ref: '#/components/schemas/FormExtendedResponse'
    inline_response_200_3:
      type: object
      oneOf:
      - title: Regular form response
        properties:
          responseStatus:
            type: integer
            description: Http status code of the response.
            example: 200
          data:
            $ref: '#/components/schemas/FormResponse'
      - properties:
          responseStatus:
            type: integer
            description: Http status code of the response.
          data:
            $ref: '#/components/schemas/FormExtendedResponse'
    formsid_settings:
      type: object
      properties:
        isRequired:
          type: boolean
          description: 'True is the form element is required for submission. '
          example: true
        senderEmail:
          type: boolean
          example: false
        useAsFolderName:
          type: boolean
          description: 'True if the submitted response should be used as the name
            for the new folder. '
          example: false
    formsid_elements:
      type: object
      properties:
        id:
          type: integer
          description: ID of the form element. If you're adding a new element to the
            form, do not include this field.
          example: 123
        name:
          type: string
          description: Name of the form element.
          example: Your name
        order:
          type: integer
          description: 'The order the fields will be displayed to the receipient.
            Starts at 0. '
          example: 0
        type:
          type: string
          description: Type of form field to use.
          example: name
          enum:
          - name
          - email
          - text
          - textarea
          - upload_area
        settings:
          $ref: '#/components/schemas/formsid_settings'
    body_2:
      type: object
      properties:
        formDescription:
          type: string
          description: 'Set a description for the form that will be visible to recipients. '
          example: Send your files
        submitButtonText:
          type: string
          description: Text to be displayed on the submission button.
          example: Send Files
        successMessage:
          type: string
          description: 'Text to be displayed when a recipient has submitted the form. '
          example: Your files were uploaded
        elements:
          type: array
          items:
            $ref: '#/components/schemas/formsid_elements'
        cssStyles:
          type: string
          description: CSS Styles of the form.
          example: |-
            #ev-widget-form {
              /*Change this to change the font. Remove to use your website font*/
              font-family: Helvetica Neue, sans-serif;
              /*Makes the form the same width as your website */
              margin: 0 -2%;
            }
            #ev-widget-form label{
              width: 100%;
            }
            #ev-widget-form input,
            #ev-widget-form textarea {
              /*Changes color and thickness of borders on form elements */
              border: 2px solid #ccc;
              /*Changes spacing inside the form elements (top/bottom and left/right */
              padding: 5px 5px;
              /* Changes how far away the inputs are from their label */
              margin-top: 2px;
            }

            #ev-widget-form input:focus,
            #ev-widget-form textarea:focus {
              /*Changes the color of the form elements when they are clicked in to */
              border: 2px solid #b2cf88;
              /*Removes glow effect from form elements that are clicked in to */
              outline: none;
            }

            #ev-widget-form label {
              font-size: 14px;
              font-weight: bold;
              /*Changes color of labels */
              color: #232323
            }

            #ev-widget-form .ev-form-element-description {
              /*Changes size of descriptions */
              font-size: 12px;
              /*Changes color of descriptions */
              color: #777;
              /* Changes how far away the descriptions are from their input */
              margin-top: 2px;
            }

            #ev-widget-form textarea {
              /* Makes textareas (multiline inputs) a taller. */
              min-height: 90px;
            }
    Regular form response:
      title: Regular form response
      type: object
      properties:
        responseStatus:
          type: integer
          description: Http status code of the response.
          example: 200
        data:
          $ref: '#/components/schemas/FormResponse'
      example:
        data:
          relationships:
            share:
              data:
                id: 22
                type: share
          attributes:
            elements:
            - id: 234
              name: Project ID
              order: 0
              type: name
              settings:
                width: 1
                isRequired: false
                useAsFolderName: false
            - id: 235
              name: Your Email
              order: 1
              type: email
              setings:
                description: Enter your email from the registration system
                width: 1
                isRequired: true
                senderEmail: true
                useAsFolderName: true
            - id: 236
              name: Upload Area
              order: 2
              type: upload_area
              settings: {}
            formDescription: Upload your photos to us
            submitButtonText: Send Files
            successMessage: Your files were uploaded
            cssStyles: |-
              #ev-widget-form {
                /*Change this to change the font. Remove to use your website font*/
                font-family: Helvetica Neue, sans-serif;
                /*Makes the form the same width as your website */
                margin: 0 -2%;
              }
              #ev-widget-form label{
                width: 100%;
              }
              #ev-widget-form input,
              #ev-widget-form textarea {
                /*Changes color and thickness of borders on form elements */
                border: 2px solid #ccc;
                /*Changes spacing inside the form elements (top/bottom and left/right */
                padding: 5px 5px;
                /* Changes how far away the inputs are from their label */
                margin-top: 2px;
              }

              #ev-widget-form input:focus,
              #ev-widget-form textarea:focus {
                /*Changes the color of the form elements when they are clicked in to */
                border: 2px solid #b2cf88;
                /*Removes glow effect from form elements that are clicked in to */
                outline: none;
              }

              #ev-widget-form label {
                font-size: 14px;
                font-weight: bold;
                /*Changes color of labels */
                color: #232323
              }

              #ev-widget-form .ev-form-element-description {
                /*Changes size of descriptions */
                font-size: 12px;
                /*Changes color of descriptions */
                color: #777;
                /* Changes how far away the descriptions are from their input */
                margin-top: 2px;
              }

              #ev-widget-form textarea {
                /* Makes textareas (multiline inputs) a taller. */
                min-height: 90px;
              }
          id: 823752
          type: form
        responseStatus: 200
    body_3:
      required:
      - data
      - formId
      type: object
      properties:
        data:
          type: object
          description: JSON object containing field names and their values.
          example:
            Email address: api-test@exavault.com
            Details (optional): Sending some files
    inline_response_201:
      type: object
      properties:
        responseStatus:
          type: integer
          example: 200
        data:
          $ref: '#/components/schemas/inline_response_201_data'
      example:
        data:
          messageId: 22
        responseStatus: 200
    inline_response_201_1:
      type: object
      properties:
        responseStatus:
          type: integer
          description: Http status code of the response.
          format: int32
          example: 200
      example:
        responseStatus: 200
    inline_response_200_4:
      type: object
      properties:
        responseStatus:
          type: integer
          description: 'Http status code of the response. '
          format: int32
          example: 200
      example:
        responseStatus: 200
    inline_response_200_5:
      type: object
      oneOf:
      - title: Notification response object
        properties:
          responseStatus:
            type: integer
            description: 'Http status code of the response. '
            example: 200
          data:
            $ref: '#/components/schemas/NotificationResponse'
        description: PLACEHOLDER
      - properties:
          responseStatus:
            type: integer
            description: 'Http status code of the response. '
          data:
            $ref: '#/components/schemas/NotificationExtendedResponse'
    inline_response_200_6:
      type: object
      properties:
        responseStatus:
          type: integer
          description: Http status code of the response.
        data:
          type: object
      example:
        data: {}
        responseStatus: 0
    body_4:
      type: object
      properties:
        path:
          type: string
          description: Full path of file/folder where the notification is set.
          example: /folderNotification
        action:
          type: string
          description: Type of action to filter on. Notifications will only be fired
            for the given type of action.
          example: all
          enum:
          - upload
          - download
          - delete
          - all
        usernames:
          type: array
          description: Array of usernames or with one flag to filter on. This options
            allows to filter what users will trigger the notification.
          example:
          - notice_user_all
          items:
            type: string
        sendEmail:
          type: boolean
          description: Set to true if the user should be notified by email when the
            notification is triggered.
          example: true
        emails:
          type: array
          description: Email addresses to send notification to. If not specified,
            sends to the authenticated user.
          example:
          - myemail@example.com
          items:
            type: string
            format: emails
    Notification response object:
      title: Notification response object
      type: object
      properties:
        responseStatus:
          type: integer
          description: Http status code of the response.
          example: 200
        data:
          $ref: '#/components/schemas/NotificationResponse'
      example:
        data:
          relationships:
            ownerUser:
              id: 12345
              type: user
            resource:
              id: 2345
              type: resource
            share:
              id: 2
              type: share
          attributes:
            readableDescription: anybody changes, downloads or deletes '/examplefile.jpg'
            readableDescriptionWithoutPath: anybody changes or downloads this file
            created: '{}'
            shareId: shareId
            type: folder
            message: message
            userId: "2"
            path: /examplefolder
            sendEmail: "1"
            recipients:
            - created: '{}'
              modified: '{}'
              notificationId: "23"
              id: 2
              email: exampleuser@exavault.com
            - created: '{}'
              modified: '{}'
              notificationId: "23"
              id: 2
              email: exampleuser@exavault.com
            name: examplefolder
            action: all
            modified: '{}'
            usernames:
            - notice_user_all
            recipientEmails:
            - recipient@gmail.com
          id: 1
          type: notification
        responseStatus: 200
    body_5:
      type: object
      properties:
        id:
          type: integer
          description: Notification id to unsubscribe from.
          format: int32
        email:
          type: string
          description: Email to remove from the notification recipients list.
    inline_response_200_7:
      type: object
      oneOf:
      - title: Notification response object
        properties:
          responseStatus:
            type: integer
            description: Http status code of the response.
            example: 200
          totalResults:
            type: integer
            description: 'Total count of results found. '
          returnedResults:
            type: integer
            description: 'Count of returned results. '
          data:
            type: array
            items:
              $ref: '#/components/schemas/NotificationResponse'
      - properties:
          responseStatus:
            type: integer
            example: 200
          totalResults:
            type: integer
            description: 'Total count of results found. '
            example: 2
          returnedResults:
            type: integer
            description: 'Count of returned results. '
            example: 2
          data:
            type: array
            items:
              $ref: '#/components/schemas/NotificationExtendedResponse'
    body_6:
      required:
      - action
      - sendEmail
      - type
      - usernames
      type: object
      properties:
        type:
          type: string
          description: Type of resource you're setting the notification on.
          example: file
          enum:
          - file
          - folder
        action:
          type: string
          description: Type of action to filter on. Notifications will only be fired
            for the given type of action.
          example: upload
          enum:
          - upload
          - download
          - delete
          - all
        usernames:
          type: array
          description: Determines which users should trigger the notification. Either
            one of the values above, or an array of usernames.
          example:
          - notice_user_all
          items:
            type: string
        sendEmail:
          type: boolean
          description: Set to true if the user should be notified by email when the
            notification is triggered.
          example: true
          enum:
          - true
          - false
        emails:
          type: array
          description: Email addresses to send the notification to. If not specified,
            sends to the authenticated user.
          example:
          - myemail@example.com
          items:
            type: string
            format: emails
    Notification response object_1:
      title: Notification response object
      type: object
      properties:
        responseStatus:
          type: integer
          description: 'Http status code of the response. '
          example: 200
        data:
          $ref: '#/components/schemas/NotificationResponse'
      example:
        data:
          relationships:
            ownerUser:
              id: 12345
              type: user
            resource:
              id: 2345
              type: resource
            share:
              id: 2
              type: share
          attributes:
            readableDescription: anybody changes, downloads or deletes '/examplefile.jpg'
            readableDescriptionWithoutPath: anybody changes or downloads this file
            created: '{}'
            shareId: shareId
            type: folder
            message: message
            userId: "2"
            path: /examplefolder
            sendEmail: "1"
            recipients:
            - created: '{}'
              modified: '{}'
              notificationId: "23"
              id: 2
              email: exampleuser@exavault.com
            - created: '{}'
              modified: '{}'
              notificationId: "23"
              id: 2
              email: exampleuser@exavault.com
            name: examplefolder
            action: all
            modified: '{}'
            usernames:
            - notice_user_all
            recipientEmails:
            - recipient@gmail.com
          id: 1
          type: notification
        responseStatus: 200
    inline_response_200_8:
      type: object
      oneOf:
      - title: User response object
        properties:
          responseStatus:
            type: integer
            description: http status of the response
            example: 200
          totalResults:
            type: integer
            description: Total count of results found.
          returnedResults:
            type: integer
            description: 'Count of returned results. '
          data:
            type: array
            items:
              $ref: '#/components/schemas/UserResponse'
      - properties:
          responseStatus:
            type: integer
            description: Http code for the response.
            example: 200
          totalResults:
            type: integer
            description: Total count of results found.
            example: 2
          returnedResults:
            type: integer
            description: 'Count of returned results. '
            example: 2
          data:
            type: array
            items:
              $ref: '#/components/schemas/UserExtendedResponse'
    body_7:
      required:
      - email
      - homeResource
      - password
      - permissions
      - role
      - timeZone
      - username
      type: object
      properties:
        username:
          type: string
          description: Username of the user to create. This should follow standard
            username conventions; e.g. all lowercase, no spaces, etc. We do allow
            email addresses as usernames.
          example: testuser
        nickname:
          type: string
          description: An optional nickname (e.g. 'David from Sales').
          example: testnickname
        homeResource:
          type: string
          description: The path to the user's home folder. For the account root, specify
            `/`. Otherwise, use standard Unix path format, e.g. `/path/to/some/dir`.
            The user will be locked to this directory and unable to move 'up' in the
            account. If the folder does not exist in the account, it will be created.
            Note that users with the role `admin` cannot have a folder other than
            `/`.
          example: /
        email:
          type: string
          description: The user's email address.
          example: testuser@email.com
        password:
          type: string
          description: The user's password.
        role:
          type: string
          description: The user's role. Note that admin users cannot have a `homeResource`
            other than `/`, and will be setup with full permissions regardless of
            what you specify in the `permissions` property.
          example: user
          enum:
          - user
          - admin
        permissions:
          type: string
          description: "A CSV string of user permissions. For example: `upload,download,list`.\
            \ Note that users will be unable to see any files in the account unless\
            \ you include `list` permission. \n"
          example: upload,download
          enum:
          - upload
          - download
          - delete
          - modify
          - list
          - changePassword
          - share
          - notification
          - viewFormData
          - deleteFormData
        timeZone:
          type: string
          description: |
            The user's timezone, used for accurate time display within the application. See <a href='https://php.net/manual/en/timezones.php' target='blank'>this page</a> for allowed values.
          example: America/Los_Angeles
        expiration:
          description: Optional timestamp when the user should expire, formatted in
            ISO 8601.
          example: {}
        locked:
          type: boolean
          description: If true, the user's account is locked by default. Locked users
            cannot log in.
          example: true
          default: false
        welcomeEmail:
          type: boolean
          description: If `true`, send a user email upon creation. The default welcome
            email can be configured from the settings page in your account.
          example: true
          default: false
        onboarding:
          type: boolean
          description: If `true`, enable extra help popups in the web application
            for this user.
          example: true
          default: false
    User response object:
      title: User response object
      type: object
      properties:
        responseStatus:
          type: integer
          description: Http code for the response.
          example: 200
        data:
          $ref: '#/components/schemas/UserResponse'
      example:
        data:
          relationships:
            homeResource:
              id: 2345
              type: resource
            ownerAccount:
              id: 2
              type: account
          attributes:
            role: user
            accountName: exampleuser
            firstLogin: false
            created: '{}'
            timeZone: America/Chicago
            accessTimestamp: '{}'
            homeDir: /
            permissions:
              modify: true
              notification: true
              download: true
              viewFormData: true
              upload: true
              share: true
              list: true
              delete: true
              changePassword: true
              deleteFormData: ""
            nickname: exampleuser
            modified: '{}'
            onboarding: false
            expiration: expiration
            email: example@exavault.mail
            status: 1
            username: exampleuser
          id: 655621
          type: user
        responseStatus: 200
    inline_response_200_9:
      type: object
      oneOf:
      - properties:
          responseStatus:
            type: integer
            description: 'Http status code of the response. '
          data:
            $ref: '#/components/schemas/UserResponse'
      - properties:
          responseStatus:
            type: integer
          data:
            $ref: '#/components/schemas/UserExtendedResponse'
    inline_response_200_10:
      type: object
      properties:
        responseStatus:
          type: integer
          description: Http status code for the response.
        data:
          type: object
      example:
        data: {}
        responseStatus: 0
    body_8:
      type: object
      properties:
        username:
          type: string
          description: Username of the user to create. This should follow standard
            username conventions; e.g. all lowercase, no spaces, etc. We do allow
            email addresses as usernames.
          example: testuser
        nickname:
          type: string
          description: An optional nickname (e.g. 'David from Sales').
          example: testnickname
        destinationFolder:
          type: string
          description: The path to the user's home folder. For the account root, specify
            `/`. Otherwise, use standard Unix path format, e.g. `/path/to/some/dir`.
            The user will be locked to this directory and unable to move 'up' in the
            account. If the folder does not exist in the account, it will be created.
            Note that users with the role `admin` cannot have a folder other than
            `/`.
          example: /
        email:
          type: string
          description: The user's email address.
          example: testuser@email.com
        password:
          type: string
          description: The user's password.
          example: '*******'
        role:
          type: string
          description: The user's role. Note that admin users cannot have a `destinationFolder`
            other than `/`, and will be setup with full permissions regardless of
            what you specify in the `permissions` property.
          example: user
          enum:
          - user
          - admin
        permissions:
          type: string
          description: "A CSV string of user permissions. For example: `upload,download,list`.\
            \ Note that users will be unable to see any files in the account unless\
            \ you include `list` permission. \n"
          example: upload,download
          enum:
          - upload
          - download
          - delete
          - modify
          - list
          - changePassword
          - share
          - notification
          - viewFormData
          - deleteFormData
        timeZone:
          type: string
          description: |
            The user's timezone, used for accurate time display within the application. See <a href='https://php.net/manual/en/timezones.php' target='blank'>this page</a> for allowed values.
          example: America/Los_Angeles
        expiration:
          type: string
          description: Optional timestamp when the user should expire, formatted in
            ISO 8601.
          example: '{}'
        locked:
          type: boolean
          description: If true, the user's account is locked by default. Locked users
            cannot log in.
          example: true
          default: false
        onboarding:
          type: boolean
          description: If `true`, enable extra help popups in the web application
            for this user.
          example: true
          default: false
    inline_response_200_11:
      type: object
      allOf:
      - properties:
          responseStatus:
            type: integer
            description: 'Http status code of the response. '
          data:
            $ref: '#/components/schemas/UserResponse'
    inline_response_200_12:
      type: object
      allOf:
      - properties:
          responseStatus:
            type: integer
            description: Http status code of the response.
            example: 200
          totalResults:
            type: integer
            description: Total count of results found.
            example: 2
          returnedResults:
            type: integer
            description: Count of returned results.
            example: 2
          data:
            type: array
            items:
              $ref: '#/components/schemas/ResourceResponse'
      - properties:
          included:
            type: array
            items:
              type: object
              anyOf:
              - title: Share
                properties:
                  id:
                    type: integer
                    description: ID of the share.
                    format: int32
                    example: 655621
                  type:
                    type: string
                    example: share
                    enum:
                    - share
                  attributes:
                    type: object
                    properties:
                      name:
                        type: string
                        description: Share name.
                        example: Example Folder
                      hasPassword:
                        type: boolean
                        description: True if the share has password.
                        example: false
                        enum:
                        - true
                        - false
                      public:
                        type: boolean
                        description: True if the share has a public url.
                        example: true
                        enum:
                        - true
                        - false
                      accessMode:
                        type: string
                        description: Access rights for the share.
                        example: upload
                        enum:
                        - upload
                        - download
                        - download_upload
                        - download_upload_modify_delete
                      accessDescription:
                        type: string
                        description: Description of the share access rights.
                        example: Download only
                      embed:
                        type: boolean
                        description: True if share can be embedded.
                        example: false
                      hash:
                        type: string
                        description: Share hash.
                        example: hd1e-3erufo72
                      ownerHash:
                        type: string
                        description: Share owner's hash.
                        example: hd1e-3erufo72-fsxak999
                      expiration:
                        type: string
                        description: Expiration date of the share.
                      expired:
                        type: boolean
                        description: True if the share has expired.
                        example: false
                        enum:
                        - true
                        - false
                      resent:
                        type: string
                        description: Invitations resent date. Can be `null` if resent
                          never happened.
                        format: ISO 8601
                      type:
                        type: string
                        description: Type of share.
                        example: shared_folder
                        enum:
                        - shared_folder
                        - send
                        - receive
                      requireEmail:
                        type: boolean
                        description: True if share requires email to access.
                        example: true
                      fileDropCreateFolders:
                        type: boolean
                        description: Flag to show if separate folders should be created
                          for each file upload to receive folder.
                        example: false
                        enum:
                        - true
                        - false
                      paths:
                        type: array
                        description: Path to the shared resource in your account.
                        example:
                        - /Example Folder
                        items:
                          type: string
                      recipients:
                        type: array
                        description: Array of recipients.
                        example:
                        - id: 2
                          shareId: 23
                          type: direct
                          hash: fseowxan
                          email: recipient@gmail.com
                          sent: true
                          received: false
                          created: {}
                        items:
                          title: ShareRecipient
                          type: object
                          properties:
                            id:
                              type: integer
                              description: ID of the recipient.
                              format: int32
                              example: 2
                            shareId:
                              type: string
                              description: ID of the share that the recipoient belongs
                                to.
                              example: "23"
                            type:
                              type: string
                              description: Type of the recipient.
                              example: owner
                              enum:
                              - owner
                              - direct
                            hash:
                              type: string
                              description: Share hash.
                              example: fseowxan
                            email:
                              type: string
                              description: Recipient email address.
                              example: recipient@gmail.com
                            sent:
                              type: boolean
                              description: Set to true if invite email was sent; false
                                otherwise.
                              example: true
                              enum:
                              - true
                              - false
                            received:
                              type: boolean
                              description: Set to true if recipient has accessed the
                                share. Note this is set to true when the recipient
                                clicks the link to access the share; not when they
                                download a file.
                              example: false
                              enum:
                              - true
                              - false
                            created:
                              type: string
                              description: Timestamp of adding recipient to the share.
                              format: ISO 8601
                              example: '{}'
                      messages:
                        type: array
                        description: Array of invitation messages.
                        items:
                          title: Message
                          type: object
                          properties:
                            id:
                              type: integer
                              description: Message id.
                              format: int32
                              example: 397584
                            type:
                              type: string
                              description: Resource type
                              example: message
                              enum:
                              - message
                            attributes:
                              type: object
                              properties:
                                subject:
                                  type: string
                                  description: Message subject.
                                  example: Files available for download
                                body:
                                  type: string
                                  description: Message text.
                                  example: You have files available for download.
                                created:
                                  type: string
                                  description: Timestamp of message creation.
                                  format: ISO 8601
                                  example: '{}'
                                modified:
                                  type: string
                                  description: Timestamp of message modification.
                                  format: ISO 8601
                                  example: '{}'
                      inherited:
                        type: boolean
                        description: True if share inherited from parent folder.
                        enum:
                        - true
                        - null
                      status:
                        type: integer
                        description: Share activity status. Can be active (1) or deactivated
                          (0).
                        format: int32
                        example: 1
                        enum:
                        - 0
                        - 1
                      hasNotification:
                        type: boolean
                        description: True if share has notification.
                        example: false
                        enum:
                        - true
                        - false
                      notification:
                        type: string
                        description: Notification object if share has one.
                      created:
                        type: string
                        description: Timestamp of share creation.
                        format: YYYY-mm-dd hh:mm:ss
                        example: 2017-05-03 5:49:34 pm
                      modified:
                        type: string
                        description: Timestamp of share modification. Can be `null`
                          if it wasn't modified.
                        format: YYYY-mm-dd hh:mm:ss
                  relationships:
                    type: object
                    properties:
                      messages:
                        type: array
                        description: PLACEHOLDER
                        items:
                          type: object
                          properties:
                            type:
                              type: string
                              description: PLACEHOLDER
                              example: message
                              enum:
                              - message
                            id:
                              type: integer
                              description: PLACEHOLDER
                              example: 21
                      owner:
                        type: object
                        properties:
                          type:
                            type: string
                            description: PLACEHOLDER
                            example: user
                            enum:
                            - user
                          id:
                            type: integer
                            description: PLACEHOLDER
                            example: 12345
                      resource:
                        type: object
                        properties:
                          type:
                            type: string
                            description: PLACEHOLDER
                            example: resource
                            enum:
                            - resource
                          id:
                            type: integer
                            description: PLACEHOLDER
                            example: 12345
                        description: PLACEHOLDER
                      notifications:
                        type: array
                        description: PLACEHOLDER
                        items:
                          type: object
                          properties:
                            type:
                              type: string
                              description: PLACEHOLDER
                              example: notification
                              enum:
                              - notification
                            id:
                              type: integer
                              description: PLACEHOLDER
                              example: 9
                description: Object contains share properties.
              - title: DirectFile
                properties:
                  id:
                    type: integer
                    description: ID of the direct file.
                    format: int32
                    example: 655621
                  type:
                    type: string
                    example: direct-file
                    enum:
                    - direct-file
                  attributes:
                    type: object
                    properties:
                      path:
                        type: string
                        description: Path to the folder direct file is set on.
                        example: /dfa folder
                      isEnabled:
                        type: boolean
                        description: Flag indicates if direct file is turned `on`
                          or `off`.
                        example: true
                      isIndexEnabled:
                        type: boolean
                        description: Flag indicates if folder listing is `on` or `off`.
                          If it is enabled you can see folder content in the browser.
                        example: true
                      blockUntil:
                        type: string
                        description: Timestamp of direct file block until date. Equals
                          `0000-00-00 00:00:00` when no block date is setup. Used
                          when direct file bandwidth quota limit crossed.
                        format: ISO 8601
                        example: '{}'
                      created:
                        type: string
                        description: Unix timestamp of direct file creation.
                        example: "1504201616"
                      modified:
                        type: string
                        description: Unix timestamp of direct file modification.
                        example: "1504201780"
                  relationships:
                    type: object
                    properties:
                      owner:
                        type: object
                        properties:
                          type:
                            type: string
                            example: user
                            enum:
                            - user
                          id:
                            type: integer
                            example: 37
                      resource:
                        type: object
                        properties:
                          type:
                            type: string
                            example: resource
                            enum:
                            - resource
                          id:
                            type: integer
                            example: 38
              - title: Notification
                properties:
                  id:
                    type: integer
                    format: int32
                    example: 1
                  type:
                    type: string
                    example: notification
                  attributes:
                    type: object
                    properties:
                      userId:
                        type: string
                        description: ID of the user that the notification belongs
                          to.
                        example: "2"
                      type:
                        type: string
                        description: Notification type.
                        example: folder
                        enum:
                        - file
                        - folder
                        - shared_folder
                        - send_receipt
                        - share_receipt
                        - file_drop
                      path:
                        type: string
                        description: Path to the item that the notification is set
                          on.
                        example: /examplefolder
                      name:
                        type: string
                        description: Name of the item that the notification is set
                          on.
                        example: examplefolder
                      action:
                        type: string
                        description: Action that triggers notification.
                        example: all
                        enum:
                        - upload
                        - download
                        - delete
                        - all
                      usernames:
                        type: array
                        description: Detail on which users can trigger the notification.
                        example:
                        - notice_user_all
                        items:
                          type: string
                      recipients:
                        type: array
                        description: Notification recipients.
                        items:
                          title: NotificartionRecipient
                          type: object
                          properties:
                            id:
                              type: integer
                              description: ID of the recipient.
                              format: int32
                              example: 2
                            notificationId:
                              type: string
                              description: ID of the notification that the recipient
                                belongs to.
                              example: "23"
                            email:
                              type: string
                              description: Recipient email.
                              example: exampleuser@exavault.com
                            created:
                              type: string
                              description: Timestamp of adding notification recipient.
                              format: ISO 8601
                              example: '{}'
                            modified:
                              type: string
                              description: Timestamp of notification recipient modification.
                              format: ISO 8601
                              example: '{}'
                      recipientEmails:
                        type: array
                        description: Email addresses of all recipients.
                        example:
                        - recipient@gmail.com
                        items:
                          type: string
                          format: email
                      sendEmail:
                        type: string
                        description: Send email when the notification is triggered.
                        example: "1"
                        enum:
                        - "0"
                        - "1"
                      readableDescription:
                        type: string
                        description: Human readable description of the notification.
                        example: anybody changes, downloads or deletes '/examplefile.jpg'
                      readableDescriptionWithoutPath:
                        type: string
                        description: Human readable description of the notification
                          without item path.
                        example: anybody changes or downloads this file
                      shareId:
                        type: string
                        description: ID of the share that the notification belogns
                          to.
                      message:
                        type: string
                        description: Custom message that will be sent to the notification
                          recipients.
                      created:
                        type: string
                        description: Timestamp of notifiction creation.
                        format: ISO 8601
                        example: '{}'
                      modified:
                        type: string
                        description: Timestamp of notification modification.
                        format: ISO 8601
                        example: '{}'
                  relationships:
                    type: object
                    properties:
                      node:
                        type: object
                        properties:
                          type:
                            type: string
                            example: resource
                          id:
                            type: integer
                            format: int32
                            example: 2345
                      share:
                        type: object
                        properties:
                          type:
                            type: string
                            example: share
                          id:
                            type: integer
                            format: int32
                            example: 2
                      owner:
                        type: object
                        properties:
                          type:
                            type: string
                            description: PLACEHOLDER
                            example: user
                            enum:
                            - user
                          id:
                            type: integer
                            description: PLACEHOLDER
                            example: 12345
                description: Object containing notification properties.
              - title: Resource
                properties:
                  id:
                    type: integer
                    format: int32
                    example: 1
                  type:
                    type: string
                    example: resource
                  attributes:
                    type: object
                    properties:
                      hash:
                        type: string
                        description: Unique hash of the resource.
                        example: ec4aa9a91be282666a165899a14f29b1
                      name:
                        type: string
                        description: Resource name, e.g. the name of the file or folder.
                        example: examplefolder
                      extension:
                        type: string
                        description: Resource extension. Property exists only if resource
                          `type` is file.
                        example: .zip
                      type:
                        type: string
                        description: Type of the resource.
                        enum:
                        - file
                        - folder
                        - dir
                      createdBy:
                        type: string
                        description: Username of the creator.
                        example: exampleuser
                      uploadDate:
                        type: string
                        description: Timestamp of resource upload.
                        format: ISO 8601
                        example: '{}'
                      createdAt:
                        type: string
                        description: Timestamp of resource creation.
                        format: ISO 8601
                        example: '{}'
                      updatedAt:
                        type: string
                        description: Timestamp of resource modification.
                        format: ISO 8601
                        example: '{}'
                      accessedAt:
                        type: string
                        description: Timestamp of the time when resource was accessed.
                        format: ISO 8601
                        example: '{}'
                      parent:
                        type: string
                        description: Parent path of the resource.
                        example: /
                      path:
                        type: string
                        description: Full path to the resource.
                        example: /examplefolder
                      fileCount:
                        type: integer
                        description: Count of files in resource. Property exists only
                          if resource `type` is folder.
                        format: int32
                        example: 0
                      size:
                        type: integer
                        description: Resource size.
                        format: int64
                        example: 0
                      previewable:
                        type: boolean
                        description: Can resource be previewed. Property equals `null`
                          if resource `type` is folder.
                        example: true
                        enum:
                        - true
                        - false
                        - null
                  relationships:
                    type: object
                    properties:
                      share:
                        type: object
                        properties:
                          id:
                            type: integer
                            format: int32
                            example: 2345
                          type:
                            type: string
                            example: share
                      notification:
                        type: object
                        properties:
                          id:
                            type: integer
                            format: int32
                            example: 2
                          type:
                            type: string
                            example: notification
                      directFile:
                        type: object
                        properties:
                          id:
                            type: integer
                            format: int32
                            example: 2
                          type:
                            type: string
                            example: directFile
                      parentNode:
                        type: object
                        properties:
                          id:
                            type: integer
                            format: int32
                            example: 2
                          type:
                            type: string
                            example: resource
                description: All properties of the resource.
                discriminator:
                  propertyName: type
    inline_response_200_13:
      type: object
      allOf:
      - title: Resource response object
        properties:
          responseStatus:
            type: integer
            description: 'Http status code of the response. '
            example: 200
          data:
            $ref: '#/components/schemas/ResourceResponse'
        description: PLACEHOLDER
      - properties:
          included:
            type: array
            items:
              type: object
              anyOf:
              - title: Share
                properties:
                  id:
                    type: integer
                    description: ID of the share.
                    format: int32
                    example: 655621
                  type:
                    type: string
                    description: Type is share.
                    example: share
                    enum:
                    - share
                  attributes:
                    type: object
                    properties:
                      name:
                        type: string
                        description: Share name.
                        example: Example Folder
                      hasPassword:
                        type: boolean
                        description: True if the share has password.
                        example: false
                        enum:
                        - true
                        - false
                      public:
                        type: boolean
                        description: True if the share has a public url.
                        example: true
                        enum:
                        - true
                        - false
                      accessMode:
                        type: string
                        description: Access rights for the share.
                        example: upload
                        enum:
                        - upload
                        - download
                        - download_upload
                        - download_upload_modify_delete
                      accessDescription:
                        type: string
                        description: Description of the share access rights.
                        example: Download only
                      embed:
                        type: boolean
                        description: True if share can be embedded.
                        example: false
                      hash:
                        type: string
                        description: Share hash.
                        example: hd1e-3erufo72
                      ownerHash:
                        type: string
                        description: Share owner's hash.
                        example: hd1e-3erufo72-fsxak999
                      expiration:
                        type: string
                        description: Expiration date of the share.
                      expired:
                        type: boolean
                        description: True if the share has expired.
                        example: false
                        enum:
                        - true
                        - false
                      resent:
                        type: string
                        description: Invitations resent date. Can be `null` if resent
                          never happened.
                        format: ISO 8601
                      type:
                        type: string
                        description: Type of share.
                        example: shared_folder
                        enum:
                        - shared_folder
                        - send
                        - receive
                      requireEmail:
                        type: boolean
                        description: True if share requires email to access.
                        example: true
                      fileDropCreateFolders:
                        type: boolean
                        description: Flag to show if separate folders should be created
                          for each file upload to receive folder.
                        example: false
                        enum:
                        - true
                        - false
                      paths:
                        type: array
                        description: Path to the shared resource in your account.
                        example:
                        - /Example Folder
                        items:
                          type: string
                      recipients:
                        type: array
                        description: Array of recipients.
                        example:
                        - id: 2
                          shareId: 23
                          type: direct
                          hash: fseowxan
                          email: recipient@gmail.com
                          sent: true
                          received: false
                          created: {}
                        items:
                          title: ShareRecipient
                          type: object
                          properties:
                            id:
                              type: integer
                              description: ID of the recipient.
                              format: int32
                              example: 2
                            shareId:
                              type: string
                              description: ID of the share that the recipoient belongs
                                to.
                              example: "23"
                            type:
                              type: string
                              description: Type of the recipient.
                              example: owner
                              enum:
                              - owner
                              - direct
                            hash:
                              type: string
                              description: Share hash.
                              example: fseowxan
                            email:
                              type: string
                              description: Recipient email address.
                              example: recipient@gmail.com
                            sent:
                              type: boolean
                              description: Set to true if invite email was sent; false
                                otherwise.
                              example: true
                              enum:
                              - true
                              - false
                            received:
                              type: boolean
                              description: Set to true if recipient has accessed the
                                share. Note this is set to true when the recipient
                                clicks the link to access the share; not when they
                                download a file.
                              example: false
                              enum:
                              - true
                              - false
                            created:
                              type: string
                              description: Timestamp of adding recipient to the share.
                              format: ISO 8601
                              example: '{}'
                      messages:
                        type: array
                        description: Array of invitation messages.
                        items:
                          title: Message
                          type: object
                          properties:
                            id:
                              type: integer
                              description: Message id.
                              format: int32
                              example: 397584
                            type:
                              type: string
                              description: Resource type
                              example: message
                              enum:
                              - message
                            attributes:
                              type: object
                              properties:
                                subject:
                                  type: string
                                  description: Message subject.
                                  example: Files available for download
                                body:
                                  type: string
                                  description: Message text.
                                  example: You have files available for download.
                                created:
                                  type: string
                                  description: Timestamp of message creation.
                                  format: ISO 8601
                                  example: '{}'
                                modified:
                                  type: string
                                  description: Timestamp of message modification.
                                  format: ISO 8601
                                  example: '{}'
                      inherited:
                        type: boolean
                        description: True if share inherited from parent folder.
                        enum:
                        - true
                        - null
                      status:
                        type: integer
                        description: Share activity status. Can be active (1) or deactivated
                          (0).
                        format: int32
                        example: 1
                        enum:
                        - 0
                        - 1
                      hasNotification:
                        type: boolean
                        description: True if share has notification.
                        example: false
                        enum:
                        - true
                        - false
                      created:
                        type: string
                        description: Timestamp of share creation.
                        format: YYYY-mm-dd hh:mm:ss
                        example: 2017-05-03 5:49:34 pm
                      modified:
                        type: string
                        description: Timestamp of share modification. Can be `null`
                          if it wasn't modified.
                        format: YYYY-mm-dd hh:mm:ss
                      trackingStatus:
                        type: string
                        description: 'Checks recipient received status of the share
                          and returns whether it''s been received, partially recevied,
                          or not recevied. '
                        enum:
                        - pending
                        - incomplete
                        - complete
                      formId:
                        type: integer
                        description: ID of the form.
                description: Object contains share properties.
              - title: DirectFile
                properties:
                  id:
                    type: integer
                    description: ID of the direct file.
                    format: int32
                    example: 655621
                  type:
                    type: string
                    description: Type is directFile.
                    example: direct-file
                    enum:
                    - direct-file
                  attributes:
                    type: object
                    properties:
                      path:
                        type: string
                        description: Path to the folder direct file is set on.
                        example: /dfa folder
                      isEnabled:
                        type: boolean
                        description: Flag indicates if direct file is turned `on`
                          or `off`.
                        example: true
                      isIndexEnabled:
                        type: boolean
                        description: Flag indicates if folder listing is `on` or `off`.
                          If it is enabled you can see folder content in the browser.
                        example: true
                      blockUntil:
                        type: string
                        description: Timestamp of direct file block until date. Equals
                          `0000-00-00 00:00:00` when no block date is setup. Used
                          when direct file bandwidth quota limit crossed.
                        format: ISO 8601
                        example: '{}'
                      created:
                        type: string
                        description: Unix timestamp of direct file creation.
                        example: "1504201616"
                      modified:
                        type: string
                        description: Unix timestamp of direct file modification.
                        example: "1504201780"
              - title: Notification
                properties:
                  id:
                    type: integer
                    format: int32
                    example: 1
                  type:
                    type: string
                    example: notification
                  attributes:
                    type: object
                    properties:
                      userId:
                        type: string
                        description: ID of the user that the notification belongs
                          to.
                        example: "2"
                      type:
                        type: string
                        description: Notification type.
                        example: folder
                        enum:
                        - file
                        - folder
                        - shared_folder
                        - send_receipt
                        - share_receipt
                        - file_drop
                      path:
                        type: string
                        description: Path to the item that the notification is set
                          on.
                        example: /examplefolder
                      name:
                        type: string
                        description: Name of the item that the notification is set
                          on.
                        example: examplefolder
                      action:
                        type: string
                        description: Action that triggers notification.
                        example: all
                        enum:
                        - upload
                        - download
                        - delete
                        - all
                      usernames:
                        type: array
                        description: Detail on which users can trigger the notification.
                        example:
                        - notice_user_all
                        items:
                          type: string
                      recipients:
                        type: array
                        description: Notification recipients.
                        items:
                          title: NotificartionRecipient
                          type: object
                          properties:
                            id:
                              type: integer
                              description: ID of the recipient.
                              format: int32
                              example: 2
                            notificationId:
                              type: string
                              description: ID of the notification that the recipient
                                belongs to.
                              example: "23"
                            email:
                              type: string
                              description: Recipient email.
                              example: exampleuser@exavault.com
                            created:
                              type: string
                              description: Timestamp of adding notification recipient.
                              format: ISO 8601
                              example: '{}'
                            modified:
                              type: string
                              description: Timestamp of notification recipient modification.
                              format: ISO 8601
                              example: '{}'
                      recipientEmails:
                        type: array
                        description: Email addresses of all recipients.
                        example:
                        - recipient@gmail.com
                        items:
                          type: string
                          format: email
                      sendEmail:
                        type: string
                        description: Send email when the notification is triggered.
                        example: "1"
                        enum:
                        - "0"
                        - "1"
                      readableDescription:
                        type: string
                        description: Human readable description of the notification.
                        example: anybody changes, downloads or deletes '/examplefile.jpg'
                      readableDescriptionWithoutPath:
                        type: string
                        description: Human readable description of the notification
                          without item path.
                        example: anybody changes or downloads this file
                      shareId:
                        type: string
                        description: ID of the share that the notification belogns
                          to.
                      message:
                        type: string
                        description: Custom message that will be sent to the notification
                          recipients.
                      created:
                        type: string
                        description: Timestamp of notifiction creation.
                        format: ISO 8601
                        example: '{}'
                      modified:
                        type: string
                        description: Timestamp of notification modification.
                        format: ISO 8601
                        example: '{}'
                description: Object containing notification properties.
              - title: Resource
                properties:
                  id:
                    type: integer
                    format: int32
                    example: 1
                  type:
                    type: string
                    example: resource
                  attributes:
                    type: object
                    properties:
                      hash:
                        type: string
                        description: Unique hash of the resource.
                        example: ec4aa9a91be282666a165899a14f29b1
                      name:
                        type: string
                        description: Resource name, e.g. the name of the file or folder.
                        example: examplefolder
                      extension:
                        type: string
                        description: Resource extension. Property exists only if resource
                          `type` is file.
                        example: .zip
                      type:
                        type: string
                        description: Type of the resource.
                        enum:
                        - file
                        - folder
                        - dir
                      createdBy:
                        type: string
                        description: Username of the creator.
                        example: exampleuser
                      uploadDate:
                        type: string
                        description: Timestamp of resource upload.
                        format: ISO 8601
                        example: '{}'
                      createdAt:
                        type: string
                        description: Timestamp of resource creation.
                        format: ISO 8601
                        example: '{}'
                      updatedAt:
                        type: string
                        description: Timestamp of resource modification.
                        format: ISO 8601
                        example: '{}'
                      accessedAt:
                        type: string
                        description: Timestamp of the time when resource was accessed.
                        format: ISO 8601
                        example: '{}'
                      parent:
                        type: string
                        description: Parent path of the resource.
                        example: /
                      path:
                        type: string
                        description: Full path to the resource.
                        example: /examplefolder
                      fileCount:
                        type: integer
                        description: Count of files in resource. Property exists only
                          if resource `type` is folder.
                        format: int32
                        example: 0
                      size:
                        type: integer
                        description: Resource size.
                        format: int64
                        example: 0
                      previewable:
                        type: boolean
                        description: Can resource be previewed. Property equals `null`
                          if resource `type` is folder.
                        example: true
                        enum:
                        - true
                        - false
                        - null
                description: All properties of the resource.
                discriminator:
                  propertyName: type
    inline_response_200_14:
      type: object
      properties:
        responseStatus:
          type: integer
          description: 'Http status code of the response. '
        data:
          $ref: '#/components/schemas/inline_response_200_14_data'
      example:
        data:
          meta:
            id: id
          id: id
          type: type
        responseStatus: 0
    body_9:
      type: object
      properties:
        newName:
          type: string
          description: The new name for the resource (file or folder).
          example: my-renamed-file.txt
    Resource response object:
      title: Resource response object
      type: object
      properties:
        responseStatus:
          type: integer
          description: Http status code of the response.
          example: 200
        data:
          $ref: '#/components/schemas/ResourceResponse'
      example:
        data:
          relationships:
            notification:
              id: 2
              type: notification
            parentResource:
              id: 2
              type: resource
            ownerUser:
              id: 0
              type: type
            directFile:
              id: 2
              type: directFile
            share:
              id: 2345
              type: share
            ownerAccount:
              id: 6
              type: type
          attributes:
            updatedTime: updatedTime
            extension: .zip
            accessedAt: '{}'
            type: file
            fileCount: 0
            previewable: true
            accessedTime: accessedTime
            createdAt: '{}'
            path: /examplefolder
            uploadDate: '{}'
            size: 0
            createdBy: exampleuser
            name: examplefolder
            createdTime: createdTime
            hash: ec4aa9a91be282666a165899a14f29b1
            updatedAt: '{}'
          id: 1
          type: resource
        responseStatus: 200
    inline_response_200_15:
      type: object
      allOf:
      - properties:
          responseStatus:
            type: integer
            example: 200
          totalResults:
            type: integer
            example: 2
          returnedResults:
            type: integer
            example: 2
          data:
            $ref: '#/components/schemas/ResourceResponse'
      - properties:
          included:
            type: array
            items:
              type: object
              anyOf:
              - title: Share
                properties:
                  id:
                    type: integer
                    description: ID of the share.
                    format: int32
                    example: 655621
                  type:
                    type: string
                    example: share
                    enum:
                    - share
                  attributes:
                    type: object
                    properties:
                      name:
                        type: string
                        description: Share name.
                        example: Example Folder
                      hasPassword:
                        type: boolean
                        description: True if the share has password.
                        example: false
                        enum:
                        - true
                        - false
                      public:
                        type: boolean
                        description: True if the share has a public url.
                        example: true
                        enum:
                        - true
                        - false
                      accessMode:
                        type: string
                        description: Access rights for the share.
                        example: upload
                        enum:
                        - upload
                        - download
                        - download_upload
                        - download_upload_modify_delete
                      accessDescription:
                        type: string
                        description: Description of the share access rights.
                        example: Download only
                      embed:
                        type: boolean
                        description: True if share can be embedded.
                        example: false
                      hash:
                        type: string
                        description: Share hash.
                        example: hd1e-3erufo72
                      ownerHash:
                        type: string
                        description: Share owner's hash.
                        example: hd1e-3erufo72-fsxak999
                      expiration:
                        type: string
                        description: Expiration date of the share.
                      expired:
                        type: boolean
                        description: True if the share has expired.
                        example: false
                        enum:
                        - true
                        - false
                      resent:
                        type: string
                        description: Invitations resent date. Can be `null` if resent
                          never happened.
                        format: ISO 8601
                      type:
                        type: string
                        description: Type of share.
                        example: shared_folder
                        enum:
                        - shared_folder
                        - send
                        - receive
                      requireEmail:
                        type: boolean
                        description: True if share requires email to access.
                        example: true
                      fileDropCreateFolders:
                        type: boolean
                        description: Flag to show if separate folders should be created
                          for each file upload to receive folder.
                        example: false
                        enum:
                        - true
                        - false
                      paths:
                        type: array
                        description: Path to the shared resource in your account.
                        example:
                        - /Example Folder
                        items:
                          type: string
                      recipients:
                        type: array
                        description: Array of recipients.
                        example:
                        - id: 2
                          shareId: 23
                          type: direct
                          hash: fseowxan
                          email: recipient@gmail.com
                          sent: true
                          received: false
                          created: {}
                        items:
                          title: ShareRecipient
                          type: object
                          properties:
                            id:
                              type: integer
                              description: ID of the recipient.
                              format: int32
                              example: 2
                            shareId:
                              type: string
                              description: ID of the share that the recipoient belongs
                                to.
                              example: "23"
                            type:
                              type: string
                              description: Type of the recipient.
                              example: owner
                              enum:
                              - owner
                              - direct
                            hash:
                              type: string
                              description: Share hash.
                              example: fseowxan
                            email:
                              type: string
                              description: Recipient email address.
                              example: recipient@gmail.com
                            sent:
                              type: boolean
                              description: Set to true if invite email was sent; false
                                otherwise.
                              example: true
                              enum:
                              - true
                              - false
                            received:
                              type: boolean
                              description: Set to true if recipient has accessed the
                                share. Note this is set to true when the recipient
                                clicks the link to access the share; not when they
                                download a file.
                              example: false
                              enum:
                              - true
                              - false
                            created:
                              type: string
                              description: Timestamp of adding recipient to the share.
                              format: ISO 8601
                              example: '{}'
                      messages:
                        type: array
                        description: Array of invitation messages.
                        items:
                          title: Message
                          type: object
                          properties:
                            id:
                              type: integer
                              description: Message id.
                              format: int32
                              example: 397584
                            type:
                              type: string
                              description: Resource type
                              example: message
                              enum:
                              - message
                            attributes:
                              type: object
                              properties:
                                subject:
                                  type: string
                                  description: Message subject.
                                  example: Files available for download
                                body:
                                  type: string
                                  description: Message text.
                                  example: You have files available for download.
                                created:
                                  type: string
                                  description: Timestamp of message creation.
                                  format: ISO 8601
                                  example: '{}'
                                modified:
                                  type: string
                                  description: Timestamp of message modification.
                                  format: ISO 8601
                                  example: '{}'
                      inherited:
                        type: boolean
                        description: True if share inherited from parent folder.
                        enum:
                        - true
                        - null
                      status:
                        type: integer
                        description: Share activity status. Can be active (1) or deactivated
                          (0).
                        format: int32
                        example: 1
                        enum:
                        - 0
                        - 1
                      hasNotification:
                        type: boolean
                        description: True if share has notification.
                        example: false
                        enum:
                        - true
                        - false
                      notification:
                        type: string
                        description: Notification object if share has one.
                      created:
                        type: string
                        description: Timestamp of share creation.
                        format: YYYY-mm-dd hh:mm:ss
                        example: 2017-05-03 5:49:34 pm
                      modified:
                        type: string
                        description: Timestamp of share modification. Can be `null`
                          if it wasn't modified.
                        format: YYYY-mm-dd hh:mm:ss
                  relationships:
                    type: object
                    properties:
                      messages:
                        type: array
                        description: PLACEHOLDER
                        items:
                          type: object
                          properties:
                            type:
                              type: string
                              description: PLACEHOLDER
                              example: message
                              enum:
                              - message
                            id:
                              type: integer
                              description: PLACEHOLDER
                              example: 21
                      owner:
                        type: object
                        properties:
                          type:
                            type: string
                            description: PLACEHOLDER
                            example: user
                            enum:
                            - user
                          id:
                            type: integer
                            description: PLACEHOLDER
                            example: 12345
                      resource:
                        type: object
                        properties:
                          type:
                            type: string
                            description: PLACEHOLDER
                            example: resource
                            enum:
                            - resource
                          id:
                            type: integer
                            description: PLACEHOLDER
                            example: 12345
                        description: PLACEHOLDER
                      notifications:
                        type: array
                        description: PLACEHOLDER
                        items:
                          type: object
                          properties:
                            type:
                              type: string
                              description: PLACEHOLDER
                              example: notification
                              enum:
                              - notification
                            id:
                              type: integer
                              description: PLACEHOLDER
                              example: 9
                description: Object contains share properties.
              - title: DirectFile
                properties:
                  id:
                    type: integer
                    description: ID of the direct file.
                    format: int32
                    example: 655621
                  type:
                    type: string
                    example: direct-file
                    enum:
                    - direct-file
                  attributes:
                    type: object
                    properties:
                      path:
                        type: string
                        description: Path to the folder direct file is set on.
                        example: /dfa folder
                      isEnabled:
                        type: boolean
                        description: Flag indicates if direct file is turned `on`
                          or `off`.
                        example: true
                      isIndexEnabled:
                        type: boolean
                        description: Flag indicates if folder listing is `on` or `off`.
                          If it is enabled you can see folder content in the browser.
                        example: true
                      blockUntil:
                        type: string
                        description: Timestamp of direct file block until date. Equals
                          `0000-00-00 00:00:00` when no block date is setup. Used
                          when direct file bandwidth quota limit crossed.
                        format: ISO 8601
                        example: '{}'
                      created:
                        type: string
                        description: Unix timestamp of direct file creation.
                        example: "1504201616"
                      modified:
                        type: string
                        description: Unix timestamp of direct file modification.
                        example: "1504201780"
                  relationships:
                    type: object
                    properties:
                      owner:
                        type: object
                        properties:
                          type:
                            type: string
                            example: user
                            enum:
                            - user
                          id:
                            type: integer
                            example: 37
                      resource:
                        type: object
                        properties:
                          type:
                            type: string
                            example: resource
                            enum:
                            - resource
                          id:
                            type: integer
                            example: 38
              - title: Notification
                properties:
                  id:
                    type: integer
                    format: int32
                    example: 1
                  type:
                    type: string
                    example: notification
                  attributes:
                    type: object
                    properties:
                      userId:
                        type: string
                        description: ID of the user that the notification belongs
                          to.
                        example: "2"
                      type:
                        type: string
                        description: Notification type.
                        example: folder
                        enum:
                        - file
                        - folder
                        - shared_folder
                        - send_receipt
                        - share_receipt
                        - file_drop
                      path:
                        type: string
                        description: Path to the item that the notification is set
                          on.
                        example: /examplefolder
                      name:
                        type: string
                        description: Name of the item that the notification is set
                          on.
                        example: examplefolder
                      action:
                        type: string
                        description: Action that triggers notification.
                        example: all
                        enum:
                        - upload
                        - download
                        - delete
                        - all
                      usernames:
                        type: array
                        description: Detail on which users can trigger the notification.
                        example:
                        - notice_user_all
                        items:
                          type: string
                      recipients:
                        type: array
                        description: Notification recipients.
                        items:
                          title: NotificartionRecipient
                          type: object
                          properties:
                            id:
                              type: integer
                              description: ID of the recipient.
                              format: int32
                              example: 2
                            notificationId:
                              type: string
                              description: ID of the notification that the recipient
                                belongs to.
                              example: "23"
                            email:
                              type: string
                              description: Recipient email.
                              example: exampleuser@exavault.com
                            created:
                              type: string
                              description: Timestamp of adding notification recipient.
                              format: ISO 8601
                              example: '{}'
                            modified:
                              type: string
                              description: Timestamp of notification recipient modification.
                              format: ISO 8601
                              example: '{}'
                      recipientEmails:
                        type: array
                        description: Email addresses of all recipients.
                        example:
                        - recipient@gmail.com
                        items:
                          type: string
                          format: email
                      sendEmail:
                        type: string
                        description: Send email when the notification is triggered.
                        example: "1"
                        enum:
                        - "0"
                        - "1"
                      readableDescription:
                        type: string
                        description: Human readable description of the notification.
                        example: anybody changes, downloads or deletes '/examplefile.jpg'
                      readableDescriptionWithoutPath:
                        type: string
                        description: Human readable description of the notification
                          without item path.
                        example: anybody changes or downloads this file
                      shareId:
                        type: string
                        description: ID of the share that the notification belogns
                          to.
                      message:
                        type: string
                        description: Custom message that will be sent to the notification
                          recipients.
                      created:
                        type: string
                        description: Timestamp of notifiction creation.
                        format: ISO 8601
                        example: '{}'
                      modified:
                        type: string
                        description: Timestamp of notification modification.
                        format: ISO 8601
                        example: '{}'
                  relationships:
                    type: object
                    properties:
                      node:
                        type: object
                        properties:
                          type:
                            type: string
                            example: resource
                          id:
                            type: integer
                            format: int32
                            example: 2345
                      share:
                        type: object
                        properties:
                          type:
                            type: string
                            example: share
                          id:
                            type: integer
                            format: int32
                            example: 2
                      owner:
                        type: object
                        properties:
                          type:
                            type: string
                            description: PLACEHOLDER
                            example: user
                            enum:
                            - user
                          id:
                            type: integer
                            description: PLACEHOLDER
                            example: 12345
                description: Object containing notification properties.
              - title: Resource
                properties:
                  id:
                    type: integer
                    format: int32
                    example: 1
                  type:
                    type: string
                    example: resource
                  attributes:
                    type: object
                    properties:
                      hash:
                        type: string
                        description: Unique hash of the resource.
                        example: ec4aa9a91be282666a165899a14f29b1
                      name:
                        type: string
                        description: Resource name, e.g. the name of the file or folder.
                        example: examplefolder
                      extension:
                        type: string
                        description: Resource extension. Property exists only if resource
                          `type` is file.
                        example: .zip
                      type:
                        type: string
                        description: Type of the resource.
                        enum:
                        - file
                        - folder
                        - dir
                      createdBy:
                        type: string
                        description: Username of the creator.
                        example: exampleuser
                      uploadDate:
                        type: string
                        description: Timestamp of resource upload.
                        format: ISO 8601
                        example: '{}'
                      createdAt:
                        type: string
                        description: Timestamp of resource creation.
                        format: ISO 8601
                        example: '{}'
                      updatedAt:
                        type: string
                        description: Timestamp of resource modification.
                        format: ISO 8601
                        example: '{}'
                      accessedAt:
                        type: string
                        description: Timestamp of the time when resource was accessed.
                        format: ISO 8601
                        example: '{}'
                      parent:
                        type: string
                        description: Parent path of the resource.
                        example: /
                      path:
                        type: string
                        description: Full path to the resource.
                        example: /examplefolder
                      fileCount:
                        type: integer
                        description: Count of files in resource. Property exists only
                          if resource `type` is folder.
                        format: int32
                        example: 0
                      size:
                        type: integer
                        description: Resource size.
                        format: int64
                        example: 0
                      previewable:
                        type: boolean
                        description: Can resource be previewed. Property equals `null`
                          if resource `type` is folder.
                        example: true
                        enum:
                        - true
                        - false
                        - null
                  relationships:
                    type: object
                    properties:
                      share:
                        type: object
                        properties:
                          id:
                            type: integer
                            format: int32
                            example: 2345
                          type:
                            type: string
                            example: share
                      notification:
                        type: object
                        properties:
                          id:
                            type: integer
                            format: int32
                            example: 2
                          type:
                            type: string
                            example: notification
                      directFile:
                        type: object
                        properties:
                          id:
                            type: integer
                            format: int32
                            example: 2
                          type:
                            type: string
                            example: directFile
                      parentNode:
                        type: object
                        properties:
                          id:
                            type: integer
                            format: int32
                            example: 2
                          type:
                            type: string
                            example: resource
                description: All properties of the resource.
                discriminator:
                  propertyName: type
    body_10:
      required:
      - folderName
      - path
      type: object
      properties:
        folderName:
          type: string
          description: Name of the folder to create.
          example: newFolder
        path:
          type: string
          description: Where to create the folder. Use **/** to create a folder in
            the user's home directory.
          example: /
    Resource response object_1:
      title: Resource response object
      type: object
      properties:
        responseStatus:
          type: integer
          description: 'status code of the response. '
          example: 200
        data:
          $ref: '#/components/schemas/ResourceResponse'
      example:
        data:
          relationships:
            notification:
              id: 2
              type: notification
            parentResource:
              id: 2
              type: resource
            ownerUser:
              id: 0
              type: type
            directFile:
              id: 2
              type: directFile
            share:
              id: 2345
              type: share
            ownerAccount:
              id: 6
              type: type
          attributes:
            updatedTime: updatedTime
            extension: .zip
            accessedAt: '{}'
            type: file
            fileCount: 0
            previewable: true
            accessedTime: accessedTime
            createdAt: '{}'
            path: /examplefolder
            uploadDate: '{}'
            size: 0
            createdBy: exampleuser
            name: examplefolder
            createdTime: createdTime
            hash: ec4aa9a91be282666a165899a14f29b1
            updatedAt: '{}'
          id: 1
          type: resource
        responseStatus: 200
    Resource delete multi response object:
      title: Resource delete multi response object
      type: object
      properties:
        responses:
          type: array
          items:
            allOf:
            - title: Resource delete response object
              type: object
              properties:
                responseStatus:
                  type: integer
                  example: 200
                data:
                  type: object
                  properties:
                    id:
                      type: integer
                      format: int32
                      example: 1
                    type:
                      type: string
                      example: resource
                    meta:
                      type: object
                      description: Meta object containing non-standard meta-information
                        about the delete operation.
                      example: <PLACEHOLDER_META_OBJECT>
              description: PLACEHOLDER
            - type: object
              properties:
                responseStatus:
                  type: integer
                  example: 404
                errors:
                  type: array
                  items:
                    title: Error
                    type: object
                    properties:
                      code:
                        type: string
                        description: Specific internal error string.
                        example: <PLACEHOLDER_ERROR_CODE>
                      title:
                        type: string
                        description: Human readable summary of the problem.
                        example: <PLACEHOLDER_TITLE>
                      detail:
                        type: string
                        description: human-readable explanation specific to this occurrence
                          of the problem.
                        example: <PLACEHOLDER_DETAIL>
                      meta:
                        type: object
                        description: Meta object containing non-standard meta-information
                          about the error.
                        example: <PLACEHOLDER_META_OBJECT>
      description: PLACEHOLDER
    inline_response_200_16:
      type: object
      allOf:
      - title: Resource response object
        properties:
          responseStatus:
            type: integer
            description: Https status code of the response.
            example: 200
          data:
            type: array
            items:
              $ref: '#/components/schemas/ResourceResponse'
      - properties:
          included:
            type: array
            items:
              type: object
              anyOf:
              - title: Share
                properties:
                  id:
                    type: integer
                    description: ID of the share.
                    format: int32
                    example: 655621
                  type:
                    type: string
                    example: share
                    enum:
                    - share
                  attributes:
                    type: object
                    properties:
                      name:
                        type: string
                        description: Share name.
                        example: Example Folder
                      hasPassword:
                        type: boolean
                        description: True if the share has password.
                        example: false
                        enum:
                        - true
                        - false
                      public:
                        type: boolean
                        description: True if the share has a public url.
                        example: true
                        enum:
                        - true
                        - false
                      accessMode:
                        type: string
                        description: Access rights for the share.
                        example: upload
                        enum:
                        - upload
                        - download
                        - download_upload
                        - download_upload_modify_delete
                      accessDescription:
                        type: string
                        description: Description of the share access rights.
                        example: Download only
                      embed:
                        type: boolean
                        description: True if share can be embedded.
                        example: false
                      hash:
                        type: string
                        description: Share hash.
                        example: hd1e-3erufo72
                      ownerHash:
                        type: string
                        description: Share owner's hash.
                        example: hd1e-3erufo72-fsxak999
                      expiration:
                        type: string
                        description: Expiration date of the share.
                      expired:
                        type: boolean
                        description: True if the share has expired.
                        example: false
                        enum:
                        - true
                        - false
                      resent:
                        type: string
                        description: Invitations resent date. Can be `null` if resent
                          never happened.
                        format: ISO 8601
                      type:
                        type: string
                        description: Type of share.
                        example: shared_folder
                        enum:
                        - shared_folder
                        - send
                        - receive
                      requireEmail:
                        type: boolean
                        description: True if share requires email to access.
                        example: true
                      fileDropCreateFolders:
                        type: boolean
                        description: Flag to show if separate folders should be created
                          for each file upload to receive folder.
                        example: false
                        enum:
                        - true
                        - false
                      paths:
                        type: array
                        description: Path to the shared resource in your account.
                        example:
                        - /Example Folder
                        items:
                          type: string
                      recipients:
                        type: array
                        description: Array of recipients.
                        example:
                        - id: 2
                          shareId: 23
                          type: direct
                          hash: fseowxan
                          email: recipient@gmail.com
                          sent: true
                          received: false
                          created: {}
                        items:
                          title: ShareRecipient
                          type: object
                          properties:
                            id:
                              type: integer
                              description: ID of the recipient.
                              format: int32
                              example: 2
                            shareId:
                              type: string
                              description: ID of the share that the recipoient belongs
                                to.
                              example: "23"
                            type:
                              type: string
                              description: Type of the recipient.
                              example: owner
                              enum:
                              - owner
                              - direct
                            hash:
                              type: string
                              description: Share hash.
                              example: fseowxan
                            email:
                              type: string
                              description: Recipient email address.
                              example: recipient@gmail.com
                            sent:
                              type: boolean
                              description: Set to true if invite email was sent; false
                                otherwise.
                              example: true
                              enum:
                              - true
                              - false
                            received:
                              type: boolean
                              description: Set to true if recipient has accessed the
                                share. Note this is set to true when the recipient
                                clicks the link to access the share; not when they
                                download a file.
                              example: false
                              enum:
                              - true
                              - false
                            created:
                              type: string
                              description: Timestamp of adding recipient to the share.
                              format: ISO 8601
                              example: '{}'
                      messages:
                        type: array
                        description: Array of invitation messages.
                        items:
                          title: Message
                          type: object
                          properties:
                            id:
                              type: integer
                              description: Message id.
                              format: int32
                              example: 397584
                            type:
                              type: string
                              description: Resource type
                              example: message
                              enum:
                              - message
                            attributes:
                              type: object
                              properties:
                                subject:
                                  type: string
                                  description: Message subject.
                                  example: Files available for download
                                body:
                                  type: string
                                  description: Message text.
                                  example: You have files available for download.
                                created:
                                  type: string
                                  description: Timestamp of message creation.
                                  format: ISO 8601
                                  example: '{}'
                                modified:
                                  type: string
                                  description: Timestamp of message modification.
                                  format: ISO 8601
                                  example: '{}'
                      inherited:
                        type: boolean
                        description: True if share inherited from parent folder.
                        enum:
                        - true
                        - null
                      status:
                        type: integer
                        description: Share activity status. Can be active (1) or deactivated
                          (0).
                        format: int32
                        example: 1
                        enum:
                        - 0
                        - 1
                      hasNotification:
                        type: boolean
                        description: True if share has notification.
                        example: false
                        enum:
                        - true
                        - false
                      notification:
                        type: string
                        description: Notification object if share has one.
                      created:
                        type: string
                        description: Timestamp of share creation.
                        format: YYYY-mm-dd hh:mm:ss
                        example: 2017-05-03 5:49:34 pm
                      modified:
                        type: string
                        description: Timestamp of share modification. Can be `null`
                          if it wasn't modified.
                        format: YYYY-mm-dd hh:mm:ss
                  relationships:
                    type: object
                    properties:
                      messages:
                        type: array
                        description: PLACEHOLDER
                        items:
                          type: object
                          properties:
                            type:
                              type: string
                              description: PLACEHOLDER
                              example: message
                              enum:
                              - message
                            id:
                              type: integer
                              description: PLACEHOLDER
                              example: 21
                      owner:
                        type: object
                        properties:
                          type:
                            type: string
                            description: PLACEHOLDER
                            example: user
                            enum:
                            - user
                          id:
                            type: integer
                            description: PLACEHOLDER
                            example: 12345
                      resource:
                        type: object
                        properties:
                          type:
                            type: string
                            description: PLACEHOLDER
                            example: resource
                            enum:
                            - resource
                          id:
                            type: integer
                            description: PLACEHOLDER
                            example: 12345
                        description: PLACEHOLDER
                      notifications:
                        type: array
                        description: PLACEHOLDER
                        items:
                          type: object
                          properties:
                            type:
                              type: string
                              description: PLACEHOLDER
                              example: notification
                              enum:
                              - notification
                            id:
                              type: integer
                              description: PLACEHOLDER
                              example: 9
                description: Object contains share properties.
              - title: DirectFile
                properties:
                  id:
                    type: integer
                    description: ID of the direct file.
                    format: int32
                    example: 655621
                  type:
                    type: string
                    example: direct-file
                    enum:
                    - direct-file
                  attributes:
                    type: object
                    properties:
                      path:
                        type: string
                        description: Path to the folder direct file is set on.
                        example: /dfa folder
                      isEnabled:
                        type: boolean
                        description: Flag indicates if direct file is turned `on`
                          or `off`.
                        example: true
                      isIndexEnabled:
                        type: boolean
                        description: Flag indicates if folder listing is `on` or `off`.
                          If it is enabled you can see folder content in the browser.
                        example: true
                      blockUntil:
                        type: string
                        description: Timestamp of direct file block until date. Equals
                          `0000-00-00 00:00:00` when no block date is setup. Used
                          when direct file bandwidth quota limit crossed.
                        format: ISO 8601
                        example: '{}'
                      created:
                        type: string
                        description: Unix timestamp of direct file creation.
                        example: "1504201616"
                      modified:
                        type: string
                        description: Unix timestamp of direct file modification.
                        example: "1504201780"
                  relationships:
                    type: object
                    properties:
                      owner:
                        type: object
                        properties:
                          type:
                            type: string
                            example: user
                            enum:
                            - user
                          id:
                            type: integer
                            example: 37
                      resource:
                        type: object
                        properties:
                          type:
                            type: string
                            example: resource
                            enum:
                            - resource
                          id:
                            type: integer
                            example: 38
              - title: Notification
                properties:
                  id:
                    type: integer
                    format: int32
                    example: 1
                  type:
                    type: string
                    example: notification
                  attributes:
                    type: object
                    properties:
                      userId:
                        type: string
                        description: ID of the user that the notification belongs
                          to.
                        example: "2"
                      type:
                        type: string
                        description: Notification type.
                        example: folder
                        enum:
                        - file
                        - folder
                        - shared_folder
                        - send_receipt
                        - share_receipt
                        - file_drop
                      path:
                        type: string
                        description: Path to the item that the notification is set
                          on.
                        example: /examplefolder
                      name:
                        type: string
                        description: Name of the item that the notification is set
                          on.
                        example: examplefolder
                      action:
                        type: string
                        description: Action that triggers notification.
                        example: all
                        enum:
                        - upload
                        - download
                        - delete
                        - all
                      usernames:
                        type: array
                        description: Detail on which users can trigger the notification.
                        example:
                        - notice_user_all
                        items:
                          type: string
                      recipients:
                        type: array
                        description: Notification recipients.
                        items:
                          title: NotificartionRecipient
                          type: object
                          properties:
                            id:
                              type: integer
                              description: ID of the recipient.
                              format: int32
                              example: 2
                            notificationId:
                              type: string
                              description: ID of the notification that the recipient
                                belongs to.
                              example: "23"
                            email:
                              type: string
                              description: Recipient email.
                              example: exampleuser@exavault.com
                            created:
                              type: string
                              description: Timestamp of adding notification recipient.
                              format: ISO 8601
                              example: '{}'
                            modified:
                              type: string
                              description: Timestamp of notification recipient modification.
                              format: ISO 8601
                              example: '{}'
                      recipientEmails:
                        type: array
                        description: Email addresses of all recipients.
                        example:
                        - recipient@gmail.com
                        items:
                          type: string
                          format: email
                      sendEmail:
                        type: string
                        description: Send email when the notification is triggered.
                        example: "1"
                        enum:
                        - "0"
                        - "1"
                      readableDescription:
                        type: string
                        description: Human readable description of the notification.
                        example: anybody changes, downloads or deletes '/examplefile.jpg'
                      readableDescriptionWithoutPath:
                        type: string
                        description: Human readable description of the notification
                          without item path.
                        example: anybody changes or downloads this file
                      shareId:
                        type: string
                        description: ID of the share that the notification belogns
                          to.
                      message:
                        type: string
                        description: Custom message that will be sent to the notification
                          recipients.
                      created:
                        type: string
                        description: Timestamp of notifiction creation.
                        format: ISO 8601
                        example: '{}'
                      modified:
                        type: string
                        description: Timestamp of notification modification.
                        format: ISO 8601
                        example: '{}'
                  relationships:
                    type: object
                    properties:
                      node:
                        type: object
                        properties:
                          type:
                            type: string
                            example: resource
                          id:
                            type: integer
                            format: int32
                            example: 2345
                      share:
                        type: object
                        properties:
                          type:
                            type: string
                            example: share
                          id:
                            type: integer
                            format: int32
                            example: 2
                      owner:
                        type: object
                        properties:
                          type:
                            type: string
                            description: PLACEHOLDER
                            example: user
                            enum:
                            - user
                          id:
                            type: integer
                            description: PLACEHOLDER
                            example: 12345
                description: Object containing notification properties.
              - title: Resource
                properties:
                  id:
                    type: integer
                    format: int32
                    example: 1
                  type:
                    type: string
                    example: resource
                  attributes:
                    type: object
                    properties:
                      hash:
                        type: string
                        description: Unique hash of the resource.
                        example: ec4aa9a91be282666a165899a14f29b1
                      name:
                        type: string
                        description: Resource name, e.g. the name of the file or folder.
                        example: examplefolder
                      extension:
                        type: string
                        description: Resource extension. Property exists only if resource
                          `type` is file.
                        example: .zip
                      type:
                        type: string
                        description: Type of the resource.
                        enum:
                        - file
                        - folder
                        - dir
                      createdBy:
                        type: string
                        description: Username of the creator.
                        example: exampleuser
                      uploadDate:
                        type: string
                        description: Timestamp of resource upload.
                        format: ISO 8601
                        example: '{}'
                      createdAt:
                        type: string
                        description: Timestamp of resource creation.
                        format: ISO 8601
                        example: '{}'
                      updatedAt:
                        type: string
                        description: Timestamp of resource modification.
                        format: ISO 8601
                        example: '{}'
                      accessedAt:
                        type: string
                        description: Timestamp of the time when resource was accessed.
                        format: ISO 8601
                        example: '{}'
                      parent:
                        type: string
                        description: Parent path of the resource.
                        example: /
                      path:
                        type: string
                        description: Full path to the resource.
                        example: /examplefolder
                      fileCount:
                        type: integer
                        description: Count of files in resource. Property exists only
                          if resource `type` is folder.
                        format: int32
                        example: 0
                      size:
                        type: integer
                        description: Resource size.
                        format: int64
                        example: 0
                      previewable:
                        type: boolean
                        description: Can resource be previewed. Property equals `null`
                          if resource `type` is folder.
                        example: true
                        enum:
                        - true
                        - false
                        - null
                  relationships:
                    type: object
                    properties:
                      share:
                        type: object
                        properties:
                          id:
                            type: integer
                            format: int32
                            example: 2345
                          type:
                            type: string
                            example: share
                      notification:
                        type: object
                        properties:
                          id:
                            type: integer
                            format: int32
                            example: 2
                          type:
                            type: string
                            example: notification
                      directFile:
                        type: object
                        properties:
                          id:
                            type: integer
                            format: int32
                            example: 2
                          type:
                            type: string
                            example: directFile
                      parentNode:
                        type: object
                        properties:
                          id:
                            type: integer
                            format: int32
                            example: 2
                          type:
                            type: string
                            example: resource
                description: All properties of the resource.
                discriminator:
                  propertyName: type
    inline_response_201_2:
      type: object
      allOf:
      - title: Resource response object
        properties:
          responseStatus:
            type: integer
            description: Http status code of the response.
            example: 200
          data:
            $ref: '#/components/schemas/ResourceResponse'
      - properties:
          included:
            type: array
            items:
              type: object
              anyOf:
              - title: Share
                properties:
                  id:
                    type: integer
                    description: ID of the share.
                    format: int32
                    example: 655621
                  type:
                    type: string
                    example: share
                    enum:
                    - share
                  attributes:
                    type: object
                    properties:
                      name:
                        type: string
                        description: Share name.
                        example: Example Folder
                      hasPassword:
                        type: boolean
                        description: True if the share has password.
                        example: false
                        enum:
                        - true
                        - false
                      public:
                        type: boolean
                        description: True if the share has a public url.
                        example: true
                        enum:
                        - true
                        - false
                      accessMode:
                        type: string
                        description: Access rights for the share.
                        example: upload
                        enum:
                        - upload
                        - download
                        - download_upload
                        - download_upload_modify_delete
                      accessDescription:
                        type: string
                        description: Description of the share access rights.
                        example: Download only
                      embed:
                        type: boolean
                        description: True if share can be embedded.
                        example: false
                      hash:
                        type: string
                        description: Share hash.
                        example: hd1e-3erufo72
                      ownerHash:
                        type: string
                        description: Share owner's hash.
                        example: hd1e-3erufo72-fsxak999
                      expiration:
                        type: string
                        description: Expiration date of the share.
                      expired:
                        type: boolean
                        description: True if the share has expired.
                        example: false
                        enum:
                        - true
                        - false
                      resent:
                        type: string
                        description: Invitations resent date. Can be `null` if resent
                          never happened.
                        format: ISO 8601
                      type:
                        type: string
                        description: Type of share.
                        example: shared_folder
                        enum:
                        - shared_folder
                        - send
                        - receive
                      requireEmail:
                        type: boolean
                        description: True if share requires email to access.
                        example: true
                      fileDropCreateFolders:
                        type: boolean
                        description: Flag to show if separate folders should be created
                          for each file upload to receive folder.
                        example: false
                        enum:
                        - true
                        - false
                      paths:
                        type: array
                        description: Path to the shared resource in your account.
                        example:
                        - /Example Folder
                        items:
                          type: string
                      recipients:
                        type: array
                        description: Array of recipients.
                        example:
                        - id: 2
                          shareId: 23
                          type: direct
                          hash: fseowxan
                          email: recipient@gmail.com
                          sent: true
                          received: false
                          created: {}
                        items:
                          title: ShareRecipient
                          type: object
                          properties:
                            id:
                              type: integer
                              description: ID of the recipient.
                              format: int32
                              example: 2
                            shareId:
                              type: string
                              description: ID of the share that the recipoient belongs
                                to.
                              example: "23"
                            type:
                              type: string
                              description: Type of the recipient.
                              example: owner
                              enum:
                              - owner
                              - direct
                            hash:
                              type: string
                              description: Share hash.
                              example: fseowxan
                            email:
                              type: string
                              description: Recipient email address.
                              example: recipient@gmail.com
                            sent:
                              type: boolean
                              description: Set to true if invite email was sent; false
                                otherwise.
                              example: true
                              enum:
                              - true
                              - false
                            received:
                              type: boolean
                              description: Set to true if recipient has accessed the
                                share. Note this is set to true when the recipient
                                clicks the link to access the share; not when they
                                download a file.
                              example: false
                              enum:
                              - true
                              - false
                            created:
                              type: string
                              description: Timestamp of adding recipient to the share.
                              format: ISO 8601
                              example: '{}'
                      messages:
                        type: array
                        description: Array of invitation messages.
                        items:
                          title: Message
                          type: object
                          properties:
                            id:
                              type: integer
                              description: Message id.
                              format: int32
                              example: 397584
                            type:
                              type: string
                              description: Resource type
                              example: message
                              enum:
                              - message
                            attributes:
                              type: object
                              properties:
                                subject:
                                  type: string
                                  description: Message subject.
                                  example: Files available for download
                                body:
                                  type: string
                                  description: Message text.
                                  example: You have files available for download.
                                created:
                                  type: string
                                  description: Timestamp of message creation.
                                  format: ISO 8601
                                  example: '{}'
                                modified:
                                  type: string
                                  description: Timestamp of message modification.
                                  format: ISO 8601
                                  example: '{}'
                      inherited:
                        type: boolean
                        description: True if share inherited from parent folder.
                        enum:
                        - true
                        - null
                      status:
                        type: integer
                        description: Share activity status. Can be active (1) or deactivated
                          (0).
                        format: int32
                        example: 1
                        enum:
                        - 0
                        - 1
                      hasNotification:
                        type: boolean
                        description: True if share has notification.
                        example: false
                        enum:
                        - true
                        - false
                      notification:
                        type: string
                        description: Notification object if share has one.
                      created:
                        type: string
                        description: Timestamp of share creation.
                        format: YYYY-mm-dd hh:mm:ss
                        example: 2017-05-03 5:49:34 pm
                      modified:
                        type: string
                        description: Timestamp of share modification. Can be `null`
                          if it wasn't modified.
                        format: YYYY-mm-dd hh:mm:ss
                  relationships:
                    type: object
                    properties:
                      messages:
                        type: array
                        description: PLACEHOLDER
                        items:
                          type: object
                          properties:
                            type:
                              type: string
                              description: PLACEHOLDER
                              example: message
                              enum:
                              - message
                            id:
                              type: integer
                              description: PLACEHOLDER
                              example: 21
                      owner:
                        type: object
                        properties:
                          type:
                            type: string
                            description: PLACEHOLDER
                            example: user
                            enum:
                            - user
                          id:
                            type: integer
                            description: PLACEHOLDER
                            example: 12345
                      resource:
                        type: object
                        properties:
                          type:
                            type: string
                            description: PLACEHOLDER
                            example: resource
                            enum:
                            - resource
                          id:
                            type: integer
                            description: PLACEHOLDER
                            example: 12345
                        description: PLACEHOLDER
                      notifications:
                        type: array
                        description: PLACEHOLDER
                        items:
                          type: object
                          properties:
                            type:
                              type: string
                              description: PLACEHOLDER
                              example: notification
                              enum:
                              - notification
                            id:
                              type: integer
                              description: PLACEHOLDER
                              example: 9
                description: Object contains share properties.
              - title: DirectFile
                properties:
                  id:
                    type: integer
                    description: ID of the direct file.
                    format: int32
                    example: 655621
                  type:
                    type: string
                    example: direct-file
                    enum:
                    - direct-file
                  attributes:
                    type: object
                    properties:
                      path:
                        type: string
                        description: Path to the folder direct file is set on.
                        example: /dfa folder
                      isEnabled:
                        type: boolean
                        description: Flag indicates if direct file is turned `on`
                          or `off`.
                        example: true
                      isIndexEnabled:
                        type: boolean
                        description: Flag indicates if folder listing is `on` or `off`.
                          If it is enabled you can see folder content in the browser.
                        example: true
                      blockUntil:
                        type: string
                        description: Timestamp of direct file block until date. Equals
                          `0000-00-00 00:00:00` when no block date is setup. Used
                          when direct file bandwidth quota limit crossed.
                        format: ISO 8601
                        example: '{}'
                      created:
                        type: string
                        description: Unix timestamp of direct file creation.
                        example: "1504201616"
                      modified:
                        type: string
                        description: Unix timestamp of direct file modification.
                        example: "1504201780"
                  relationships:
                    type: object
                    properties:
                      owner:
                        type: object
                        properties:
                          type:
                            type: string
                            example: user
                            enum:
                            - user
                          id:
                            type: integer
                            example: 37
                      resource:
                        type: object
                        properties:
                          type:
                            type: string
                            example: resource
                            enum:
                            - resource
                          id:
                            type: integer
                            example: 38
              - title: Notification
                properties:
                  id:
                    type: integer
                    format: int32
                    example: 1
                  type:
                    type: string
                    example: notification
                  attributes:
                    type: object
                    properties:
                      userId:
                        type: string
                        description: ID of the user that the notification belongs
                          to.
                        example: "2"
                      type:
                        type: string
                        description: Notification type.
                        example: folder
                        enum:
                        - file
                        - folder
                        - shared_folder
                        - send_receipt
                        - share_receipt
                        - file_drop
                      path:
                        type: string
                        description: Path to the item that the notification is set
                          on.
                        example: /examplefolder
                      name:
                        type: string
                        description: Name of the item that the notification is set
                          on.
                        example: examplefolder
                      action:
                        type: string
                        description: Action that triggers notification.
                        example: all
                        enum:
                        - upload
                        - download
                        - delete
                        - all
                      usernames:
                        type: array
                        description: Detail on which users can trigger the notification.
                        example:
                        - notice_user_all
                        items:
                          type: string
                      recipients:
                        type: array
                        description: Notification recipients.
                        items:
                          title: NotificartionRecipient
                          type: object
                          properties:
                            id:
                              type: integer
                              description: ID of the recipient.
                              format: int32
                              example: 2
                            notificationId:
                              type: string
                              description: ID of the notification that the recipient
                                belongs to.
                              example: "23"
                            email:
                              type: string
                              description: Recipient email.
                              example: exampleuser@exavault.com
                            created:
                              type: string
                              description: Timestamp of adding notification recipient.
                              format: ISO 8601
                              example: '{}'
                            modified:
                              type: string
                              description: Timestamp of notification recipient modification.
                              format: ISO 8601
                              example: '{}'
                      recipientEmails:
                        type: array
                        description: Email addresses of all recipients.
                        example:
                        - recipient@gmail.com
                        items:
                          type: string
                          format: email
                      sendEmail:
                        type: string
                        description: Send email when the notification is triggered.
                        example: "1"
                        enum:
                        - "0"
                        - "1"
                      readableDescription:
                        type: string
                        description: Human readable description of the notification.
                        example: anybody changes, downloads or deletes '/examplefile.jpg'
                      readableDescriptionWithoutPath:
                        type: string
                        description: Human readable description of the notification
                          without item path.
                        example: anybody changes or downloads this file
                      shareId:
                        type: string
                        description: ID of the share that the notification belogns
                          to.
                      message:
                        type: string
                        description: Custom message that will be sent to the notification
                          recipients.
                      created:
                        type: string
                        description: Timestamp of notifiction creation.
                        format: ISO 8601
                        example: '{}'
                      modified:
                        type: string
                        description: Timestamp of notification modification.
                        format: ISO 8601
                        example: '{}'
                  relationships:
                    type: object
                    properties:
                      node:
                        type: object
                        properties:
                          type:
                            type: string
                            example: resource
                          id:
                            type: integer
                            format: int32
                            example: 2345
                      share:
                        type: object
                        properties:
                          type:
                            type: string
                            example: share
                          id:
                            type: integer
                            format: int32
                            example: 2
                      owner:
                        type: object
                        properties:
                          type:
                            type: string
                            description: PLACEHOLDER
                            example: user
                            enum:
                            - user
                          id:
                            type: integer
                            description: PLACEHOLDER
                            example: 12345
                description: Object containing notification properties.
              - title: Resource
                properties:
                  id:
                    type: integer
                    format: int32
                    example: 1
                  type:
                    type: string
                    example: resource
                  attributes:
                    type: object
                    properties:
                      hash:
                        type: string
                        description: Unique hash of the resource.
                        example: ec4aa9a91be282666a165899a14f29b1
                      name:
                        type: string
                        description: Resource name, e.g. the name of the file or folder.
                        example: examplefolder
                      extension:
                        type: string
                        description: Resource extension. Property exists only if resource
                          `type` is file.
                        example: .zip
                      type:
                        type: string
                        description: Type of the resource.
                        enum:
                        - file
                        - folder
                        - dir
                      createdBy:
                        type: string
                        description: Username of the creator.
                        example: exampleuser
                      uploadDate:
                        type: string
                        description: Timestamp of resource upload.
                        format: ISO 8601
                        example: '{}'
                      createdAt:
                        type: string
                        description: Timestamp of resource creation.
                        format: ISO 8601
                        example: '{}'
                      updatedAt:
                        type: string
                        description: Timestamp of resource modification.
                        format: ISO 8601
                        example: '{}'
                      accessedAt:
                        type: string
                        description: Timestamp of the time when resource was accessed.
                        format: ISO 8601
                        example: '{}'
                      parent:
                        type: string
                        description: Parent path of the resource.
                        example: /
                      path:
                        type: string
                        description: Full path to the resource.
                        example: /examplefolder
                      fileCount:
                        type: integer
                        description: Count of files in resource. Property exists only
                          if resource `type` is folder.
                        format: int32
                        example: 0
                      size:
                        type: integer
                        description: Resource size.
                        format: int64
                        example: 0
                      previewable:
                        type: boolean
                        description: Can resource be previewed. Property equals `null`
                          if resource `type` is folder.
                        example: true
                        enum:
                        - true
                        - false
                        - null
                  relationships:
                    type: object
                    properties:
                      share:
                        type: object
                        properties:
                          id:
                            type: integer
                            format: int32
                            example: 2345
                          type:
                            type: string
                            example: share
                      notification:
                        type: object
                        properties:
                          id:
                            type: integer
                            format: int32
                            example: 2
                          type:
                            type: string
                            example: notification
                      directFile:
                        type: object
                        properties:
                          id:
                            type: integer
                            format: int32
                            example: 2
                          type:
                            type: string
                            example: directFile
                      parentNode:
                        type: object
                        properties:
                          id:
                            type: integer
                            format: int32
                            example: 2
                          type:
                            type: string
                            example: resource
                description: All properties of the resource.
                discriminator:
                  propertyName: type
    inline_response_201_3:
      type: object
      properties:
        responseStatus:
          type: integer
          description: Http status code for the response.
        returnedResults:
          type: integer
          description: 'Count of results returned in the call. '
        data:
          $ref: '#/components/schemas/ResourceResponse'
      example:
        returnedResults: 6
        data:
          relationships:
            notification:
              id: 2
              type: notification
            parentResource:
              id: 2
              type: resource
            ownerUser:
              id: 0
              type: type
            directFile:
              id: 2
              type: directFile
            share:
              id: 2345
              type: share
            ownerAccount:
              id: 6
              type: type
          attributes:
            updatedTime: updatedTime
            extension: .zip
            accessedAt: '{}'
            type: file
            fileCount: 0
            previewable: true
            accessedTime: accessedTime
            createdAt: '{}'
            path: /examplefolder
            uploadDate: '{}'
            size: 0
            createdBy: exampleuser
            name: examplefolder
            createdTime: createdTime
            hash: ec4aa9a91be282666a165899a14f29b1
            updatedAt: '{}'
          id: 1
          type: resource
        responseStatus: 0
    inline_response_200_17:
      type: object
      allOf:
      - properties:
          responseStatus:
            type: integer
            description: 'Http status code of the response. '
            example: 200
          data:
            $ref: '#/components/schemas/ResourceResponse'
      - properties:
          meta:
            $ref: '#/components/schemas/inline_response_200_17_meta'
    Resource multi response object:
      title: Resource multi response object
      type: object
      properties:
        responses:
          type: array
          items:
            allOf:
            - allOf:
              - type: object
                properties:
                  responseStatus:
                    type: integer
                    example: 200
                  totalResults:
                    type: integer
                    example: 2
                  returnedResults:
                    type: integer
                    example: 2
                  data:
                    type: array
                    items:
                      title: Resource
                      type: object
                      properties:
                        id:
                          type: integer
                          format: int32
                          example: 1
                        type:
                          type: string
                          example: resource
                        attributes:
                          type: object
                          properties:
                            hash:
                              type: string
                              description: Unique hash of the resource.
                              example: ec4aa9a91be282666a165899a14f29b1
                            name:
                              type: string
                              description: Resource name, e.g. the name of the file
                                or folder.
                              example: examplefolder
                            extension:
                              type: string
                              description: Resource extension. Property exists only
                                if resource `type` is file.
                              example: .zip
                            type:
                              type: string
                              description: Type of the resource.
                              enum:
                              - file
                              - folder
                              - dir
                            createdBy:
                              type: string
                              description: Username of the creator.
                              example: exampleuser
                            uploadDate:
                              type: string
                              description: Timestamp of resource upload.
                              format: ISO 8601
                              example: '{}'
                            createdAt:
                              type: string
                              description: Timestamp of resource creation.
                              format: ISO 8601
                              example: '{}'
                            updatedAt:
                              type: string
                              description: Timestamp of resource modification.
                              format: ISO 8601
                              example: '{}'
                            accessedAt:
                              type: string
                              description: Timestamp of the time when resource was
                                accessed.
                              format: ISO 8601
                              example: '{}'
                            parent:
                              type: string
                              description: Parent path of the resource.
                              example: /
                            path:
                              type: string
                              description: Full path to the resource.
                              example: /examplefolder
                            fileCount:
                              type: integer
                              description: Count of files in resource. Property exists
                                only if resource `type` is folder.
                              format: int32
                              example: 0
                            size:
                              type: integer
                              description: Resource size.
                              format: int64
                              example: 0
                            previewable:
                              type: boolean
                              description: Can resource be previewed. Property equals
                                `null` if resource `type` is folder.
                              example: true
                              enum:
                              - true
                              - false
                              - null
                        relationships:
                          type: object
                          properties:
                            share:
                              type: object
                              properties:
                                id:
                                  type: integer
                                  format: int32
                                  example: 2345
                                type:
                                  type: string
                                  example: share
                            notification:
                              type: object
                              properties:
                                id:
                                  type: integer
                                  format: int32
                                  example: 2
                                type:
                                  type: string
                                  example: notification
                            directFile:
                              type: object
                              properties:
                                id:
                                  type: integer
                                  format: int32
                                  example: 2
                                type:
                                  type: string
                                  example: directFile
                            parentNode:
                              type: object
                              properties:
                                id:
                                  type: integer
                                  format: int32
                                  example: 2
                                type:
                                  type: string
                                  example: resource
                      description: All properties of the resource.
                      discriminator:
                        propertyName: type
              - type: object
                properties:
                  meta:
                    type: object
                    properties:
                      originalId:
                        type: integer
                        example: 35
                      resourcePath:
                        type: string
                        example: /file_two
                      destination:
                        type: string
                        example: /test_api\/file_two
            - type: object
              properties:
                responseStatus:
                  type: integer
                  example: 404
                errors:
                  type: array
                  items:
                    title: Error
                    type: object
                    properties:
                      code:
                        type: string
                        description: Specific internal error string.
                        example: <PLACEHOLDER_ERROR_CODE>
                      title:
                        type: string
                        description: Human readable summary of the problem.
                        example: <PLACEHOLDER_TITLE>
                      detail:
                        type: string
                        description: human-readable explanation specific to this occurrence
                          of the problem.
                        example: <PLACEHOLDER_DETAIL>
                      meta:
                        type: object
                        description: Meta object containing non-standard meta-information
                          about the error.
                        example: <PLACEHOLDER_META_OBJECT>
      description: PLACEHOLDER
    body_11:
      required:
      - parentResource
      - resrouces
      type: object
      properties:
        resrouces:
          type: array
          description: Array containing file/folder paths to move.
          example:
          - /testone.jpg
          - /folder
          items:
            type: string
        parentResource:
          type: string
          description: Remote destination path to move files/folders to.
          example: /copyhere
    inline_response_200_18:
      type: object
      allOf:
      - properties:
          responseStatus:
            type: integer
            description: Http status code of the response.
            example: 200
          totalResults:
            type: integer
            description: 'Total count of results found. '
            example: 2
          returnedResults:
            type: integer
            description: 'Count of returned results. '
            example: 2
          data:
            type: array
            items:
              $ref: '#/components/schemas/ResourceResponse'
      - properties:
          meta:
            $ref: '#/components/schemas/inline_response_200_18_meta'
    PreivewFile response object:
      title: PreivewFile response object
      type: object
      properties:
        responseStatus:
          type: integer
          description: HTTP Status Code
          example: 200
        data:
          $ref: '#/components/schemas/PreviewFile_2'
      description: PLACEHOLDER
      example:
        data:
          attributes:
            image: iVBORw0KGgoAAAANSUhEUgAAACIAAAAoCAYAAACb3CikAAAABGdBTUEAALGPC
            pageCount: 10
            imageId: 6afaa3ef4056dc602ccfc69ab52d6f40
            size: 2186
          id: 1
          type: preview
        responseStatus: 200
    body_12:
      type: object
      properties:
        file:
          type: string
          format: binary
    Download with polling response object:
      title: Download with polling response object
      type: object
      properties:
        responseStatus:
          type: integer
          example: 202
        data:
          $ref: '#/components/schemas/DownloadPolling_1'
      description: PLACEHOLDER
    inline_response_200_19:
      type: object
      allOf:
      - title: Account details visible to public
        properties:
          responseStatus:
            type: integer
            description: Http status code of the response.
            example: 200
          data:
            $ref: '#/components/schemas/AccountPublicResponse'
        description: Limited account info
    account_allowedIpRanges:
      type: object
      properties:
        ip_start:
          type: string
          format: ipv4
        ip_end:
          type: string
          format: ipv4
    CallbackSettings_1:
      type: object
      properties:
        endpointUrl:
          type: string
          format: uri
    BrandingSettings_1:
      type: object
      properties:
        companyName:
          type: string
          description: PLACEHOLDER
        customEmail:
          type: string
          description: PLACEHOLDER
          format: email
          example: custom@example.com
        theme:
          type: string
          description: PLACEHOLDER
          example: default
          default: default
    body_13:
      type: object
      properties:
        quotaNoticeEnabled:
          type: boolean
          description: Whether the system should email the account owner when usage
            exceeds quotaNoticeThreshold value
          example: false
        quotaNoticeThreshold:
          multipleOf: 10
          maximum: 100
          minimum: 70
          type: integer
          description: Percent of account usage to trigger quota notices for.
          example: 90
        secureOnly:
          type: boolean
          description: Whether unencrypted FTP connections should be denied for the
            account.
          example: false
        complexPasswords:
          type: boolean
          description: Whether to require complex passwords for all passwords.
          example: false
        showReferralLinks:
          type: boolean
          description: Whether to display links for others to sign up on share views
            and invitation emails
          example: false
        externalDomain:
          type: array
          description: Custom address used for web file manager. Not available for
            all account types.
          items: {}
        emailContent:
          type: string
          description: Content of welcome email template.
          example: 'Great news, your new account is ready! For your records, we''ve
            listed information you''ll use to log in below: FTP Server: [[ftpserver]]
            Username (Web and FTP access): [[username]] [[setpassword]]'
        emailSubject:
          type: string
          description: Subject line for welcome emails
          example: ExaVault File Sharing Account
        allowedIpRanges:
          type: array
          description: IP Address Ranges for restricting account access
          items:
            $ref: '#/components/schemas/account_allowedIpRanges'
        callbackSettings:
          $ref: '#/components/schemas/CallbackSettings_1'
        brandingSettings:
          $ref: '#/components/schemas/BrandingSettings_1'
        accountOnboarding:
          type: boolean
          description: PLACEHOLDER
          example: true
        customSignature:
          type: string
          description: PLACEHOLDER
    inline_response_201_4:
      type: object
      properties:
        responseStatus:
          type: integer
          description: Http status code of the response.
          example: 200
        data:
          type: array
          items:
            type: object
      example:
        data:
        - {}
        - {}
        responseStatus: 200
    body_14:
      required:
      - emails
      - message
      type: object
      properties:
        emails:
          type: array
          items:
            type: string
            format: email
        message:
          type: string
          example: PLACEHOLDER
    inline_response_200_20:
      type: object
      oneOf:
      - properties:
          responseStatus:
            type: integer
            description: Http status code of the response.
            example: 200
          totalResults:
            type: integer
            description: Total count of results found.
            example: 2
          returnedResults:
            type: integer
            description: 'Count of returned results. '
            example: 2
          data:
            type: array
            items:
              $ref: '#/components/schemas/ShareResponse'
      - title: Regular share response
        properties:
          responseStatus:
            type: integer
            example: 200
          totalResults:
            type: integer
            description: Total count of results found.
          returnedResults:
            type: integer
            description: 'Count of returned results. '
          data:
            type: array
            items:
              $ref: '#/components/schemas/ShareExtendedResponse'
        description: PLACEHOLDER
    body_15:
      required:
      - accessMode
      - filePaths
      - name
      - type
      type: object
      properties:
        type:
          type: string
          description: The type of share to create. See above for a description of
            each.
          example: shared_folder
          enum:
          - shared_folder
          - receive
          - send
        name:
          type: string
          description: Name of the share.
          example: Shared Folder
        filePaths:
          type: array
          description: Array of strings containing the file paths to share.
          example:
          - /testfolder
          items:
            type: string
        accessMode:
          type: array
          description: Type of permissions share recipients have.
          example:
          - download
          - upload
          items:
            type: string
            enum:
            - upload
            - download
            - download_upload
            - download_upload_modify_delete
          enum:
          - download
          - upload
          - modify
          - delete
        ccEmail:
          type: string
          description: Array of strings for CC email recipients (for email invitations).
          format: email
          example: notify@example.com
        embed:
          type: boolean
          description: Allows user to embed a widget with the share.
          example: false
        expiration:
          type: string
          description: Expiration date for the share
          format: ISO 8601
          example: '{}'
        hasNotification:
          type: boolean
          description: 'True if notifications are set up for the share. '
          example: false
        isPublic:
          type: boolean
          description: 'True if a public link is available. '
          example: true
        message:
          type: string
        notificationEmails:
          type: array
          description: Emails that will recevie notificiations.
          example:
          - notify@example.com
          - notify2@example.com
          items:
            type: string
            format: email
        password:
          type: string
          description: 'Set a password for recipients to access the share. '
        requireEmail:
          type: boolean
          description: 'True if recipients must provide their email to access the
            share. '
          example: false
        subject:
          type: string
          example: Invitation to a shared folder
        fileDropCreateFolders:
          type: boolean
          description: 'True if files uploaded should create new folders. '
          example: false
    Regular share response:
      title: Regular share response
      type: object
      properties:
        responseStatus:
          type: integer
          description: Http status code of the response.
          example: 200
        data:
          type: array
          items:
            $ref: '#/components/schemas/ShareResponse'
      example:
        data:
        - relationships:
            owner:
              id: 12345
              type: type
            messages:
            - id: 21
              type: message
            - id: 21
              type: message
            resources:
              id: 12345
              type: resource
            notifications:
            - id: 9
              type: notification
            - id: 9
              type: notification
          attributes:
            formId: 0
            ownerHash: hd1e-3erufo72-fsxak999
            resent: resent
            created: 2017-05-03 5:49:34 pm
            hasPassword: false
            hasNotification: false
            accessMode: upload
            type: shared_folder
            accessDescription: Download only
            fileDropCreateFolders: false
            expired: false
            public: true
            requireEmail: true
            paths:
            - /Example Folder
            recipients:
            - id: 2
              shareId: 23
              type: direct
              hash: fseowxan
              email: recipient@gmail.com
              sent: true
              received: false
              created: {}
            inherited: true
            name: Example Folder
            messages:
            - attributes:
                subject: Files available for download
                created: '{}'
                modified: '{}'
                body: You have files available for download.
              id: 397584
              type: message
            - attributes:
                subject: Files available for download
                created: '{}'
                modified: '{}'
                body: You have files available for download.
              id: 397584
              type: message
            modified: modified
            expiration: expiration
            embed: false
            trackingStatus: complete
            hash: hd1e-3erufo72
            status: 1
          id: 655621
          type: share
        - relationships:
            owner:
              id: 12345
              type: type
            messages:
            - id: 21
              type: message
            - id: 21
              type: message
            resources:
              id: 12345
              type: resource
            notifications:
            - id: 9
              type: notification
            - id: 9
              type: notification
          attributes:
            formId: 0
            ownerHash: hd1e-3erufo72-fsxak999
            resent: resent
            created: 2017-05-03 5:49:34 pm
            hasPassword: false
            hasNotification: false
            accessMode: upload
            type: shared_folder
            accessDescription: Download only
            fileDropCreateFolders: false
            expired: false
            public: true
            requireEmail: true
            paths:
            - /Example Folder
            recipients:
            - id: 2
              shareId: 23
              type: direct
              hash: fseowxan
              email: recipient@gmail.com
              sent: true
              received: false
              created: {}
            inherited: true
            name: Example Folder
            messages:
            - attributes:
                subject: Files available for download
                created: '{}'
                modified: '{}'
                body: You have files available for download.
              id: 397584
              type: message
            - attributes:
                subject: Files available for download
                created: '{}'
                modified: '{}'
                body: You have files available for download.
              id: 397584
              type: message
            modified: modified
            expiration: expiration
            embed: false
            trackingStatus: complete
            hash: hd1e-3erufo72
            status: 1
          id: 655621
          type: share
        responseStatus: 200
    inline_response_200_21:
      type: object
      oneOf:
      - title: Regular share response
        properties:
          responseStatus:
            type: integer
            description: Http status code of the response.
            example: 200
          data:
            $ref: '#/components/schemas/ShareResponse'
        description: PLACEHOLDER
      - title: Share response with relationships
        properties:
          responseStatus:
            type: integer
            example: 200
          data:
            $ref: '#/components/schemas/ShareExtendedResponse'
        description: PLACEHOLDER
    body_16:
      type: object
      properties:
        type:
          type: string
          description: The type of share to create. See above for a description of
            each.
          example: shared_folder
          enum:
          - directSend
          - shared_folder
          - receive
        name:
          type: string
          description: Name of the share.
          example: Shared Folder
        filePaths:
          type: array
          description: Array of strings containing the file paths to share.
          example:
          - /testfolder
          items:
            type: string
        accessMode:
          type: array
          example:
          - download
          - upload
          items:
            type: string
          enum:
          - download
          - upload
          - modify
          - delete
        ccEmail:
          type: string
          format: email
          example: notify@example.com
        embed:
          type: boolean
          example: false
        expiration:
          type: string
          format: ISO 8601
          example: '{}'
        hasNotification:
          type: boolean
          example: false
        isPublic:
          type: boolean
          example: true
        message:
          type: string
        notificationEmails:
          type: array
          example:
          - notify@example.com
          - notify2@example.com
          items:
            type: string
            format: email
        password:
          type: string
        requireEmail:
          type: boolean
          example: false
        subject:
          type: string
          example: Invitation to a shared folder
        fileDropCreateFolders:
          type: boolean
          example: false
    Regular share response_1:
      title: Regular share response
      type: object
      properties:
        responseStatus:
          type: integer
          description: 'Http status code of the response. '
          example: 200
        data:
          $ref: '#/components/schemas/ShareResponse'
      example:
        data:
          relationships:
            owner:
              id: 12345
              type: type
            messages:
            - id: 21
              type: message
            - id: 21
              type: message
            resources:
              id: 12345
              type: resource
            notifications:
            - id: 9
              type: notification
            - id: 9
              type: notification
          attributes:
            formId: 0
            ownerHash: hd1e-3erufo72-fsxak999
            resent: resent
            created: 2017-05-03 5:49:34 pm
            hasPassword: false
            hasNotification: false
            accessMode: upload
            type: shared_folder
            accessDescription: Download only
            fileDropCreateFolders: false
            expired: false
            public: true
            requireEmail: true
            paths:
            - /Example Folder
            recipients:
            - id: 2
              shareId: 23
              type: direct
              hash: fseowxan
              email: recipient@gmail.com
              sent: true
              received: false
              created: {}
            inherited: true
            name: Example Folder
            messages:
            - attributes:
                subject: Files available for download
                created: '{}'
                modified: '{}'
                body: You have files available for download.
              id: 397584
              type: message
            - attributes:
                subject: Files available for download
                created: '{}'
                modified: '{}'
                body: You have files available for download.
              id: 397584
              type: message
            modified: modified
            expiration: expiration
            embed: false
            trackingStatus: complete
            hash: hd1e-3erufo72
            status: 1
          id: 655621
          type: share
        responseStatus: 200
    Regular share response_2:
      title: Regular share response
      type: object
      properties:
        responseStatus:
          type: integer
          example: 200
        data:
          $ref: '#/components/schemas/ShareResponse'
      description: PLACEHOLDER
      example:
        data:
          relationships:
            owner:
              id: 12345
              type: type
            messages:
            - id: 21
              type: message
            - id: 21
              type: message
            resources:
              id: 12345
              type: resource
            notifications:
            - id: 9
              type: notification
            - id: 9
              type: notification
          attributes:
            formId: 0
            ownerHash: hd1e-3erufo72-fsxak999
            resent: resent
            created: 2017-05-03 5:49:34 pm
            hasPassword: false
            hasNotification: false
            accessMode: upload
            type: shared_folder
            accessDescription: Download only
            fileDropCreateFolders: false
            expired: false
            public: true
            requireEmail: true
            paths:
            - /Example Folder
            recipients:
            - id: 2
              shareId: 23
              type: direct
              hash: fseowxan
              email: recipient@gmail.com
              sent: true
              received: false
              created: {}
            inherited: true
            name: Example Folder
            messages:
            - attributes:
                subject: Files available for download
                created: '{}'
                modified: '{}'
                body: You have files available for download.
              id: 397584
              type: message
            - attributes:
                subject: Files available for download
                created: '{}'
                modified: '{}'
                body: You have files available for download.
              id: 397584
              type: message
            modified: modified
            expiration: expiration
            embed: false
            trackingStatus: complete
            hash: hd1e-3erufo72
            status: 1
          id: 655621
          type: share
        responseStatus: 200
    inline_response_200_22:
      type: object
      properties:
        responseStatus:
          type: integer
          description: Http status code of the response
          example: 200
        data:
          type: array
          description: 'All email addresses that have recevied a share. '
          example:
          - recipient@example.com
          - recipient2@example.com
          items:
            type: string
            format: email
      example:
        data:
        - recipient@example.com
        - recipient2@example.com
        responseStatus: 200
    inline_response_200_23:
      type: object
      properties:
        responseStatus:
          type: integer
          description: Http status code of the response.
          example: 200
      example:
        responseStatus: 200
    inline_response_201_5:
      type: object
      properties:
        responseStatus:
          type: integer
          description: Http status code of the response.
          example: 200
        data:
          $ref: '#/components/schemas/inline_response_201_5_data'
      example:
        data:
          recipients:
          - recipient@example.com
          - recipient2@example.com
        responseStatus: 200
    NotificartionRecipient:
      type: object
      properties:
        id:
          type: integer
          description: ID of the recipient.
          format: int32
          example: 2
        notificationId:
          type: string
          description: ID of the notification that the recipient belongs to.
          example: "23"
        email:
          type: string
          description: Recipient email.
          example: exampleuser@exavault.com
        created:
          type: string
          description: Timestamp of adding notification recipient.
          format: ISO 8601
          example: '{}'
        modified:
          type: string
          description: Timestamp of notification recipient modification.
          format: ISO 8601
          example: '{}'
      example:
        created: '{}'
        modified: '{}'
        notificationId: "23"
        id: 2
        email: exampleuser@exavault.com
    NotificationCollectionExtendedResponse_attributes:
      type: object
      properties:
        userId:
          type: string
          description: ID of the user that the notification belongs to.
          example: "2"
        type:
          type: string
          description: Notification type.
          example: folder
          enum:
          - file
          - folder
          - shared_folder
          - send_receipt
          - share_receipt
          - file_drop
        path:
          type: string
          description: Path to the item that the notification is set on.
          example: /examplefolder
        name:
          type: string
          description: Name of the item that the notification is set on.
          example: examplefolder
        action:
          type: string
          description: Action that triggers notification.
          example: all
          enum:
          - upload
          - download
          - delete
          - all
        usernames:
          type: array
          description: Detail on which users can trigger the notification.
          example:
          - notice_user_all
          items:
            type: string
        recipients:
          type: array
          description: Notification recipients.
          items:
            $ref: '#/components/schemas/NotificartionRecipient'
        recipientEmails:
          type: array
          description: Email addresses of all recipients.
          example:
          - recipient@gmail.com
          items:
            type: string
            format: email
        sendEmail:
          type: string
          description: Send email when the notification is triggered.
          example: "1"
          enum:
          - "0"
          - "1"
        readableDescription:
          type: string
          description: Human readable description of the notification.
          example: anybody changes, downloads or deletes '/examplefile.jpg'
        readableDescriptionWithoutPath:
          type: string
          description: Human readable description of the notification without item
            path.
          example: anybody changes or downloads this file
        shareId:
          type: string
          description: ID of the share that the notification belogns to.
        message:
          type: string
          description: Custom message that will be sent to the notification recipients.
        created:
          type: string
          description: Timestamp of notifiction creation.
          format: ISO 8601
          example: '{}'
        modified:
          type: string
          description: Timestamp of notification modification.
          format: ISO 8601
          example: '{}'
    NotificationCollectionExtendedResponse_relationships_node:
      type: object
      properties:
        type:
          type: string
          example: resource
        id:
          type: integer
          format: int32
          example: 2345
    NotificationCollectionExtendedResponse_relationships_share:
      type: object
      properties:
        type:
          type: string
          example: share
        id:
          type: integer
          format: int32
          example: 2
    NotificationCollectionExtendedResponse_relationships_owner:
      type: object
      properties:
        type:
          type: string
          description: PLACEHOLDER
          example: user
          enum:
          - user
        id:
          type: integer
          description: PLACEHOLDER
          example: 12345
    NotificationCollectionExtendedResponse_relationships:
      type: object
      properties:
        node:
          $ref: '#/components/schemas/NotificationCollectionExtendedResponse_relationships_node'
        share:
          $ref: '#/components/schemas/NotificationCollectionExtendedResponse_relationships_share'
        owner:
          $ref: '#/components/schemas/NotificationCollectionExtendedResponse_relationships_owner'
    Notification_1:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        type:
          type: string
          example: notification
        attributes:
          $ref: '#/components/schemas/NotificationCollectionExtendedResponse_attributes'
        relationships:
          $ref: '#/components/schemas/NotificationCollectionExtendedResponse_relationships'
      description: Object containing notification properties.
    NotificationResponse_attributes:
      type: object
      properties:
        userId:
          type: string
          description: ID of the user that the notification belongs to.
          example: "2"
        type:
          type: string
          description: 'Type of the resoucre the notification is attached to. '
          example: folder
          enum:
          - file
          - folder
          - shared_folder
          - send_receipt
          - share_receipt
          - file_drop
        path:
          type: string
          description: Path to the item that the notification is set on.
          example: /examplefolder
        name:
          type: string
          description: Name of the item that the notification is set on.
          example: examplefolder
        action:
          type: string
          description: Action that triggers notification.
          example: all
          enum:
          - upload
          - download
          - delete
          - all
        usernames:
          type: array
          description: Detail on which users can trigger the notification.
          example:
          - notice_user_all
          items:
            type: string
        recipients:
          type: array
          description: Notification recipients.
          items:
            $ref: '#/components/schemas/NotificartionRecipient'
        recipientEmails:
          type: array
          description: Email addresses of all recipients.
          example:
          - recipient@gmail.com
          items:
            type: string
            format: email
        sendEmail:
          type: string
          description: Whether or not an email will send when the notification is
            triggered.
          example: "1"
          enum:
          - "0"
          - "1"
        readableDescription:
          type: string
          description: Human readable description of the notification.
          example: anybody changes, downloads or deletes '/examplefile.jpg'
        readableDescriptionWithoutPath:
          type: string
          description: Human readable description of the notification without item
            path.
          example: anybody changes or downloads this file
        shareId:
          type: string
          description: ID of the share that the notification belogns to.
        message:
          type: string
          description: Custom message that will be sent to the notification recipients.
        created:
          type: string
          description: Timestamp of notifiction creation.
          format: ISO 8601
          example: '{}'
        modified:
          type: string
          description: Timestamp of notification modification.
          format: ISO 8601
          example: '{}'
      example:
        readableDescription: anybody changes, downloads or deletes '/examplefile.jpg'
        readableDescriptionWithoutPath: anybody changes or downloads this file
        created: '{}'
        shareId: shareId
        type: folder
        message: message
        userId: "2"
        path: /examplefolder
        sendEmail: "1"
        recipients:
        - created: '{}'
          modified: '{}'
          notificationId: "23"
          id: 2
          email: exampleuser@exavault.com
        - created: '{}'
          modified: '{}'
          notificationId: "23"
          id: 2
          email: exampleuser@exavault.com
        name: examplefolder
        action: all
        modified: '{}'
        usernames:
        - notice_user_all
        recipientEmails:
        - recipient@gmail.com
    NotificationResponse_relationships_resource:
      type: object
      properties:
        type:
          type: string
          description: 'Type is resource. '
          example: resource
        id:
          type: integer
          description: ID of the resource.
          format: int32
          example: 2345
      example:
        id: 2345
        type: resource
    NotificationResponse_relationships_share:
      type: object
      properties:
        type:
          type: string
          description: 'Type is share. '
          example: share
        id:
          type: integer
          description: 'ID of the share. '
          format: int32
          example: 2
      example:
        id: 2
        type: share
    NotificationResponse_relationships_ownerUser:
      type: object
      properties:
        type:
          type: string
          description: 'Type is user. '
          example: user
          enum:
          - user
        id:
          type: integer
          description: ID of the user that owns the notification.
          example: 12345
      example:
        id: 12345
        type: user
    NotificationResponse_relationships:
      type: object
      properties:
        resource:
          $ref: '#/components/schemas/NotificationResponse_relationships_resource'
        share:
          $ref: '#/components/schemas/NotificationResponse_relationships_share'
        ownerUser:
          $ref: '#/components/schemas/NotificationResponse_relationships_ownerUser'
      example:
        ownerUser:
          id: 12345
          type: user
        resource:
          id: 2345
          type: resource
        share:
          id: 2
          type: share
    UserCollectionExtendedResponse_attributes_permissions:
      type: object
      properties:
        download:
          type: boolean
          description: Download permission flag.
          example: true
        upload:
          type: boolean
          description: Upload permission flag.
          example: true
        modify:
          type: boolean
          description: Modify permission flag.
          example: true
        delete:
          type: boolean
          description: Delete permission flag.
          example: true
        list:
          type: boolean
          description: View files permission flag.
          example: true
        changePassword:
          type: boolean
          description: Change permission flag.
          example: true
        share:
          type: boolean
          description: Share folders permission flag.
          example: true
        notification:
          type: boolean
          description: Create notifications permission flag.
          example: true
        viewFormData:
          type: boolean
          description: Access Form Data permission flag. If `true`, user can view
            submissions that have been stored for a receive folder. This includes
            any data submitted in the receive folder form.
          example: true
        deleteFormData:
          description: Delete form data permission flag. If `true`, user can remove
            data that was submitted for a receive folder. This applies only to data
            submitted in the receive folder form, not the actual files uploaded.
      example:
        modify: true
        notification: true
        download: true
        viewFormData: true
        upload: true
        share: true
        list: true
        delete: true
        changePassword: true
        deleteFormData: ""
    UserCollectionExtendedResponse_attributes:
      type: object
      properties:
        status:
          type: integer
          description: Indicates user activity status. `0` means the user is locked
            and cannot log in. `1` means the user is active and can log in.
          format: int32
          example: 1
          enum:
          - 0
          - 1
        expiration:
          type: string
          description: Timestamp of user expiration.
          format: ISO 8601
        created:
          type: string
          description: Timestamp of user creation.
          format: ISO 8601
          example: '{}'
        modified:
          type: string
          description: Timestamp of user modification.
          format: ISO 8601
          example: '{}'
        accessTimestamp:
          type: string
          description: Timestamp of most recent successful user login.
          format: ISO 8601
          example: '{}'
        accountId:
          type: integer
          description: Internal ID of the account this user belongs to.
          format: int32
          example: 13758
        accountName:
          type: string
          description: Name of the account this user belongs to.
          example: exampleuser
        username:
          type: string
          description: Username of the user.
          example: exampleuser
        nickname:
          type: string
          description: Nickname of the user.
          example: exampleuser
        email:
          type: string
          description: Email address of the user.
          example: example@exavault.mail
        homeDir:
          type: string
          description: Path to the user's home folder.
          example: /
        permissions:
          $ref: '#/components/schemas/UserCollectionExtendedResponse_attributes_permissions'
        role:
          type: string
          description: User's role.
          example: user
          enum:
          - user
          - admin
          - master
        timeZone:
          type: string
          description: User's timezone. See <a href='https://php.net/manual/en/timezones.php'
            target='blank'>this page</a> for allowed values.
          example: America/Chicago
        onboarding:
          type: boolean
          description: Whether the onboarding help system is enabled for this user.
            `true` means that additional help popups are displayed in the web application
            for this user.
          example: false
        firstLogin:
          type: boolean
          description: Whether this is the first time the user has logged into the
            system.
          example: false
    UserCollectionExtendedResponse_relationships_account:
      type: object
      properties:
        type:
          type: string
          example: account
        id:
          type: integer
          format: int32
          example: 2
    UserCollectionExtendedResponse_relationships:
      type: object
      properties:
        homeDir:
          $ref: '#/components/schemas/NotificationCollectionExtendedResponse_relationships_node'
        account:
          $ref: '#/components/schemas/UserCollectionExtendedResponse_relationships_account'
    User_1:
      type: object
      properties:
        id:
          type: integer
          description: ID of the user.
          format: int32
          example: 655621
        type:
          type: string
          example: user
        attributes:
          $ref: '#/components/schemas/UserCollectionExtendedResponse_attributes'
        relationships:
          $ref: '#/components/schemas/UserCollectionExtendedResponse_relationships'
      description: Object contains user properties.
    UserCollectionResponse_attributes:
      type: object
      properties:
        status:
          type: integer
          description: Indicates user activity status. `0` means the user is locked
            and cannot log in. `1` means the user is active and can log in.
          format: int32
          example: 1
          enum:
          - 0
          - 1
        expiration:
          type: string
          description: Timestamp of user expiration.
          format: ISO 8601
        created:
          type: string
          description: Timestamp of user creation.
          format: ISO 8601
          example: '{}'
        modified:
          type: string
          description: Timestamp of user modification.
          format: ISO 8601
          example: '{}'
        accessTimestamp:
          type: string
          description: Timestamp of most recent successful user login.
          format: ISO 8601
          example: '{}'
        accountName:
          type: string
          description: Name of the account this user belongs to.
          example: exampleuser
        username:
          type: string
          description: Username of the user.
          example: exampleuser
        nickname:
          type: string
          description: Nickname of the user.
          example: exampleuser
        email:
          type: string
          description: Email address of the user.
          example: example@exavault.mail
        homeDir:
          type: string
          description: Path to the user's home folder.
          example: /
        permissions:
          $ref: '#/components/schemas/UserCollectionExtendedResponse_attributes_permissions'
        role:
          type: string
          description: User's role.
          example: user
          enum:
          - user
          - admin
          - master
        timeZone:
          type: string
          description: User's timezone. See <a href='https://php.net/manual/en/timezones.php'
            target='blank'>this page</a> for allowed values.
          example: America/Chicago
        onboarding:
          type: boolean
          description: Whether the onboarding help system is enabled for this user.
            `true` means that additional help popups are displayed in the web application
            for this user.
          example: false
        firstLogin:
          type: boolean
          description: '`true` if the user has logged into the system.'
          example: false
    UserCollectionResponse_relationships_homeResource:
      type: object
      properties:
        type:
          type: string
          description: Type is resource.
          example: resource
        id:
          type: integer
          description: ID of home directory resource.
          format: int32
          example: 2345
    UserCollectionResponse_relationships_ownerAccount:
      type: object
      properties:
        type:
          type: string
          description: Type is account.
          example: account
        id:
          type: integer
          description: ID of the account.
          format: int32
          example: 2
    UserCollectionResponse_relationships:
      type: object
      properties:
        homeResource:
          $ref: '#/components/schemas/UserCollectionResponse_relationships_homeResource'
        ownerAccount:
          $ref: '#/components/schemas/UserCollectionResponse_relationships_ownerAccount'
    User_2:
      type: object
      properties:
        id:
          type: integer
          description: ID of the user.
          format: int32
          example: 655621
        type:
          type: string
          description: 'Type is user. '
          example: user
        attributes:
          $ref: '#/components/schemas/UserCollectionResponse_attributes'
        relationships:
          $ref: '#/components/schemas/UserCollectionResponse_relationships'
      description: Object contains user properties.
    UserResponse_attributes:
      type: object
      properties:
        status:
          type: integer
          description: Indicates user activity status. `0` means the user is locked
            and cannot log in. `1` means the user is active and can log in.
          format: int32
          example: 1
          enum:
          - 0
          - 1
        expiration:
          type: string
          description: Timestamp of user expiration.
          format: ISO 8601
        created:
          type: string
          description: Timestamp of user creation.
          format: ISO 8601
          example: '{}'
        modified:
          type: string
          description: Timestamp of user modification.
          format: ISO 8601
          example: '{}'
        accessTimestamp:
          type: string
          description: Timestamp of most recent successful user login.
          format: ISO 8601
          example: '{}'
        accountName:
          type: string
          description: Name of the account this user belongs to.
          example: exampleuser
        username:
          type: string
          description: Username of the user.
          example: exampleuser
        nickname:
          type: string
          description: Nickname of the user.
          example: exampleuser
        email:
          type: string
          description: Email address of the user.
          example: example@exavault.mail
        homeDir:
          type: string
          description: Path to the user's home folder.
          example: /
        permissions:
          $ref: '#/components/schemas/UserCollectionExtendedResponse_attributes_permissions'
        role:
          type: string
          description: User's access level.
          example: user
          enum:
          - user
          - admin
          - master
        timeZone:
          type: string
          description: User's timezone. See <a href='https://php.net/manual/en/timezones.php'
            target='blank'>this page</a> for allowed values.
          example: America/Chicago
        onboarding:
          type: boolean
          description: Whether the onboarding help system is enabled for this user.
            `true` means that additional help popups are displayed in the web application
            for this user.
          example: false
        firstLogin:
          type: boolean
          description: '`true` if the user has logged into the system.'
          example: false
      example:
        role: user
        accountName: exampleuser
        firstLogin: false
        created: '{}'
        timeZone: America/Chicago
        accessTimestamp: '{}'
        homeDir: /
        permissions:
          modify: true
          notification: true
          download: true
          viewFormData: true
          upload: true
          share: true
          list: true
          delete: true
          changePassword: true
          deleteFormData: ""
        nickname: exampleuser
        modified: '{}'
        onboarding: false
        expiration: expiration
        email: example@exavault.mail
        status: 1
        username: exampleuser
    UserResponse_relationships_homeResource:
      type: object
      properties:
        type:
          type: string
          description: ID of home directory resource.
          example: resource
        id:
          type: integer
          description: ID of the resource.
          format: int32
          example: 2345
      example:
        id: 2345
        type: resource
    UserResponse_relationships_ownerAccount:
      type: object
      properties:
        type:
          type: string
          description: Type is account.
          example: account
        id:
          type: integer
          description: 'ID of the account. '
          format: int32
          example: 2
      example:
        id: 2
        type: account
    UserResponse_relationships:
      type: object
      properties:
        homeResource:
          $ref: '#/components/schemas/UserResponse_relationships_homeResource'
        ownerAccount:
          $ref: '#/components/schemas/UserResponse_relationships_ownerAccount'
      example:
        homeResource:
          id: 2345
          type: resource
        ownerAccount:
          id: 2
          type: account
    User_attributes_permissions:
      required:
      - changePassword
      - delete
      - deleteFormData
      - download
      - list
      - modify
      - notification
      - share
      - upload
      - viewFormData
      type: object
      properties:
        download:
          type: boolean
          description: Download permission flag.
          example: true
        upload:
          type: boolean
          description: Upload permission flag.
          example: true
        modify:
          type: boolean
          description: Modify permission flag.
          example: true
        delete:
          type: boolean
          description: Delete permission flag.
          example: true
        list:
          type: boolean
          description: View files permission flag.
          example: true
        changePassword:
          type: boolean
          description: Change permission flag.
          example: true
        share:
          type: boolean
          description: Share folders permission flag.
          example: true
        notification:
          type: boolean
          description: Create notifications permission flag.
          example: true
        viewFormData:
          type: boolean
          description: Access Form Data permission flag. If `true`, user can view
            submissions that have been stored for a receive folder. This includes
            any data submitted in the receive folder form.
          example: true
        deleteFormData:
          type: boolean
          description: Delete form data permission flag. If `true`, user can remove
            data that was submitted for a receive folder. This applies only to data
            submitted in the receive folder form, not the actual files uploaded.
    User_attributes:
      required:
      - accountName
      - created
      - homeDir
      - modified
      - nickname
      - onboarding
      - permissions
      - role
      - status
      - timeZone
      - username
      type: object
      properties:
        status:
          type: integer
          description: Indicates user activity status. `0` means the user is locked
            and cannot log in. `1` means the user is active and can log in.
          format: int32
          example: 1
          enum:
          - 0
          - 1
        expiration:
          description: Timestamp of user expiration.
          format: date-time
          example: {}
        created:
          type: string
          description: Timestamp of user creation.
          format: date-time
        modified:
          type: string
          description: Timestamp of user modification.
          format: ISO 8601
          example: '{}'
        accessTimestamp:
          description: Timestamp of most recent successful user login.
          format: ISO 8601
          example: {}
        accountName:
          type: string
          description: Name of the account this user belongs to.
          example: exampleaccount
        username:
          type: string
          description: Username of the user.
          example: exampleuser
        nickname:
          type: string
          description: Nickname of the user.
          example: exampleuser
        email:
          description: Email address of the user.
          example: example@exavault.mail
        homeDir:
          type: string
          description: Path to the user's home folder.
          example: /
        permissions:
          $ref: '#/components/schemas/User_attributes_permissions'
        role:
          type: string
          description: User's access level
          example: user
          enum:
          - user
          - admin
          - master
        timeZone:
          type: string
          description: User's timezone. See <a href='https://php.net/manual/en/timezones.php'
            target='blank'>this page</a> for allowed values.
          example: America/Chicago
        onboarding:
          type: boolean
          description: Whether the onboarding help system is enabled for this user.
            `true` means that additional help popups are displayed in the web application
            for this user.
          example: false
        firstLogin:
          description: '`true` if the user has logged into the system.'
          example: false
      description: User information
    User_relationships_homeResource_data:
      type: object
      properties:
        type:
          type: string
          description: Type is resource.
          example: resource
          enum:
          - resource
        id:
          type: integer
          description: ID of home directory resource.
          format: int32
    User_relationships_homeResource:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/User_relationships_homeResource_data'
    User_relationships_ownerAccount_data:
      required:
      - id
      - type
      type: object
      properties:
        type:
          type: string
          description: Type is account.
          example: account
          enum:
          - account
        id:
          type: integer
          description: ID of the account.
          format: int32
    User_relationships_ownerAccount:
      required:
      - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/User_relationships_ownerAccount_data'
    User_relationships:
      required:
      - ownerAccount
      type: object
      properties:
        homeResource:
          $ref: '#/components/schemas/User_relationships_homeResource'
        ownerAccount:
          $ref: '#/components/schemas/User_relationships_ownerAccount'
    AvailableUser_1:
      type: object
      properties:
        available:
          type: boolean
          description: '`true` if username is available.'
          example: true
          enum:
          - true
          - false
      description: Object contains infromation about username availability.
    ResourceCollectionExtendedResponse_attributes:
      type: object
      properties:
        hash:
          type: string
          description: Unique hash of the resource.
          example: ec4aa9a91be282666a165899a14f29b1
        name:
          type: string
          description: Resource name, e.g. the name of the file or folder.
          example: examplefolder
        extension:
          type: string
          description: Resource extension. Property exists only if resource `type`
            is file.
          example: .zip
        type:
          type: string
          description: Type of the resource.
          enum:
          - file
          - folder
          - dir
        createdBy:
          type: string
          description: Username of the creator.
          example: exampleuser
        uploadDate:
          type: string
          description: Timestamp of resource upload.
          format: ISO 8601
          example: '{}'
        createdAt:
          type: string
          description: Timestamp of resource creation.
          format: ISO 8601
          example: '{}'
        updatedAt:
          type: string
          description: Timestamp of resource modification.
          format: ISO 8601
          example: '{}'
        accessedAt:
          type: string
          description: Timestamp of the time when resource was accessed.
          format: ISO 8601
          example: '{}'
        parent:
          type: string
          description: Parent path of the resource.
          example: /
        path:
          type: string
          description: Full path to the resource.
          example: /examplefolder
        fileCount:
          type: integer
          description: Count of files in resource. Property exists only if resource
            `type` is folder.
          format: int32
          example: 0
        size:
          type: integer
          description: Resource size.
          format: int64
          example: 0
        previewable:
          type: boolean
          description: Can resource be previewed. Property equals `null` if resource
            `type` is folder.
          example: true
          enum:
          - true
          - false
          - null
    ResourceCollectionExtendedResponse_relationships_share:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 2345
        type:
          type: string
          example: share
    ResourceCollectionExtendedResponse_relationships_notification:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 2
        type:
          type: string
          example: notification
    ResourceCollectionExtendedResponse_relationships_directFile:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 2
        type:
          type: string
          example: directFile
    ResourceCollectionExtendedResponse_relationships_parentNode:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 2
        type:
          type: string
          example: resource
    ResourceCollectionExtendedResponse_relationships:
      type: object
      properties:
        share:
          $ref: '#/components/schemas/ResourceCollectionExtendedResponse_relationships_share'
        notification:
          $ref: '#/components/schemas/ResourceCollectionExtendedResponse_relationships_notification'
        directFile:
          $ref: '#/components/schemas/ResourceCollectionExtendedResponse_relationships_directFile'
        parentNode:
          $ref: '#/components/schemas/ResourceCollectionExtendedResponse_relationships_parentNode'
    Resource_1:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        type:
          type: string
          example: resource
        attributes:
          $ref: '#/components/schemas/ResourceCollectionExtendedResponse_attributes'
        relationships:
          $ref: '#/components/schemas/ResourceCollectionExtendedResponse_relationships'
      description: All properties of the resource.
    ResourceCollectionMetaResponse_meta:
      type: object
      properties:
        originalId:
          type: integer
          example: 35
        resourcePath:
          type: string
          example: /file_two
        destination:
          type: string
          example: /test_api\/file_two
    Resource_2_attributes:
      type: object
      properties:
        hash:
          type: string
          description: Unique hash of the resource.
          example: ec4aa9a91be282666a165899a14f29b1
        name:
          type: string
          description: Resource name, e.g. the name of the file or folder.
          example: examplefolder
        extension:
          type: string
          description: Resource extension. Property exists only if resource `type`
            is file.
          example: .zip
        type:
          type: string
          description: Type of the resource.
          enum:
          - file
          - folder
          - dir
        createdBy:
          type: string
          description: Username of the creator.
          example: exampleuser
        uploadDate:
          type: string
          description: Timestamp of resource upload.
          format: ISO 8601
          example: '{}'
        createdAt:
          type: string
          description: Timestamp of resource creation.
          format: ISO 8601
          example: '{}'
        updatedAt:
          type: string
          description: Timestamp of resource modification.
          format: ISO 8601
          example: '{}'
        accessedAt:
          type: string
          description: Timestamp of the time when resource was accessed.
          format: ISO 8601
          example: '{}'
        path:
          type: string
          description: Full path to the resource.
          example: /examplefolder
        fileCount:
          type: integer
          description: Count of files in resource. Property exists only if resource
            `type` is folder.
          format: int32
          example: 0
        size:
          type: integer
          description: Resource size in bytes.
          format: int64
          example: 0
        previewable:
          type: boolean
          description: Can resource be previewed. Property equals `null` if resource
            `type` is folder.
          example: true
          enum:
          - true
          - false
          - null
        createdTIme:
          type: string
        updatedTIme:
          type: string
        accessTime:
          type: string
    Resource_2:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        type:
          type: string
          example: resource
        attributes:
          $ref: '#/components/schemas/Resource_2_attributes'
        relationships:
          $ref: '#/components/schemas/ResourceCollectionExtendedResponse_relationships'
      description: All properties of the resource.
    ResourceDeleteResponse_data:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        type:
          type: string
          example: resource
        meta:
          type: object
          description: Meta object containing non-standard meta-information about
            the delete operation.
          example: <PLACEHOLDER_META_OBJECT>
    ResourceResponse_attributes:
      type: object
      properties:
        hash:
          type: string
          description: Unique hash of the resource.
          example: ec4aa9a91be282666a165899a14f29b1
        name:
          type: string
          description: Resource name, e.g. the name of the file or folder.
          example: examplefolder
        extension:
          type: string
          description: Resource extension. Property exists only if resource `type`
            is file.
          example: .zip
        type:
          type: string
          description: Type of the resource.
          enum:
          - file
          - folder
          - dir
        createdBy:
          type: string
          description: Username of the creator.
          example: exampleuser
        uploadDate:
          type: string
          description: Timestamp of resource upload.
          format: ISO 8601
          example: '{}'
        createdAt:
          type: string
          description: Timestamp of resource creation.
          format: ISO 8601
          example: '{}'
        updatedAt:
          type: string
          description: Timestamp of resource modification.
          format: ISO 8601
          example: '{}'
        accessedAt:
          type: string
          description: Timestamp of the time when resource was accessed.
          format: ISO 8601
          example: '{}'
        path:
          type: string
          description: Full path to the resource.
          example: /examplefolder
        fileCount:
          type: integer
          description: Count of files in resource. Property exists only if resource
            `type` is folder.
          format: int32
          example: 0
        size:
          type: integer
          description: Resource size in bytes.
          format: int64
          example: 0
        previewable:
          type: boolean
          description: Can resource be previewed. Property equals `null` if resource
            `type` is folder.
          example: true
          enum:
          - true
          - false
          - null
        createdTime:
          type: string
        updatedTime:
          type: string
        accessedTime:
          type: string
      example:
        updatedTime: updatedTime
        extension: .zip
        accessedAt: '{}'
        type: file
        fileCount: 0
        previewable: true
        accessedTime: accessedTime
        createdAt: '{}'
        path: /examplefolder
        uploadDate: '{}'
        size: 0
        createdBy: exampleuser
        name: examplefolder
        createdTime: createdTime
        hash: ec4aa9a91be282666a165899a14f29b1
        updatedAt: '{}'
    ResourceResponse_relationships_share:
      type: object
      properties:
        id:
          type: integer
          description: ID of the share.
          format: int32
          example: 2345
        type:
          type: string
          description: Type is share.
          example: share
      example:
        id: 2345
        type: share
    ResourceResponse_relationships_notification:
      type: object
      properties:
        id:
          type: integer
          description: 'ID of the noritifcation. '
          format: int32
          example: 2
        type:
          type: string
          description: Type is notification.
          example: notification
      example:
        id: 2
        type: notification
    ResourceResponse_relationships_directFile:
      type: object
      properties:
        id:
          type: integer
          description: ID of the direct file.
          format: int32
          example: 2
        type:
          type: string
          description: Type is directFile.
          example: directFile
      example:
        id: 2
        type: directFile
    ResourceResponse_relationships_parentResource:
      type: object
      properties:
        id:
          type: integer
          description: 'ID of the parent resource. '
          format: int32
          example: 2
        type:
          type: string
          description: 'Type is resource. '
          example: resource
      example:
        id: 2
        type: resource
    ResourceResponse_relationships_ownerUser:
      type: object
      properties:
        type:
          type: string
          description: 'Type is user. '
        id:
          type: integer
          description: 'ID of the owner user. '
      example:
        id: 0
        type: type
    ResourceResponse_relationships_ownerAccount:
      type: object
      properties:
        type:
          type: string
          description: 'Type is account. '
        id:
          type: integer
          description: 'ID of the owner account. '
      example:
        id: 6
        type: type
    ResourceResponse_relationships:
      type: object
      properties:
        share:
          $ref: '#/components/schemas/ResourceResponse_relationships_share'
        notification:
          $ref: '#/components/schemas/ResourceResponse_relationships_notification'
        directFile:
          $ref: '#/components/schemas/ResourceResponse_relationships_directFile'
        parentResource:
          $ref: '#/components/schemas/ResourceResponse_relationships_parentResource'
        ownerUser:
          $ref: '#/components/schemas/ResourceResponse_relationships_ownerUser'
        ownerAccount:
          $ref: '#/components/schemas/ResourceResponse_relationships_ownerAccount'
      example:
        notification:
          id: 2
          type: notification
        parentResource:
          id: 2
          type: resource
        ownerUser:
          id: 0
          type: type
        directFile:
          id: 2
          type: directFile
        share:
          id: 2345
          type: share
        ownerAccount:
          id: 6
          type: type
    DownloadPolling_1:
      type: object
      properties:
        zip:
          type: string
          description: Name of the zip file.
          example: /zipname.zip
        percent:
          type: integer
          description: Indicates archiving process completeness.
          format: int32
          example: 70
      description: Object contains infromation about ongoing arhivation of files for
        download.
    PreviewFile_1_attributes:
      type: object
      properties:
        image:
          type: string
          description: Binary image content, base64 encoded.
          example: iVBORw0KGgoAAAANSUhEUgAAACIAAAAoCAYAAACb3CikAAAABGdBTUEAALGPC
        size:
          type: integer
          description: Size of the image in bytes.
          format: int64
          example: 2186
        imageId:
          type: string
          description: ID of the image.
          example: 6afaa3ef4056dc602ccfc69ab52d6f40
        pageCount:
          type: integer
          description: Amount of pages available in the file. Used only for multipage
            documents.
          format: int32
          example: 10
      example:
        image: iVBORw0KGgoAAAANSUhEUgAAACIAAAAoCAYAAACb3CikAAAABGdBTUEAALGPC
        pageCount: 10
        imageId: 6afaa3ef4056dc602ccfc69ab52d6f40
        size: 2186
    PreviewFile_1:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        type:
          type: string
          example: preview
        attributes:
          $ref: '#/components/schemas/PreviewFile_1_attributes'
      description: Object with preview image properties.
    CallbackSettings_triggers:
      type: object
      properties:
        upload:
          type: string
          description: Trigger callback on upload.
          example: "1"
        download:
          type: string
          description: Trigger callback on download.
          example: "0"
        delete:
          type: string
          description: Trigger callback on delete.
          example: "0"
        createFolder:
          type: string
          description: Trigger callback on fodler create.
          example: "1"
        rename:
          type: string
          description: Trigger callback on rename.
          example: "0"
        move:
          type: string
          description: Trigger callback on move.
          example: "0"
        copy:
          type: string
          description: Trigger callback on copy.
          example: "0"
        compress:
          type: string
          description: Trigger callback on compress.
          example: "0"
        extract:
          type: string
          description: Trigger callback on extract.
          example: "0"
        shareFolder:
          type: string
          description: Trigger callback on share folder create.
          example: "0"
        sendFiles:
          type: string
          description: Trigger callback on send files.
          example: "0"
        receiveFiles:
          type: string
          description: Trigger callback on receive folder create.
          example: "1"
        updateShare:
          type: string
          description: Trigger callback on share folder update.
          example: "0"
        updateReceive:
          type: string
          description: Trigger callback on receive folder update.
          example: "0"
        deleteSend:
          type: string
          description: Trigger callback on send files delete.
          example: "0"
        deleteReceive:
          type: string
          description: Trigger callback on receive folder delete.
          example: "0"
        deleteShare:
          type: string
          description: Trigger callback on share folder delete.
          example: "0"
        createNotification:
          type: string
          description: Trigger callback on notification create.
          example: "0"
        updateNotification:
          type: string
          description: Trigger callback on notification update.
          example: "1"
        deleteNotification:
          type: string
          description: Trigger callback on notification delete.
          example: "0"
        createUser:
          type: string
          description: Trigger callback on user create.
          example: "0"
        updateUser:
          type: string
          description: Trigger callback on user update.
          example: "0"
        deleteUser:
          type: string
          description: Trigger callback on user delete.
          example: "0"
        userConnect:
          type: string
          description: Trigger callback on user connect.
          example: "0"
        userDisconnect:
          type: string
          description: Trigger callback on user disconnect.
          example: "0"
    DirectFile_attributes:
      type: object
      properties:
        path:
          type: string
          description: Path to the folder direct file is set on.
          example: /dfa folder
        isEnabled:
          type: boolean
          description: Flag indicates if direct file is turned `on` or `off`.
          example: true
        isIndexEnabled:
          type: boolean
          description: Flag indicates if folder listing is `on` or `off`. If it is
            enabled you can see folder content in the browser.
          example: true
        blockUntil:
          type: string
          description: Timestamp of direct file block until date. Equals `0000-00-00
            00:00:00` when no block date is setup. Used when direct file bandwidth
            quota limit crossed.
          format: ISO 8601
          example: '{}'
        created:
          type: string
          description: Unix timestamp of direct file creation.
          example: "1504201616"
        modified:
          type: string
          description: Unix timestamp of direct file modification.
          example: "1504201780"
    DirectFile_relationships_owner:
      type: object
      properties:
        type:
          type: string
          example: user
          enum:
          - user
        id:
          type: integer
          example: 37
    DirectFile_relationships_resource:
      type: object
      properties:
        type:
          type: string
          example: resource
          enum:
          - resource
        id:
          type: integer
          example: 38
    DirectFile_relationships:
      type: object
      properties:
        owner:
          $ref: '#/components/schemas/DirectFile_relationships_owner'
        resource:
          $ref: '#/components/schemas/DirectFile_relationships_resource'
    DirectFile_1:
      type: object
      properties:
        id:
          type: integer
          description: ID of the direct file.
          format: int32
          example: 655621
        type:
          type: string
          example: direct-file
          enum:
          - direct-file
        attributes:
          $ref: '#/components/schemas/DirectFile_attributes'
        relationships:
          $ref: '#/components/schemas/DirectFile_relationships'
    DirectFile_2_attributes:
      type: object
      properties:
        path:
          type: string
          description: Path to the folder direct file is set on.
          example: /dfa folder
        isEnabled:
          type: boolean
          description: Flag indicates if direct file is turned `on` or `off`.
          example: true
        isIndexEnabled:
          type: boolean
          description: Flag indicates if folder listing is `on` or `off`. If it is
            enabled you can see folder content in the browser.
          example: true
        blockUntil:
          type: string
          description: Timestamp of direct file block until date. Equals `0000-00-00
            00:00:00` when no block date is setup. Used when direct file bandwidth
            quota limit crossed.
          format: ISO 8601
          example: '{}'
        created:
          type: string
          description: Unix timestamp of direct file creation.
          example: "1504201616"
        modified:
          type: string
          description: Unix timestamp of direct file modification.
          example: "1504201780"
        accountId:
          type: integer
          description: 'ID of the account the direct file belongs to. '
    DirectFile_2_relationships_ownerAccount:
      type: object
      properties:
        type:
          type: string
          description: Type is account.
          example: user
          enum:
          - user
        id:
          type: integer
          description: 'ID of the account the direct file belongs to. '
          example: 37
    DirectFile_2_relationships_resource:
      type: object
      properties:
        type:
          type: string
          description: 'Type is resource. '
          example: resource
          enum:
          - resource
        id:
          type: integer
          description: 'ID of the resource. '
          example: 38
    DirectFile_2_relationships:
      type: object
      properties:
        ownerAccount:
          $ref: '#/components/schemas/DirectFile_2_relationships_ownerAccount'
        resource:
          $ref: '#/components/schemas/DirectFile_2_relationships_resource'
    DirectFile_2:
      type: object
      properties:
        id:
          type: integer
          description: ID of the direct file.
          format: int32
          example: 655621
        type:
          type: string
          description: 'Type is directFile. '
          example: direct-file
          enum:
          - direct-file
        attributes:
          $ref: '#/components/schemas/DirectFile_2_attributes'
        relationships:
          $ref: '#/components/schemas/DirectFile_2_relationships'
    DirectFile_3_relationships_ownerAccount:
      type: object
      properties:
        type:
          type: string
          description: 'Type is account. '
          example: user
          enum:
          - user
        id:
          type: integer
          description: 'ID of the account the direct file belongs to. '
          example: 37
      description: 'ID of the account the direct file belongs to. '
    DirectFile_3_relationships:
      type: object
      properties:
        ownerAccount:
          $ref: '#/components/schemas/DirectFile_3_relationships_ownerAccount'
        resource:
          $ref: '#/components/schemas/DirectFile_2_relationships_resource'
    DirectFile_3:
      type: object
      properties:
        id:
          type: integer
          description: ID of the direct file.
          format: int32
          example: 655621
        type:
          type: string
          description: Type is directFile.
          example: direct-file
          enum:
          - direct-file
        attributes:
          $ref: '#/components/schemas/DirectFile_2_attributes'
        relationships:
          $ref: '#/components/schemas/DirectFile_3_relationships'
    Message_attributes:
      type: object
      properties:
        subject:
          type: string
          description: Message subject.
          example: Files available for download
        body:
          type: string
          description: Message text.
          example: You have files available for download.
        created:
          type: string
          description: Timestamp of message creation.
          format: ISO 8601
          example: '{}'
        modified:
          type: string
          description: Timestamp of message modification.
          format: ISO 8601
          example: '{}'
      example:
        subject: Files available for download
        created: '{}'
        modified: '{}'
        body: You have files available for download.
    ShareRecipient_1:
      type: object
      properties:
        id:
          type: integer
          description: ID of the recipient.
          format: int32
          example: 2
        shareId:
          type: string
          description: ID of the share that the recipoient belongs to.
          example: "23"
        type:
          type: string
          description: Type of the recipient.
          example: owner
          enum:
          - owner
          - direct
        hash:
          type: string
          description: Share hash.
          example: fseowxan
        email:
          type: string
          description: Recipient email address.
          example: recipient@gmail.com
        sent:
          type: boolean
          description: Set to true if invite email was sent; false otherwise.
          example: true
          enum:
          - true
          - false
        received:
          type: boolean
          description: Set to true if recipient has accessed the share. Note this
            is set to true when the recipient clicks the link to access the share;
            not when they download a file.
          example: false
          enum:
          - true
          - false
        created:
          type: string
          description: Timestamp of adding recipient to the share.
          format: ISO 8601
          example: '{}'
    Message_1:
      type: object
      properties:
        id:
          type: integer
          description: Message id.
          format: int32
          example: 397584
        type:
          type: string
          description: Resource type
          example: message
          enum:
          - message
        attributes:
          $ref: '#/components/schemas/Message_attributes'
      example:
        attributes:
          subject: Files available for download
          created: '{}'
          modified: '{}'
          body: You have files available for download.
        id: 397584
        type: message
    Share_attributes:
      type: object
      properties:
        name:
          type: string
          description: Share name.
          example: Example Folder
        hasPassword:
          type: boolean
          description: True if the share has password.
          example: false
          enum:
          - true
          - false
        public:
          type: boolean
          description: True if the share has a public url.
          example: true
          enum:
          - true
          - false
        accessMode:
          type: string
          description: Access rights for the share.
          example: upload
          enum:
          - upload
          - download
          - download_upload
          - download_upload_modify_delete
        accessDescription:
          type: string
          description: Description of the share access rights.
          example: Download only
        embed:
          type: boolean
          description: True if share can be embedded.
          example: false
        hash:
          type: string
          description: Share hash.
          example: hd1e-3erufo72
        ownerHash:
          type: string
          description: Share owner's hash.
          example: hd1e-3erufo72-fsxak999
        expiration:
          type: string
          description: Expiration date of the share.
        expired:
          type: boolean
          description: True if the share has expired.
          example: false
          enum:
          - true
          - false
        resent:
          type: string
          description: Invitations resent date. Can be `null` if resent never happened.
          format: ISO 8601
        type:
          type: string
          description: Type of share.
          example: shared_folder
          enum:
          - shared_folder
          - send
          - receive
        requireEmail:
          type: boolean
          description: True if share requires email to access.
          example: true
        fileDropCreateFolders:
          type: boolean
          description: Flag to show if separate folders should be created for each
            file upload to receive folder.
          example: false
          enum:
          - true
          - false
        paths:
          type: array
          description: Path to the shared resource in your account.
          example:
          - /Example Folder
          items:
            type: string
        recipients:
          type: array
          description: Array of recipients.
          example:
          - id: 2
            shareId: 23
            type: direct
            hash: fseowxan
            email: recipient@gmail.com
            sent: true
            received: false
            created: {}
          items:
            $ref: '#/components/schemas/ShareRecipient_1'
        messages:
          type: array
          description: Array of invitation messages.
          items:
            $ref: '#/components/schemas/Message_1'
        inherited:
          type: boolean
          description: True if share inherited from parent folder.
          enum:
          - true
          - null
        status:
          type: integer
          description: Share activity status. Can be active (1) or deactivated (0).
          format: int32
          example: 1
          enum:
          - 0
          - 1
        hasNotification:
          type: boolean
          description: True if share has notification.
          example: false
          enum:
          - true
          - false
        notification:
          type: string
          description: Notification object if share has one.
        created:
          type: string
          description: Timestamp of share creation.
          format: YYYY-mm-dd hh:mm:ss
          example: 2017-05-03 5:49:34 pm
        modified:
          type: string
          description: Timestamp of share modification. Can be `null` if it wasn't
            modified.
          format: YYYY-mm-dd hh:mm:ss
    Share_relationships_messages:
      type: object
      properties:
        type:
          type: string
          description: PLACEHOLDER
          example: message
          enum:
          - message
        id:
          type: integer
          description: PLACEHOLDER
          example: 21
    Share_relationships_resource:
      type: object
      properties:
        type:
          type: string
          description: PLACEHOLDER
          example: resource
          enum:
          - resource
        id:
          type: integer
          description: PLACEHOLDER
          example: 12345
      description: PLACEHOLDER
    Share_relationships_notifications:
      type: object
      properties:
        type:
          type: string
          description: PLACEHOLDER
          example: notification
          enum:
          - notification
        id:
          type: integer
          description: PLACEHOLDER
          example: 9
    Share_relationships:
      type: object
      properties:
        messages:
          type: array
          description: PLACEHOLDER
          items:
            $ref: '#/components/schemas/Share_relationships_messages'
        owner:
          $ref: '#/components/schemas/NotificationCollectionExtendedResponse_relationships_owner'
        resource:
          $ref: '#/components/schemas/Share_relationships_resource'
        notifications:
          type: array
          description: PLACEHOLDER
          items:
            $ref: '#/components/schemas/Share_relationships_notifications'
    Share_1_attributes:
      type: object
      properties:
        name:
          type: string
          description: Share name.
          example: Example Folder
        hasPassword:
          type: boolean
          description: True if the share has password.
          example: false
          enum:
          - true
          - false
        public:
          type: boolean
          description: True if the share has a public url.
          example: true
          enum:
          - true
          - false
        accessMode:
          type: string
          description: Access rights for the share.
          example: upload
          enum:
          - upload
          - download
          - download_upload
          - download_upload_modify_delete
        accessDescription:
          type: string
          description: Description of the share access rights.
          example: Download only
        embed:
          type: boolean
          description: True if share can be embedded.
          example: false
        hash:
          type: string
          description: Share hash.
          example: hd1e-3erufo72
        ownerHash:
          type: string
          description: Share owner's hash.
          example: hd1e-3erufo72-fsxak999
        expiration:
          type: string
          description: Expiration date of the share.
        expired:
          type: boolean
          description: True if the share has expired.
          example: false
          enum:
          - true
          - false
        resent:
          type: string
          description: Invitations resent date. Can be `null` if resent never happened.
          format: ISO 8601
        type:
          type: string
          description: Type of share.
          example: shared_folder
          enum:
          - shared_folder
          - send
          - receive
        requireEmail:
          type: boolean
          description: True if share requires email to access.
          example: true
        fileDropCreateFolders:
          type: boolean
          description: Flag to show if separate folders should be created for each
            file upload to receive folder.
          example: false
          enum:
          - true
          - false
        paths:
          type: array
          description: Path to the shared resource in your account.
          example:
          - /Example Folder
          items:
            type: string
        recipients:
          type: array
          description: Array of recipients.
          example:
          - id: 2
            shareId: 23
            type: direct
            hash: fseowxan
            email: recipient@gmail.com
            sent: true
            received: false
            created: {}
          items:
            $ref: '#/components/schemas/ShareRecipient_1'
        messages:
          type: array
          description: Array of invitation messages.
          items:
            $ref: '#/components/schemas/Message_1'
        inherited:
          type: boolean
          description: True if share inherited from parent folder.
          enum:
          - true
          - null
        status:
          type: integer
          description: Share activity status. Can be active (1) or deactivated (0).
          format: int32
          example: 1
          enum:
          - 0
          - 1
        hasNotification:
          type: boolean
          description: True if share has notification.
          example: false
          enum:
          - true
          - false
        created:
          type: string
          description: Timestamp of share creation.
          format: YYYY-mm-dd hh:mm:ss
          example: 2017-05-03 5:49:34 pm
        modified:
          type: string
          description: Timestamp of share modification. Can be `null` if it wasn't
            modified.
          format: YYYY-mm-dd hh:mm:ss
        trackingStatus:
          type: string
          description: Checks recipient received status and returns whether it's been
            recevied (`complete`,) partial recevied (`incomplete`,) or not recevied
            yet (`pending`.)
          enum:
          - complete
          - incomplete
          - pending
        formId:
          type: integer
          description: ID of the form.
      example:
        formId: 0
        ownerHash: hd1e-3erufo72-fsxak999
        resent: resent
        created: 2017-05-03 5:49:34 pm
        hasPassword: false
        hasNotification: false
        accessMode: upload
        type: shared_folder
        accessDescription: Download only
        fileDropCreateFolders: false
        expired: false
        public: true
        requireEmail: true
        paths:
        - /Example Folder
        recipients:
        - id: 2
          shareId: 23
          type: direct
          hash: fseowxan
          email: recipient@gmail.com
          sent: true
          received: false
          created: {}
        inherited: true
        name: Example Folder
        messages:
        - attributes:
            subject: Files available for download
            created: '{}'
            modified: '{}'
            body: You have files available for download.
          id: 397584
          type: message
        - attributes:
            subject: Files available for download
            created: '{}'
            modified: '{}'
            body: You have files available for download.
          id: 397584
          type: message
        modified: modified
        expiration: expiration
        embed: false
        trackingStatus: complete
        hash: hd1e-3erufo72
        status: 1
    Share_1_relationships_messages:
      type: object
      properties:
        type:
          type: string
          description: Type is message.
          example: message
          enum:
          - message
        id:
          type: integer
          description: ID of the message.
          example: 21
    Share_1_relationships_owner:
      type: object
      properties:
        type:
          type: string
          description: Type is user.
          example: user
          enum:
          - user
        id:
          type: integer
          description: 'ID of the owner. '
          example: 12345
    Share_1_relationships_resource:
      type: object
      properties:
        type:
          type: string
          description: Type is resource.
          example: resource
          enum:
          - resource
        id:
          type: integer
          description: ID of the resource.
          example: 12345
      description: PLACEHOLDER
    Share_1_relationships_notifications:
      type: object
      properties:
        type:
          type: string
          description: Type is notification.
          example: notification
          enum:
          - notification
        id:
          type: integer
          description: ID of the notification.
          example: 9
    Share_1_relationships:
      type: object
      properties:
        messages:
          type: array
          description: PLACEHOLDER
          items:
            $ref: '#/components/schemas/Share_1_relationships_messages'
        owner:
          $ref: '#/components/schemas/Share_1_relationships_owner'
        resource:
          $ref: '#/components/schemas/Share_1_relationships_resource'
        notifications:
          type: array
          description: PLACEHOLDER
          items:
            $ref: '#/components/schemas/Share_1_relationships_notifications'
    Share_1:
      type: object
      properties:
        id:
          type: integer
          description: ID of the share.
          format: int32
          example: 655621
        type:
          type: string
          description: Type of the share.
          example: share
          enum:
          - share
        attributes:
          $ref: '#/components/schemas/Share_1_attributes'
        relationships:
          $ref: '#/components/schemas/Share_1_relationships'
      description: Object contains share properties.
    ShareResponse_relationships_messages:
      type: object
      properties:
        type:
          type: string
          description: 'Type is message. '
          example: message
          enum:
          - message
        id:
          type: integer
          description: ID of the message.
          example: 21
      example:
        id: 21
        type: message
    ShareResponse_relationships_owner:
      type: object
      properties:
        id:
          type: integer
          description: ID of the owner.
          example: 12345
        type:
          type: string
          description: Type is user.
      example:
        id: 12345
        type: type
    ShareResponse_relationships_resources:
      type: object
      properties:
        type:
          type: string
          description: 'Type is resource. '
          example: resource
          enum:
          - resource
        id:
          type: integer
          description: ID of the shared resource.
          example: 12345
      description: PLACEHOLDER
      example:
        id: 12345
        type: resource
    ShareResponse_relationships_notifications:
      type: object
      properties:
        type:
          type: string
          description: 'Type is notification. '
          example: notification
          enum:
          - notification
        id:
          type: integer
          description: 'ID of the notification. '
          example: 9
      example:
        id: 9
        type: notification
    ShareResponse_relationships:
      type: object
      properties:
        messages:
          type: array
          description: PLACEHOLDER
          items:
            $ref: '#/components/schemas/ShareResponse_relationships_messages'
        owner:
          $ref: '#/components/schemas/ShareResponse_relationships_owner'
        resources:
          $ref: '#/components/schemas/ShareResponse_relationships_resources'
        notifications:
          type: array
          description: PLACEHOLDER
          items:
            $ref: '#/components/schemas/ShareResponse_relationships_notifications'
      example:
        owner:
          id: 12345
          type: type
        messages:
        - id: 21
          type: message
        - id: 21
          type: message
        resources:
          id: 12345
          type: resource
        notifications:
        - id: 9
          type: notification
        - id: 9
          type: notification
    ShareCollectionResponse_relationships_owner:
      type: object
      properties:
        type:
          type: string
          description: 'Type is user. '
          example: user
          enum:
          - user
        id:
          type: integer
          description: 'ID of the owner. '
          example: 12345
    ShareCollectionResponse_relationships_resource:
      type: object
      properties:
        type:
          type: string
          description: Type is resource.
          example: resource
          enum:
          - resource
        id:
          type: integer
          description: 'ID of the resource. '
          example: 12345
      description: PLACEHOLDER
    ShareCollectionResponse_relationships_notifications:
      type: object
      properties:
        type:
          type: string
          description: Type is notification.
          example: notification
          enum:
          - notification
        id:
          type: integer
          description: 'ID of the notification. '
          example: 9
    ShareCollectionResponse_relationships:
      type: object
      properties:
        messages:
          type: array
          description: PLACEHOLDER
          items:
            $ref: '#/components/schemas/Share_1_relationships_messages'
        owner:
          $ref: '#/components/schemas/ShareCollectionResponse_relationships_owner'
        resource:
          $ref: '#/components/schemas/ShareCollectionResponse_relationships_resource'
        notifications:
          type: array
          description: PLACEHOLDER
          items:
            $ref: '#/components/schemas/ShareCollectionResponse_relationships_notifications'
    Share_2:
      type: object
      properties:
        id:
          type: integer
          description: ID of the share.
          format: int32
          example: 655621
        type:
          type: string
          description: Type of the share.
          example: share
          enum:
          - share
        attributes:
          $ref: '#/components/schemas/Share_1_attributes'
        relationships:
          $ref: '#/components/schemas/ShareCollectionResponse_relationships'
      description: Object contains share properties.
    ShareCollectionExtendedResponse_attributes:
      type: object
      properties:
        name:
          type: string
          description: Share name.
          example: Example Folder
        hasPassword:
          type: boolean
          description: True if the share has password.
          example: false
          enum:
          - true
          - false
        public:
          type: boolean
          description: True if the share has a public url.
          example: true
          enum:
          - true
          - false
        accessMode:
          type: string
          description: Access rights for the share.
          example: upload
          enum:
          - upload
          - download
          - download_upload
          - download_upload_modify_delete
        accessDescription:
          type: string
          description: Description of the share access rights.
          example: Download only
        embed:
          type: boolean
          description: True if share can be embedded.
          example: false
        hash:
          type: string
          description: Share hash.
          example: hd1e-3erufo72
        ownerHash:
          type: string
          description: Share owner's hash.
          example: hd1e-3erufo72-fsxak999
        expiration:
          type: string
          description: Expiration date of the share.
        expired:
          type: boolean
          description: True if the share has expired.
          example: false
          enum:
          - true
          - false
        resent:
          type: string
          description: Invitations resent date. Can be `null` if resent never happened.
          format: ISO 8601
        type:
          type: string
          description: Type of share.
          example: shared_folder
          enum:
          - shared_folder
          - send
          - receive
        requireEmail:
          type: boolean
          description: True if share requires email to access.
          example: true
        fileDropCreateFolders:
          type: boolean
          description: Flag to show if separate folders should be created for each
            file upload to receive folder.
          example: false
          enum:
          - true
          - false
        paths:
          type: array
          description: Path to the shared resource in your account.
          example:
          - /Example Folder
          items:
            type: string
        recipients:
          type: array
          description: Array of recipients.
          example:
          - id: 2
            shareId: 23
            type: direct
            hash: fseowxan
            email: recipient@gmail.com
            sent: true
            received: false
            created: {}
          items:
            $ref: '#/components/schemas/ShareRecipient_1'
        messages:
          type: array
          description: Array of invitation messages.
          items:
            $ref: '#/components/schemas/Message_1'
        inherited:
          type: boolean
          description: True if share inherited from parent folder.
          enum:
          - true
          - null
        status:
          type: integer
          description: Share activity status. Can be active (1) or deactivated (0).
          format: int32
          example: 1
          enum:
          - 0
          - 1
        hasNotification:
          type: boolean
          description: True if share has notification.
          example: false
          enum:
          - true
          - false
        created:
          type: string
          description: Timestamp of share creation.
          format: YYYY-mm-dd hh:mm:ss
          example: 2017-05-03 5:49:34 pm
        modified:
          type: string
          description: Timestamp of share modification. Can be `null` if it wasn't
            modified.
          format: YYYY-mm-dd hh:mm:ss
        trackingStatus:
          type: string
          description: Checks recipient received status and returns whether it's been
            recevied (`complete`,) partial recevied (`incomplete`,) or not recevied
            yet (`pending`.)
          enum:
          - completed
          - incomplete
          - pending
        formId:
          type: integer
          description: ID of the form.
    ShareCollectionExtendedResponse_relationships_resource:
      type: object
      properties:
        type:
          type: string
          description: 'Type is resource. '
          example: resource
          enum:
          - resource
        id:
          type: integer
          description: 'ID of the resource. '
          example: 12345
      description: PLACEHOLDER
    ShareCollectionExtendedResponse_relationships:
      type: object
      properties:
        messages:
          type: array
          description: PLACEHOLDER
          items:
            $ref: '#/components/schemas/Share_1_relationships_messages'
        owner:
          $ref: '#/components/schemas/Share_1_relationships_owner'
        resource:
          $ref: '#/components/schemas/ShareCollectionExtendedResponse_relationships_resource'
        notifications:
          type: array
          description: PLACEHOLDER
          items:
            $ref: '#/components/schemas/ShareResponse_relationships_notifications'
    Share_3:
      type: object
      properties:
        id:
          type: integer
          description: ID of the share.
          format: int32
          example: 655621
        type:
          type: string
          example: share
          enum:
          - share
        attributes:
          $ref: '#/components/schemas/ShareCollectionExtendedResponse_attributes'
        relationships:
          $ref: '#/components/schemas/ShareCollectionExtendedResponse_relationships'
      description: Object contains share properties.
    Account_relationships_masterUser_data:
      type: object
      properties:
        type:
          type: string
          example: user
          enum:
          - user
        id:
          type: integer
          description: ID of master user for account
    Account_relationships_masterUser:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Account_relationships_masterUser_data'
    Account_relationships:
      type: object
      properties:
        masterUser:
          $ref: '#/components/schemas/Account_relationships_masterUser'
    AccountPublic_attributes:
      type: object
      properties:
        accountName:
          type: string
          description: PLACEHOLDER
          example: exampleaccount
        theme:
          type: string
          description: PLACEHOLDER
          example: default
        companyName:
          type: string
          description: PLACEHOLDER
          example: Development Company
        logo:
          type: string
          description: PLACEHOLDER
          example: fee92192b6311b724800b82c7c6c3ff2.png
        customEmail:
          type: string
          description: PLACEHOLDER
          format: email
        verifiedDomain:
          type: string
          description: PLACEHOLDER
        verifiedDomainId:
          type: integer
          description: PLACEHOLDER
        verifiedDomainValid:
          type: boolean
          description: PLACEHOLDER
          example: false
        created:
          type: string
          format: ISO 8601
          example: '{}'
        modified:
          type: string
          format: ISO 8601
          example: '{}'
    AccountAttributes_quota:
      type: object
      properties:
        diskLimit:
          type: integer
          description: Amount of disk space that the account has available to it.
            This may be increased by upgrading to a larger plan.
          format: int64
          example: 375809638400
        bandwidthLimit:
          type: integer
          description: Amount of bandwidth that the account has available before a
            warning is generated. All ExaVault accounts include unlimited bandwidth,
            but we flag high-bandwidth users.
          format: int64
        diskUsed:
          type: integer
          description: Amount of disk space currently in use.
          format: int64
          example: 1225352192
        bandwidthUsed:
          type: integer
          description: Amount of bandwidth used by this account in the last billing
            period.
          format: int64
          example: 0
        noticeEnabled:
          type: integer
          description: Should a quota warning be sent to the account owner when a
            threshold level of space utilization is reached?
          format: int32
          example: 1
        noticeThreshold:
          type: integer
          description: Treshold that triggers a quota notification. This represents
            the "percent full" your account must be before the quota notification
            is generated.
          format: int32
          example: 80
    CallbackSettings_2:
      type: object
      properties:
        accountId:
          type: string
          description: ID of the account these settings belongs to.
          example: "13058"
        endpointUrl:
          type: string
          description: Where callback settings object sent to.
          example: http://test-endpoint.exavault.com
        token:
          type: string
          description: Verification token for the request authentication.
          example: 380814daa6886641d2ffsw2f43b30312
        triggers:
          $ref: '#/components/schemas/CallbackSettings_triggers'
    BrandingSettings_2:
      type: object
      properties:
        companyName:
          type: string
          description: PLACEHOLDER
        customEmail:
          type: string
          description: PLACEHOLDER
          format: email
          example: custom@example.com
        logo:
          type: string
          description: PLACEHOLDER
          example: examplelogo.png
        logoExt:
          type: string
          description: PLACEHOLDER
          example: png
        theme:
          type: string
          description: PLACEHOLDER
          example: default
    AccountAttributes_trial:
      type: object
      properties:
        free:
          type: boolean
          description: Flag indicates if free trial enabled.
          example: true
        code:
          type: string
          description: (ExaVault Use Only) Internal tracking code representing type
            of free trial for account.
        status:
          type: string
          description: (ExaVault Use Only) Internal tracking code representing whether
            trial has ended or is still in progress.
          example: completed
        start:
          type: string
          description: (ExaVault Use Only) Date that free trial period began.
          format: ISO 8601
          example: '{}'
        end:
          type: string
          description: (ExaVault Use Only) Date that free trial period ends.
          format: ISO 8601
          example: '{}'
    Account_1_attributes:
      type: object
      properties:
        accountName:
          type: string
          description: Name of the account.
          example: exampleaccount
        username:
          type: string
          description: Name of the master user of the account.
          example: exampleuser
        maxUsers:
          type: integer
          description: 'Maximum number of users the account can have. This can be
            increased by upgrading your account. '
          format: int32
          example: 1000
        userCount:
          type: integer
          description: Current number of users on the account.
          format: int32
          example: 3
        status:
          type: integer
          description: Account status flag. A one (1) means the account is active;
            zero (0) means it is suspended.
          format: int32
          example: 1
          enum:
          - 1
          - 0
        branding:
          type: boolean
          description: Branding flag. Set to `true` if the account has branding functionality
            enabled.
          example: true
          enum:
          - true
          - false
        customDomain:
          type: boolean
          description: Custom domain flag. Set to `true` if account type allows custom
            domain functionality.
          example: true
          enum:
          - true
          - false
        planCode:
          type: string
          description: (ExaVault Use Only) Code of the plan account is signed up for.
          example: 350gb-r206
        whmcsPlanId:
          type: integer
          description: (ExaVault Use Only) Internal ID of the service in CMS.
          format: int32
          example: 5970
        quota:
          $ref: '#/components/schemas/AccountAttributes_quota'
        secureOnly:
          type: boolean
          description: Flag to indicate whether the account disables connections via
            insecure protocols (e.g. FTP). Set to `true` to disable all traffic over
            port 21.
          example: false
        complexPasswords:
          type: boolean
          description: Flag to indicate whether the account requires complex passwords.
            Set to `true` to require complex passwords on all users and shares.
          example: false
        showReferralLinks:
          type: boolean
          description: Flag to indicate showing of referrals links in the account.
            Set to `true` to include marketing messages in share invitations.
          example: true
        externalDomains:
          type: string
          description: Custom domain used to brand this account.
        allowedIp:
          type: string
          description: Range of IP addresses allowed to access this account.
        callbackSettings:
          type: array
          description: Callback settings (Webhooks) of the account.
          items:
            $ref: '#/components/schemas/CallbackSettings_2'
        brandingSettings:
          $ref: '#/components/schemas/BrandingSettings_2'
        trial:
          $ref: '#/components/schemas/AccountAttributes_trial'
        clientId:
          type: integer
          description: (ExaVault Use Only) Internal ID of the account in CMS.
          format: int32
          example: 1
        welcomeEmailContent:
          type: string
          description: Content of welcome email each new user will receive.
          example: Welcome to your new account!
        welcomeEmailSubject:
          type: string
          description: Subject of welcome email each new user will receive.
          example: ExaVault File Sharing Account
        customSignature:
          type: string
          description: Custom signature for all account emails users or recipients
            will receive.
        accountOnboarding:
          type: boolean
          description: Whether the web application onboarding help is enabled for
            new users in the account.
          example: false
        created:
          type: string
          description: Timestamp of account creation.
          format: ISO 8601
          example: '{}'
        modified:
          type: string
          description: Timestamp of account modification.
          format: ISO 8601
          example: '{}'
    Account_1_relationships_masterUser:
      type: object
      properties:
        type:
          type: string
          description: 'Type is user. '
          example: user
        id:
          type: integer
          description: 'ID of the user. '
          example: 8
    Account_1_relationships:
      type: object
      properties:
        masterUser:
          $ref: '#/components/schemas/Account_1_relationships_masterUser'
    Account_1:
      type: object
      properties:
        id:
          type: integer
          description: 'ID of the account. '
          format: int32
          example: 13758
        type:
          type: string
          description: 'Type is account. '
          example: account
        attributes:
          $ref: '#/components/schemas/Account_1_attributes'
        relationships:
          $ref: '#/components/schemas/Account_1_relationships'
      description: Object contains all account properties.
    Account_2_attributes:
      type: object
      properties:
        accountName:
          type: string
          description: PLACEHOLDER
          example: exampleaccount
        username:
          type: string
          description: Name of the account.
          example: exampleuser
        maxUsers:
          type: integer
          description: Maximum number of users the account can have. This can be increased
            by contacting ExaVault Support.
          format: int32
          example: 1000
        userCount:
          type: integer
          description: Current number of users on the account.
          format: int32
          example: 3
        status:
          type: integer
          description: Account status flag. A one (1) means the account is active;
            zero (0) means it is suspended.
          format: int32
          example: 1
          enum:
          - 1
          - 0
        branding:
          type: boolean
          description: Branding flag. Set to `true` if the account has branding functionality
            enabled.
          example: true
          enum:
          - true
          - false
        customDomain:
          type: boolean
          description: Custom domain flag. Set to `true` if account type allows custom
            domain functionality.
          example: true
          enum:
          - true
          - false
        planCode:
          type: string
          description: (ExaVault Use Only) Code of the plan account is signed up for.
          example: 350gb-r206
        whmcsPlanId:
          type: integer
          description: (ExaVault Use Only) Internal ID of the service in CMS.
          format: int32
          example: 5970
        quota:
          $ref: '#/components/schemas/AccountAttributes_quota'
        secureOnly:
          type: boolean
          description: Flag to indicate whether the account disables connections via
            insecure protocols (e.g. FTP). Set to `true` to disable all traffic over
            port 21.
          example: false
        complexPasswords:
          type: boolean
          description: Flag to indicate whether the account requires complex passwords.
            Set to `true` to require complex passwords on all users and shares.
          example: false
        showReferralLinks:
          type: boolean
          description: Flag to indicate showing of referrals links in the account.
            Set to `true` to include marketing messages in share invitations.
          example: true
        externalDomains:
          type: string
          description: Custom domain used to brand this account.
        allowedIp:
          type: string
          description: Range of IP addresses allowed to access this account.
        callbackSettings:
          type: array
          description: Callback settings (Webhooks) of the account.
          items:
            $ref: '#/components/schemas/CallbackSettings_2'
        brandingSettings:
          $ref: '#/components/schemas/BrandingSettings_2'
        trial:
          $ref: '#/components/schemas/AccountAttributes_trial'
        clientId:
          type: integer
          description: (ExaVault Use Only) Internal ID of the account in CMS.
          format: int32
          example: 1
        welcomeEmailContent:
          type: string
          description: Content of welcome email each new user will receive.
          example: Welcome to your new account!
        welcomeEmailSubject:
          type: string
          description: Subject of welcome email each new user will receive.
          example: ExaVault File Sharing Account
        customSignature:
          type: string
          description: Custom signature for all account emails users or recipients
            will receive.
        accountOnboarding:
          type: boolean
          description: Whether the web application onboarding help is enabled for
            new users in the account.
          example: false
        created:
          type: string
          description: Timestamp of account creation.
          format: ISO 8601
          example: '{}'
        modified:
          type: string
          description: Timestamp of account modification.
          format: ISO 8601
          example: '{}'
    Account_2_relationships_masterUser:
      type: object
      properties:
        type:
          type: string
          example: user
        id:
          type: integer
          example: 8
    Account_2_relationships:
      type: object
      properties:
        masterUser:
          $ref: '#/components/schemas/Account_2_relationships_masterUser'
    Account_2:
      type: object
      properties:
        id:
          type: integer
          description: (ExaVault Use Only) Internal ID of the account.
          format: int32
          example: 13758
        type:
          type: string
          example: account
        attributes:
          $ref: '#/components/schemas/Account_2_attributes'
        relationships:
          $ref: '#/components/schemas/Account_2_relationships'
      description: Object contains all account properties.
    AccountPublicResponse_data_attributes:
      type: object
      properties:
        accountName:
          type: string
          description: 'Name of the account. '
          example: exampleaccount
        theme:
          type: string
          description: 'Current theme colors of the web UI. '
          example: default
          enum:
          - default
          - dark
          - light
        companyName:
          type: string
          description: Name of your company
          example: Development Company
        logo:
          type: string
          description: 'File name of your company logo. Can be `null` if no logo has
            been added. '
          example: fee92192b6311b724800b82c7c6c3ff2.png
        customEmail:
          type: string
          description: 'Default email address to use for system notificiations. '
          format: email
        verifiedDomain:
          type: string
          description: 'Verfied custom domain on the account. '
        verifiedDomainId:
          type: integer
          description: ID of the verifed domain.
        verifiedDomainValid:
          type: boolean
          description: '`true` if the verified domain is valid. '
          example: false
        created:
          type: string
          description: 'Account creation datetime. '
          format: ISO 8601
          example: '{}'
        modified:
          type: string
          description: 'Account modification datetime. '
          format: ISO 8601
          example: '{}'
      example:
        customEmail: ""
        verifiedDomainId: 0
        verifiedDomain: verifiedDomain
        verifiedDomainValid: false
        accountName: exampleaccount
        created: '{}'
        companyName: Development Company
        logo: fee92192b6311b724800b82c7c6c3ff2.png
        modified: '{}'
        theme: default
    AccountPublicResponse_data:
      type: object
      properties:
        id:
          type: integer
          description: PLACEHOLDER
          format: int32
          example: 12345
        type:
          type: string
          description: 'Type is account. '
          example: account
          enum:
          - account
        attributes:
          $ref: '#/components/schemas/AccountPublicResponse_data_attributes'
      description: Public account's information available when only ev-api-key provided
      example:
        attributes:
          customEmail: ""
          verifiedDomainId: 0
          verifiedDomain: verifiedDomain
          verifiedDomainValid: false
          accountName: exampleaccount
          created: '{}'
          companyName: Development Company
          logo: fee92192b6311b724800b82c7c6c3ff2.png
          modified: '{}'
          theme: default
        id: 12345
        type: account
    Form_attributes:
      type: object
      properties:
        formDescription:
          type: string
          description: Text that appears at the top of a receive form
          example: Upload your photos to us
        submitButtonText:
          type: string
          description: Text that appears on the submit button for the form
          example: Send Files
        name:
          type: string
          description: Description of form that appears at top.
        successMessage:
          type: string
          description: Message displayed to submitter after files are uploaded
          example: Your files were uploaded
        cssStyles:
          type: string
          description: CSS to format appearance of form elements.
          example: |-
            #ev-widget-form {
              /*Change this to change the font. Remove to use your website font*/
              font-family: Helvetica Neue, sans-serif;
              /*Makes the form the same width as your website */
              margin: 0 -2%;
            }
            #ev-widget-form label{
              width: 100%;
            }
            #ev-widget-form input,
            #ev-widget-form textarea {
              /*Changes color and thickness of borders on form elements */
              border: 2px solid #ccc;
              /*Changes spacing inside the form elements (top/bottom and left/right */
              padding: 5px 5px;
              /* Changes how far away the inputs are from their label */
              margin-top: 2px;
            }

            #ev-widget-form input:focus,
            #ev-widget-form textarea:focus {
              /*Changes the color of the form elements when they are clicked in to */
              border: 2px solid #b2cf88;
              /*Removes glow effect from form elements that are clicked in to */
              outline: none;
            }

            #ev-widget-form label {
              font-size: 14px;
              font-weight: bold;
              /*Changes color of labels */
              color: #232323
            }

            #ev-widget-form .ev-form-element-description {
              /*Changes size of descriptions */
              font-size: 12px;
              /*Changes color of descriptions */
              color: #777;
              /* Changes how far away the descriptions are from their input */
              margin-top: 2px;
            }

            #ev-widget-form textarea {
              /* Makes textareas (multiline inputs) a taller. */
              min-height: 90px;
            }
        elements:
          type: array
          description: Array of form fields defined for the form
          example:
          - id: 234
            name: Project ID
            order: 0
            type: name
            settings:
              width: 1
              isRequired: false
              useAsFolderName: false
          - id: 235
            name: Your Email
            order: 1
            type: email
            setings:
              description: Enter your email from the registration system
              width: 1
              isRequired: true
              senderEmail: true
              useAsFolderName: true
          - id: 236
            name: Upload Area
            order: 2
            type: upload_area
            settings: {}
          items:
            anyOf:
            - title: FormField
              type: object
              properties:
                id:
                  type: integer
                  description: Field id number
                  format: int32
                  example: 1185
                name:
                  type: string
                  description: Label of the field
                  example: Your Name
                order:
                  type: integer
                  description: Order that field appears on the form, starting from
                    0
                  format: int32
                  example: 0
                type:
                  type: string
                  description: Field type
                  enum:
                  - email
                  - textarea
                  - name
                  - text
                settings:
                  type: object
                  properties:
                    description:
                      type: string
                      description: Secondary description of field
                    width:
                      type: number
                      description: How much of the available width the field should
                        occupy
                      format: float
                      example: 0.5
                    isRequired:
                      type: boolean
                      description: Whether this field must be completed before form
                        can be submitted
                      example: false
                    useAsFolderName:
                      type: boolean
                      description: Whether to place submitted files into a subfolder
                        named the contents of this field. Only takes effect when the
                        `fileDropCreateFolders` parameter on the receive folder is
                        `true`. `isRequired` must be set to `true` if this setting
                        is `true`.
                      example: false
                  description: Advanced field settings
            - title: FormFieldUploadArea
              type: object
              properties:
                id:
                  type: integer
                  description: Field id number
                  format: int32
                  example: 1103
                name:
                  type: string
                  description: Label of the field (not used).
                  example: Upload Area
                order:
                  type: integer
                  description: Order that field appears on the form, starting from
                    0
                  format: int32
                  example: 0
                type:
                  type: string
                  description: Field type
                  enum:
                  - upload_area
                settings:
                  type: object
                  properties:
                    fileTypes:
                      type: string
                      description: File types that can be uploaded. Comma-delimited
                        string of MIME file types
                  description: Advanced field settings
    Form_relationships_share_data:
      type: object
      properties:
        id:
          type: integer
          example: 22
        type:
          type: string
          example: share
          enum:
          - share
    Form_relationships_share:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Form_relationships_share_data'
    Form_relationships:
      type: object
      properties:
        share:
          $ref: '#/components/schemas/Form_relationships_share'
    FormExtendedResponse_attributes:
      type: object
      properties:
        formDescription:
          type: string
          description: Text that appears at the top of a receive form
          example: Upload your photos to us
        submitButtonText:
          type: string
          description: Text that appears on the submit button for the form
          example: Send Files
        name:
          type: string
          description: Description of form that appears at top.
        successMessage:
          type: string
          description: Message displayed to submitter after files are uploaded
          example: Your files were uploaded
        cssStyles:
          type: string
          description: CSS to format appearance of form elements.
          example: |-
            #ev-widget-form {
              /*Change this to change the font. Remove to use your website font*/
              font-family: Helvetica Neue, sans-serif;
              /*Makes the form the same width as your website */
              margin: 0 -2%;
            }
            #ev-widget-form label{
              width: 100%;
            }
            #ev-widget-form input,
            #ev-widget-form textarea {
              /*Changes color and thickness of borders on form elements */
              border: 2px solid #ccc;
              /*Changes spacing inside the form elements (top/bottom and left/right */
              padding: 5px 5px;
              /* Changes how far away the inputs are from their label */
              margin-top: 2px;
            }

            #ev-widget-form input:focus,
            #ev-widget-form textarea:focus {
              /*Changes the color of the form elements when they are clicked in to */
              border: 2px solid #b2cf88;
              /*Removes glow effect from form elements that are clicked in to */
              outline: none;
            }

            #ev-widget-form label {
              font-size: 14px;
              font-weight: bold;
              /*Changes color of labels */
              color: #232323
            }

            #ev-widget-form .ev-form-element-description {
              /*Changes size of descriptions */
              font-size: 12px;
              /*Changes color of descriptions */
              color: #777;
              /* Changes how far away the descriptions are from their input */
              margin-top: 2px;
            }

            #ev-widget-form textarea {
              /* Makes textareas (multiline inputs) a taller. */
              min-height: 90px;
            }
        elements:
          type: array
          description: Array of form fields defined for the form
          example:
          - id: 234
            name: Project ID
            order: 0
            type: name
            settings:
              width: 1
              isRequired: false
              useAsFolderName: false
          - id: 235
            name: Your Email
            order: 1
            type: email
            setings:
              description: Enter your email from the registration system
              width: 1
              isRequired: true
              senderEmail: true
              useAsFolderName: true
          - id: 236
            name: Upload Area
            order: 2
            type: upload_area
            settings: {}
          items:
            type: object
            anyOf:
            - title: FormField
              properties:
                id:
                  type: integer
                  description: Field id number
                  format: int32
                  example: 1185
                name:
                  type: string
                  description: Label of the field
                  example: Your Name
                order:
                  type: integer
                  description: Order that field appears on the form, starting from
                    0
                  format: int32
                  example: 0
                type:
                  type: string
                  description: Field type
                  enum:
                  - email
                  - textarea
                  - name
                  - text
                settings:
                  type: object
                  properties:
                    description:
                      type: string
                      description: Secondary description of field
                    width:
                      type: number
                      description: How much of the available width the field should
                        occupy
                      format: float
                      example: 0.5
                    isRequired:
                      type: boolean
                      description: Whether this field must be completed before form
                        can be submitted
                      example: false
                    useAsFolderName:
                      type: boolean
                      description: Whether to place submitted files into a subfolder
                        named the contents of this field. Only takes effect when the
                        `fileDropCreateFolders` parameter on the receive folder is
                        `true`. `isRequired` must be set to `true` if this setting
                        is `true`.
                      example: false
                  description: Advanced field settings
            - title: FormFieldUploadArea
              properties:
                id:
                  type: integer
                  description: Field id number
                  format: int32
                  example: 1103
                name:
                  type: string
                  description: Label of the field (not used).
                  example: Upload Area
                order:
                  type: integer
                  description: Order that field appears on the form, starting from
                    0
                  format: int32
                  example: 0
                type:
                  type: string
                  description: Field type
                  enum:
                  - upload_area
                settings:
                  type: object
                  properties:
                    fileTypes:
                      type: string
                      description: File types that can be uploaded. Comma-delimited
                        string of MIME file types
                  description: Advanced field settings
    Share_4:
      type: object
      properties:
        id:
          type: integer
          description: ID of the share.
          format: int32
          example: 655621
        type:
          type: string
          example: share
          enum:
          - share
        attributes:
          $ref: '#/components/schemas/Share_attributes'
        relationships:
          $ref: '#/components/schemas/Share_relationships'
      description: Object contains share properties.
    FormResponse_attributes:
      type: object
      properties:
        formDescription:
          type: string
          description: Text that appears at the top of a receive form
          example: Upload your photos to us
        submitButtonText:
          type: string
          description: Text that appears on the submit button for the form
          example: Send Files
        successMessage:
          type: string
          description: Message displayed to submitter after files are uploaded
          example: Your files were uploaded
        cssStyles:
          type: string
          description: CSS Styles of the form.
          example: |-
            #ev-widget-form {
              /*Change this to change the font. Remove to use your website font*/
              font-family: Helvetica Neue, sans-serif;
              /*Makes the form the same width as your website */
              margin: 0 -2%;
            }
            #ev-widget-form label{
              width: 100%;
            }
            #ev-widget-form input,
            #ev-widget-form textarea {
              /*Changes color and thickness of borders on form elements */
              border: 2px solid #ccc;
              /*Changes spacing inside the form elements (top/bottom and left/right */
              padding: 5px 5px;
              /* Changes how far away the inputs are from their label */
              margin-top: 2px;
            }

            #ev-widget-form input:focus,
            #ev-widget-form textarea:focus {
              /*Changes the color of the form elements when they are clicked in to */
              border: 2px solid #b2cf88;
              /*Removes glow effect from form elements that are clicked in to */
              outline: none;
            }

            #ev-widget-form label {
              font-size: 14px;
              font-weight: bold;
              /*Changes color of labels */
              color: #232323
            }

            #ev-widget-form .ev-form-element-description {
              /*Changes size of descriptions */
              font-size: 12px;
              /*Changes color of descriptions */
              color: #777;
              /* Changes how far away the descriptions are from their input */
              margin-top: 2px;
            }

            #ev-widget-form textarea {
              /* Makes textareas (multiline inputs) a taller. */
              min-height: 90px;
            }
        elements:
          type: array
          description: Array of form fields defined for the form
          example:
          - id: 234
            name: Project ID
            order: 0
            type: name
            settings:
              width: 1
              isRequired: false
              useAsFolderName: false
          - id: 235
            name: Your Email
            order: 1
            type: email
            setings:
              description: Enter your email from the registration system
              width: 1
              isRequired: true
              senderEmail: true
              useAsFolderName: true
          - id: 236
            name: Upload Area
            order: 2
            type: upload_area
            settings: {}
          items:
            type: object
            anyOf:
            - title: FormField
              properties:
                id:
                  type: integer
                  description: 'ID of the form field. '
                  format: int32
                  example: 1185
                name:
                  type: string
                  description: Label of the field.
                  example: Your Name
                order:
                  type: integer
                  description: Order that field appears on the form, starting from
                    0.
                  format: int32
                  example: 0
                type:
                  type: string
                  description: Field type.
                  enum:
                  - email
                  - textarea
                  - name
                  - text
                settings:
                  type: object
                  properties:
                    description:
                      type: string
                      description: Secondary description of field.
                    width:
                      type: number
                      description: How much of the available width the field should
                        occupy.
                      format: float
                      example: 0.5
                    isRequired:
                      type: boolean
                      description: '`true` if this field must be completed before
                        form can be submitted.'
                      example: false
                    useAsFolderName:
                      type: boolean
                      description: '`true` if the submitted files should be put into
                        a subfolder named the contents of this field. Only takes effect
                        when the `fileDropCreateFolders` parameter on the receive
                        folder is `true`. `isRequired` must be set to `true` if this
                        setting is `true`.'
                      example: false
                    senderEmail:
                      type: boolean
                  description: Advanced field settings
            - title: FormFieldUploadArea
              properties:
                id:
                  type: integer
                  description: 'ID of the form field. '
                  format: int32
                  example: 1103
                name:
                  type: string
                  description: Label of the field (not used).
                  example: Upload Area
                order:
                  type: integer
                  description: Order that field appears on the form, starting from
                    0
                  format: int32
                  example: 0
                type:
                  type: string
                  description: Type is upload_area.
                  enum:
                  - upload_area
                settings:
                  type: object
                  properties:
                    fileTypes:
                      type: string
                      description: File types that can be uploaded. Comma-delimited
                        string of MIME file types.
                  description: Advanced field settings
      example:
        elements:
        - id: 234
          name: Project ID
          order: 0
          type: name
          settings:
            width: 1
            isRequired: false
            useAsFolderName: false
        - id: 235
          name: Your Email
          order: 1
          type: email
          setings:
            description: Enter your email from the registration system
            width: 1
            isRequired: true
            senderEmail: true
            useAsFolderName: true
        - id: 236
          name: Upload Area
          order: 2
          type: upload_area
          settings: {}
        formDescription: Upload your photos to us
        submitButtonText: Send Files
        successMessage: Your files were uploaded
        cssStyles: |-
          #ev-widget-form {
            /*Change this to change the font. Remove to use your website font*/
            font-family: Helvetica Neue, sans-serif;
            /*Makes the form the same width as your website */
            margin: 0 -2%;
          }
          #ev-widget-form label{
            width: 100%;
          }
          #ev-widget-form input,
          #ev-widget-form textarea {
            /*Changes color and thickness of borders on form elements */
            border: 2px solid #ccc;
            /*Changes spacing inside the form elements (top/bottom and left/right */
            padding: 5px 5px;
            /* Changes how far away the inputs are from their label */
            margin-top: 2px;
          }

          #ev-widget-form input:focus,
          #ev-widget-form textarea:focus {
            /*Changes the color of the form elements when they are clicked in to */
            border: 2px solid #b2cf88;
            /*Removes glow effect from form elements that are clicked in to */
            outline: none;
          }

          #ev-widget-form label {
            font-size: 14px;
            font-weight: bold;
            /*Changes color of labels */
            color: #232323
          }

          #ev-widget-form .ev-form-element-description {
            /*Changes size of descriptions */
            font-size: 12px;
            /*Changes color of descriptions */
            color: #777;
            /* Changes how far away the descriptions are from their input */
            margin-top: 2px;
          }

          #ev-widget-form textarea {
            /* Makes textareas (multiline inputs) a taller. */
            min-height: 90px;
          }
    FormResponse_relationships_share_data:
      type: object
      properties:
        id:
          type: integer
          description: 'ID of the share. '
          example: 22
        type:
          type: string
          description: 'Type is share. '
          example: share
          enum:
          - share
      example:
        id: 22
        type: share
    FormResponse_relationships_share:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/FormResponse_relationships_share_data'
      example:
        data:
          id: 22
          type: share
    FormResponse_relationships:
      type: object
      properties:
        share:
          $ref: '#/components/schemas/FormResponse_relationships_share'
      example:
        share:
          data:
            id: 22
            type: share
    FormFieldData_1:
      type: object
      properties:
        created:
          type: string
          description: Timestamp of the submission
          format: YYYY-mm-dd hh:mm:ss
          example: '{}'
        paths:
          type: array
          description: Full paths to files associated with the form submission
          items:
            type: string
        other fields:
          description: All fields defined on the form will be included. Name will
            be the name of the field. Value is the value that was submitted in the
            form. Each will be its own attribute of the data object
      description: Contains the data submitted for a form.
    FormField_settings:
      type: object
      properties:
        description:
          type: string
          description: Secondary description of field
        width:
          type: number
          description: How much of the available width the field should occupy
          format: float
          example: 0.5
        isRequired:
          type: boolean
          description: Whether this field must be completed before form can be submitted
          example: false
        useAsFolderName:
          type: boolean
          description: Whether to place submitted files into a subfolder named the
            contents of this field. Only takes effect when the `fileDropCreateFolders`
            parameter on the receive folder is `true`. `isRequired` must be set to
            `true` if this setting is `true`.
          example: false
      description: Advanced field settings
    EmailListsResponse_attributes:
      type: object
      properties:
        name:
          type: string
          description: 'Name of the email list. '
          example: My colleagues
        members:
          type: array
          description: 'Recipient emails in the email list. '
          example:
          - ykravchuk@exavault.com
          - jdoe@exavault.com
          items:
            type: string
        created:
          type: string
          description: 'Created datetime. '
          format: ISO 8601
          example: '{}'
        modified:
          type: string
          description: 'Modified datetime. '
          format: ISO 8601
          example: '{}'
      example:
        created: '{}'
        members:
        - ykravchuk@exavault.com
        - jdoe@exavault.com
        name: My colleagues
        modified: '{}'
    EmailListsResponse_relationships_ownerUser_data:
      type: object
      properties:
        id:
          type: integer
          description: ID of the owner user.
          example: 2
        type:
          type: string
          description: Type is user.
          example: user
      example:
        id: 2
        type: user
    EmailListsResponse_relationships_ownerUser:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/EmailListsResponse_relationships_ownerUser_data'
      example:
        data:
          id: 2
          type: user
    EmailListsResponse_relationships:
      type: object
      properties:
        ownerUser:
          $ref: '#/components/schemas/EmailListsResponse_relationships_ownerUser'
      example:
        ownerUser:
          data:
            id: 2
            type: user
    EmailListsIncludedResponse_attributes:
      type: object
      properties:
        name:
          type: string
          description: 'Name of the email list. '
          example: My colleagues
        members:
          type: array
          description: 'Receipient emails in the email list. '
          example:
          - ykravchuk@exavault.com
          - jdoe@exavault.com
          items:
            type: string
        created:
          type: string
          description: Created datetime.
          format: ISO 8601
          example: '{}'
        modified:
          type: string
          description: 'Modified datetime. '
          format: ISO 8601
          example: '{}'
    EmailListsIncludedResponse_relationships_ownerUser_data:
      type: object
      properties:
        id:
          type: integer
          description: 'ID of the owner user. '
          example: 2
        type:
          type: string
          description: 'Type is user. '
          example: user
    EmailListsIncludedResponse_relationships_ownerUser:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/EmailListsIncludedResponse_relationships_ownerUser_data'
    EmailListsIncludedResponse_relationships:
      type: object
      properties:
        ownerUser:
          $ref: '#/components/schemas/EmailListsIncludedResponse_relationships_ownerUser'
    EmailList_1:
      type: object
      properties:
        id:
          type: integer
          description: 'ID of the email list. '
          example: 1
        type:
          type: string
          description: Type is emailList.
          example: emailList
          enum:
          - emailList
        attributes:
          $ref: '#/components/schemas/EmailListsIncludedResponse_attributes'
        relationships:
          $ref: '#/components/schemas/EmailListsIncludedResponse_relationships'
    EmailListsIncludedResponse_attributes_1:
      type: object
      properties:
        status:
          type: integer
          description: Indicates user activity status. `0` means the user is locked
            and cannot log in. `1` means the user is active and can log in.
          format: int32
          example: 1
          enum:
          - 0
          - 1
        expiration:
          type: string
          description: Timestamp of user expiration.
          format: ISO 8601
        created:
          type: string
          description: Timestamp of user creation.
          format: ISO 8601
          example: '{}'
        modified:
          type: string
          description: Timestamp of user modification.
          format: ISO 8601
          example: '{}'
        accessTimestamp:
          type: string
          description: Timestamp of most recent successful user login.
          format: ISO 8601
          example: '{}'
        accountName:
          type: string
          description: Name of the account this user belongs to.
          example: exampleuser
        username:
          type: string
          description: Username of the user.
          example: exampleuser
        nickname:
          type: string
          description: Nickname of the user.
          example: exampleuser
        email:
          type: string
          description: Email address of the user.
          example: example@exavault.mail
        homeDir:
          type: string
          description: Path to the user's home folder.
          example: /
        permissions:
          $ref: '#/components/schemas/UserCollectionExtendedResponse_attributes_permissions'
        role:
          type: string
          description: User's access level.
          example: user
          enum:
          - user
          - admin
          - master
        timeZone:
          type: string
          description: User's timezone. See <a href='https://php.net/manual/en/timezones.php'
            target='blank'>this page</a> for allowed values.
          example: America/Chicago
        onboarding:
          type: boolean
          description: Whether the onboarding help system is enabled for this user.
            `true` means that additional help popups are displayed in the web application
            for this user.
          example: false
        firstLogin:
          description: '`true` if the user has logged into the system.'
          example: false
    EmailListsIncludedResponse_relationships_1_homeResource:
      type: object
      properties:
        type:
          type: string
          description: Type is resource.
          example: resource
        id:
          type: integer
          description: 'ID of the resource. '
          format: int32
          example: 2345
    EmailListsIncludedResponse_relationships_1_ownerAccount:
      type: object
      properties:
        type:
          type: string
          description: 'Type is account. '
          example: account
        id:
          type: integer
          description: 'ID of the account. '
          format: int32
          example: 2
    EmailListsIncludedResponse_relationships_1:
      type: object
      properties:
        homeResource:
          $ref: '#/components/schemas/EmailListsIncludedResponse_relationships_1_homeResource'
        ownerAccount:
          $ref: '#/components/schemas/EmailListsIncludedResponse_relationships_1_ownerAccount'
    User_3:
      type: object
      properties:
        id:
          type: integer
          description: ID of the user.
          format: int32
          example: 655621
        type:
          type: string
          description: 'Type is user. '
          example: user
        attributes:
          $ref: '#/components/schemas/EmailListsIncludedResponse_attributes_1'
        relationships:
          $ref: '#/components/schemas/EmailListsIncludedResponse_relationships_1'
      description: Object contains user properties.
    EmailList_2_attributes:
      type: object
      properties:
        name:
          type: string
          description: 'ID of the email list. '
          example: My colleagues
        members:
          type: array
          description: 'Receipient emails in the email list. '
          example:
          - ykravchuk@exavault.com
          - jdoe@exavault.com
          items:
            type: string
        created:
          type: string
          description: 'Created datetime. '
          format: ISO 8601
          example: '{}'
        modified:
          type: string
          description: 'Modified datetime. '
          format: ISO 8601
          example: '{}'
    EmailList_2:
      type: object
      properties:
        id:
          type: integer
          description: 'ID of the email list. '
          example: 1
        type:
          type: string
          description: 'Type is emailList. '
          example: emailList
          enum:
          - emailList
        attributes:
          $ref: '#/components/schemas/EmailList_2_attributes'
        relationships:
          $ref: '#/components/schemas/EmailListsIncludedResponse_relationships'
    EmailList_attributes:
      type: object
      properties:
        name:
          type: string
          example: My colleagues
        members:
          type: array
          example:
          - ykravchuk@exavault.com
          - jdoe@exavault.com
          items:
            type: string
        created:
          type: string
          format: ISO 8601
          example: '{}'
        modified:
          type: string
          format: ISO 8601
          example: '{}'
    EmailList_relationships_owner_data:
      type: object
      properties:
        id:
          type: integer
          example: 2
        type:
          type: string
          example: user
    EmailList_relationships_owner:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/EmailList_relationships_owner_data'
    EmailList_relationships:
      type: object
      properties:
        owner:
          $ref: '#/components/schemas/EmailList_relationships_owner'
    SessionActivityResponse_attributes:
      type: object
      properties:
        bytesTransferred:
          type: integer
          example: 10815676
        created:
          type: string
          example: '{}'
        duration:
          type: integer
          example: 5
        fileName:
          type: string
          example: /test2/Cassandra2020The20Definitive20Guide.2030947496.pdf
        fileSource:
          type: string
          example: ""
        ipAddress:
          type: string
          example: 185.223.113.224
        operation:
          type: string
          example: PASS
        protocol:
          type: string
          example: web
        sessionId:
          type: string
          example: 5da9b4a8bd961dfa0a56fa0dc15aaffe57069271b389e
        status:
          type: string
          example: '-'
        username:
          type: string
          example: ykravchuk
      example:
        duration: 5
        fileName: /test2/Cassandra2020The20Definitive20Guide.2030947496.pdf
        protocol: web
        bytesTransferred: 10815676
        created: '{}'
        ipAddress: 185.223.113.224
        fileSource: ""
        sessionId: 5da9b4a8bd961dfa0a56fa0dc15aaffe57069271b389e
        operation: PASS
        status: '-'
        username: ykravchuk
    Single entry of session activity:
      type: object
      properties:
        id:
          type: integer
          example: 12345
        type:
          type: string
          example: sessionActivity
          enum:
          - sessionActivity
        attributes:
          $ref: '#/components/schemas/SessionActivityResponse_attributes'
      example:
        attributes:
          duration: 5
          fileName: /test2/Cassandra2020The20Definitive20Guide.2030947496.pdf
          protocol: web
          bytesTransferred: 10815676
          created: '{}'
          ipAddress: 185.223.113.224
          fileSource: ""
          sessionId: 5da9b4a8bd961dfa0a56fa0dc15aaffe57069271b389e
          operation: PASS
          status: '-'
          username: ykravchuk
        id: 12345
        type: sessionActivity
    WebhooksActivityResponse_attributes:
      type: object
      properties:
        attempt:
          type: integer
          description: The number of attempts made to send the webhook.
          example: 1
        created:
          type: string
          description: 'Datetime that the webhook was sent. '
          example: '{}'
        endpointUrl:
          type: string
          description: The URL the webhook was sent to.
          example: https://example.com
        event:
          type: string
          description: Event the triggered the webhook
          example: Delete File
        response:
          type: string
          example: OK
        responseSize:
          type: integer
          example: 654
        status:
          type: integer
          example: 200
      example:
        created: '{}'
        endpointUrl: https://example.com
        response: OK
        responseSize: 654
        event: Delete File
        attempt: 1
        status: 200
    Single entry of session activity_1:
      type: object
      properties:
        id:
          type: integer
          description: 'ID of the webhook activity. '
          example: 12345
        type:
          type: string
          description: Type is webhookActivity.
          example: webhookActivity
          enum:
          - webhookActivity
        attributes:
          $ref: '#/components/schemas/WebhooksActivityResponse_attributes'
      example:
        attributes:
          created: '{}'
          endpointUrl: https://example.com
          response: OK
          responseSize: 654
          event: Delete File
          attempt: 1
          status: 200
        id: 12345
        type: webhookActivity
    WebhooksActivityEntry_attributes:
      type: object
      properties:
        attempt:
          type: integer
          example: 1
        created:
          type: string
          example: '{}'
        endpointUrl:
          type: string
          example: https://example.com
        event:
          type: string
          example: Delete File
        response:
          type: string
          example: OK
        responseSize:
          type: integer
          example: 654
        status:
          type: integer
          example: 200
    Error401_errors:
      required:
      - code
      - detail
      type: object
      properties:
        code:
          type: string
          description: Error Code
          example: ERROR_INVALID_CREDENTIALS
        detail:
          type: string
          description: Additional Details
          example: HTTP_UNAUTHORIZED
    Error403_errors:
      required:
      - code
      - detail
      type: object
      properties:
        code:
          type: string
          description: Error code
          example: ERROR_INSUFFICIENT_PRIVELEGES
        detail:
          type: string
          description: Additional Detail
          example: You cannot access this function
    inline_response_201_data:
      type: object
      properties:
        messageId:
          type: integer
          description: PLACEHOLDER
          example: 22
      example:
        messageId: 22
    inline_response_200_14_data_meta:
      type: object
      properties:
        id:
          type: string
          description: ID of the meta.
      example:
        id: id
    inline_response_200_14_data:
      type: object
      properties:
        id:
          type: string
          description: ID of the deleted resource.
        type:
          type: string
          description: Type is resource.
        meta:
          $ref: '#/components/schemas/inline_response_200_14_data_meta'
      example:
        meta:
          id: id
        id: id
        type: type
    inline_response_200_17_meta:
      type: object
      properties:
        path:
          type: array
          description: 'Path to the original resource. '
          example: /file_two
          items:
            type: string
        dedestinationPath:
          type: string
          description: Path to the copied resource.
          example: /test_api\/file_two
    inline_response_200_18_meta:
      type: object
      properties:
        resourcePath:
          type: array
          description: 'Path to the original resources. '
          example: /file_two
          items:
            type: string
        destination:
          type: string
          description: Path to the moved resource.
          example: /test_api\/file_two
    PreviewFile_2:
      type: object
      properties:
        id:
          type: integer
          description: Resource ID
          format: int32
          example: 1
        type:
          type: string
          description: Type of resource
          example: preview
        attributes:
          $ref: '#/components/schemas/PreviewFile_1_attributes'
      description: Object with preview image properties.
      example:
        attributes:
          image: iVBORw0KGgoAAAANSUhEUgAAACIAAAAoCAYAAACb3CikAAAABGdBTUEAALGPC
          pageCount: 10
          imageId: 6afaa3ef4056dc602ccfc69ab52d6f40
          size: 2186
        id: 1
        type: preview
    inline_response_201_5_data:
      type: object
      properties:
        recipients:
          type: array
          description: 'List of email addresses for the share''s recipients. '
          example:
          - recipient@example.com
          - recipient2@example.com
          items:
            type: string
      example:
        recipients:
        - recipient@example.com
        - recipient2@example.com
  responses:
    BadRequest:
      description: Bad Request
      content:
        application/json:
          schema:
            type: object
            properties:
              responseStatus:
                type: integer
                format: int32
                example: 400
              errors:
                type: array
                items:
                  title: Error
                  type: object
                  properties:
                    code:
                      type: string
                      description: Specific internal error string.
                      example: <PLACEHOLDER_ERROR_CODE>
                    title:
                      type: string
                      description: Human readable summary of the problem.
                      example: <PLACEHOLDER_TITLE>
                    detail:
                      type: string
                      description: human-readable explanation specific to this occurrence
                        of the problem.
                      example: <PLACEHOLDER_DETAIL>
                    meta:
                      type: object
                      description: Meta object containing non-standard meta-information
                        about the error.
                      example: <PLACEHOLDER_META_OBJECT>
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            type: object
            properties:
              responseStatus:
                type: integer
                format: int32
                example: 401
              errors:
                type: array
                items:
                  title: Error
                  type: object
                  properties:
                    code:
                      type: string
                      description: Specific internal error string.
                      example: <PLACEHOLDER_ERROR_CODE>
                    title:
                      type: string
                      description: Human readable summary of the problem.
                      example: <PLACEHOLDER_TITLE>
                    detail:
                      type: string
                      description: human-readable explanation specific to this occurrence
                        of the problem.
                      example: <PLACEHOLDER_DETAIL>
                    meta:
                      type: object
                      description: Meta object containing non-standard meta-information
                        about the error.
                      example: <PLACEHOLDER_META_OBJECT>
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            type: object
            properties:
              responseStatus:
                type: integer
                format: int32
                example: 403
              errors:
                type: array
                items:
                  title: Error
                  type: object
                  properties:
                    code:
                      type: string
                      description: Specific internal error string.
                      example: <PLACEHOLDER_ERROR_CODE>
                    title:
                      type: string
                      description: Human readable summary of the problem.
                      example: <PLACEHOLDER_TITLE>
                    detail:
                      type: string
                      description: human-readable explanation specific to this occurrence
                        of the problem.
                      example: <PLACEHOLDER_DETAIL>
                    meta:
                      type: object
                      description: Meta object containing non-standard meta-information
                        about the error.
                      example: <PLACEHOLDER_META_OBJECT>
    NotFound:
      description: PLACEHOLDER
      content:
        application/json:
          schema:
            type: object
            properties:
              responseStatus:
                type: integer
                format: int32
                example: 404
              errors:
                type: array
                items:
                  title: Error
                  type: object
                  properties:
                    code:
                      type: string
                      description: Specific internal error string.
                      example: <PLACEHOLDER_ERROR_CODE>
                    title:
                      type: string
                      description: Human readable summary of the problem.
                      example: <PLACEHOLDER_TITLE>
                    detail:
                      type: string
                      description: human-readable explanation specific to this occurrence
                        of the problem.
                      example: <PLACEHOLDER_DETAIL>
                    meta:
                      type: object
                      description: Meta object containing non-standard meta-information
                        about the error.
                      example: <PLACEHOLDER_META_OBJECT>
    ServerError:
      description: PLACEHOLDER
    Unavailable:
      description: PLACEHOLDER
  parameters:
    apiKeyParam:
      name: ev-api-key
      in: header
      description: API key required to make the API call.
      required: true
      style: simple
      explode: false
      schema:
        type: string
    accessTokenParam:
      name: ev-access-token
      in: header
      description: Access token required to make the API call.
      required: true
      style: simple
      explode: false
      schema:
        type: string
      example: 5dc97cc607985eb8da033220e7447647e7915fbf73808
    accessTokenDFAParam:
      name: ev-access-token
      in: header
      description: Access token required to make the public Direct Files API calls.
        Generated via calling `/direct-files/auth` method
      required: true
      style: simple
      explode: false
      schema:
        type: string
      example: D_5dc97cc607985eb8da033220e7447647e7915fbf73808
    accessTokenShareParam:
      name: ev-access-token
      in: header
      description: Access token required to make the public Share API calls.
      required: true
      style: simple
      explode: false
      schema:
        type: string
      example: S_5dc97cc607985eb8da033220e7447647e7915fbf73808
  examples:
    AccountResponseExample:
      summary: Regular account object example
      value:
        responseStatus: 200
        data:
          id: 6
          type: account
          attributes:
            accountName: exampleaccount
            maxUsers: 5
            userCount: 4
            status: 1
            branding: true
            customDomain: false
            plan:
              whmcsPlanId: 54321
              whmcsProductId: 3452
              productMonthly: 20
              planCode: 35gb-r206
            quota:
              diskLimit: 37580963840
              bandwidthLimit: 9223372036854776000
              diskUsed: 24938382543
              bandwidthUsed: 55110425741
              noticeEnabled: true
              noticeThreshold: 90
            secureOnly: false
            complexPasswords: false
            showReferralLinks: true
            trial:
              free: false
            brandingSettings:
              companyName: Example Company
              customEmail: custom@example.com
              logo: examplelogo.png
              logoExt: png
              theme: default
            callbackSettings:
            - accountId: 2
              endpointUrl: https://example.com
              verificationToken: 345a09f7a4ee8c2889d3ee4909838237
              triggers:
                upload: false
                download: false
                delete: false
                createFolder: false
                rename: false
                move: false
                copy: false
                compress: false
                extract: false
                shareFolder: false
                sendFiles: false
                receiveFiles: false
                updateShare: false
                updateReceive: false
                deleteSend: false
                deleteReceive: false
                deleteShare: false
                createNotification: false
                updateNotification: false
                deleteNotification: false
                createUser: false
                updateUser: false
                deleteUser: false
                userConnect: false
                userDisconnect: false
            clientId: 1
            welcomeEmailContent: |
              "Great news, your new account is ready!\n\nFor your records, we've listed information you'll use to log in below:\n\nFTP Server: [[ftpserver]]\n\nUsername (Web and FTP access): [[username]]\n\n[[setpassword]]"
            welcomeEmailSubject: ExaVault File Sharing Account
            accountOnboarding: true
            created: {}
            modified: {}
          relationships:
            masterUser:
              data:
                type: user
                id: 1
    AccountExtendedResponseExample:
      summary: Acccount object example with relationships
      value:
        responseStatus: 200
        data:
          id: 7
          type: account
          attributes:
            accountName: exampleaccount
            maxUsers: 5
            userCount: 4
            status: 1
            branding: true
            customDomain: false
            plan:
              whmcsPlanId: 54321
              whmcsProductId: 3452
              productMonthly: 20
              planCode: 35gb-r206
            quota:
              diskLimit: 37580963840
              bandwidthLimit: 9223372036854776000
              diskUsed: 24938382543
              bandwidthUsed: 55110425741
              noticeEnabled: true
              noticeThreshold: 90
            secureOnly: false
            complexPasswords: false
            showReferralLinks: true
            trial:
              free: false
            callbackSettings:
            - accountId: 2
              endpointUrl: https://example.com
              verificationToken: 345a09f7a4ee8c2889d3ee4909838237
              triggers:
                upload: false
                download: false
                delete: false
                createFolder: false
                rename: false
                move: false
                copy: false
                compress: false
                extract: false
                shareFolder: false
                sendFiles: false
                receiveFiles: false
                updateShare: false
                updateReceive: false
                deleteSend: false
                deleteReceive: false
                deleteShare: false
                createNotification: false
                updateNotification: false
                deleteNotification: false
                createUser: false
                updateUser: false
                deleteUser: false
                userConnect: false
                userDisconnect: false
            clientId: 1
            welcomeEmailContent: |
              "Great news, your new account is ready!\n\nFor your records, we've listed information you'll use to log in below:\n\nFTP Server: [[ftpserver]]\n\nUsername (Web and FTP access): [[username]]\n\n[[setpassword]]"
            welcomeEmailSubject: ExaVault File Sharing Account
            accountOnboarding: true
            created: {}
            modified: {}
            relationships:
              masterAccount:
                data:
                  type: account
                  id: 1
          included:
          - type: user
            id: 1
            attributes:
              username: examplemasteruser
              accountName: examplemasteraccount
              nickname: examplenickname
              email: user@example.com
              status: 1
              accountId: 2
              firstLogin: false
              onboarding: true
              homeDir: /
              role: master
              timeZone: UTC
              permissions:
                download: true
                upload: true
                modify: true
                delete: true
                list: true
                changePassword: true
                share: true
                notification: true
                viewFormData: true
                deleteFormData: true
              created: {}
              modified: {}
              accessTimestamp: {}
    AccountPublicResponseExample:
      value:
        responseStatus: 200
        data:
          id: 12345
          type: account
          attributes:
            accountName: exampleaccount
            theme: default
            companyName: Development Company
            logo: logosample.png
            customEmail: account@example.com
            verifiedDomainValid: false
            created: {}
            modified: {}
    DirectFileCollectionResponseExample:
      summary: Regular direct file collection response
      value:
        responseStatus: 200
        totalResults: 2
        returnedResults: 2
        data:
        - id: 20
          type: direct-file
          attributes:
            path: /Direct File Example
            isEnabled: false
            isIndexEnabled: true
            blockUntil: {}
            created: "1504201616"
            modified: "1504201616"
          relationships:
            owner:
              type: user
              id: 12
            resource:
              type: resource
              id: 13
    DirectFileExtendedResponseExample:
      summary: Direct file response with relationship
      value:
        responseStatus: 200
        data:
          id: 20
          type: direct-file
          attributes:
            path: /Direct File Example
            isEnabled: false
            isIndexEnabled: true
            blockUntil: {}
            created: "1504201616"
            modified: "1504201616"
          relationships:
            owner:
              type: user
              id: 12
            resource:
              type: resource
              id: 13
        included:
        - type: user
          id: 12
          attributes:
            status: 0
            expiration: {}
            username: exampleuser
            nickname: examplenickname
            email: user@example.com
            homeDir: /
            onboarding: true
            firstLogin: false
            role: master
            timeZone: UTC
            permissions:
              download: true
              upload: true
              modify: true
              delete: true
              list: true
              changePassword: true
              share: true
              notification: true
              viewFormData: true
              deleteFormData: true
            created: {}
            modified: {}
            accessTimestamp: {}
        - type: resource
          id: 13
          attributes:
            hash: ec4aa9a91be282666a165899a14f29b1
            name: Shared Folder
            type: folder
            uploadDate: {}
            createdAt: {}
            updatedAt: {}
            accessedAt: {}
            path: /Shared Folder
            fileCount: 1
            size: 987
            previewable: false
    DirectFileExtendedCollectionResponseExample:
      summary: Direct file collection response with relationship
      value:
        responseStatus: 200
        data:
        - id: 20
          type: direct-file
          attributes:
            path: /Direct File Example
            isEnabled: false
            isIndexEnabled: true
            blockUntil: {}
            created: "1504201616"
            modified: "1504201616"
          relationships:
            owner:
              type: user
              id: 12
            resource:
              type: resource
              id: 13
        included:
        - type: user
          id: 12
          attributes:
            status: 0
            expiration: {}
            username: exampleuser
            nickname: examplenickname
            email: user@example.com
            homeDir: /
            onboarding: true
            firstLogin: false
            role: master
            timeZone: UTC
            permissions:
              download: true
              upload: true
              modify: true
              delete: true
              list: true
              changePassword: true
              share: true
              notification: true
              viewFormData: true
              deleteFormData: true
            created: {}
            modified: {}
            accessTimestamp: {}
        - type: resource
          id: 13
          attributes:
            hash: ec4aa9a91be282666a165899a14f29b1
            name: Shared Folder
            type: folder
            uploadDate: {}
            createdAt: {}
            updatedAt: {}
            accessedAt: {}
            path: /Shared Folder
            fileCount: 1
            size: 987
            previewable: false
    DirectFileResponseExample:
      summary: Regular direct file response
      value:
        responseStatus: 200
        data:
          id: 20
          type: direct-file
          attributes:
            path: /Direct File Example
            isEnabled: false
            isIndexEnabled: true
            blockUntil: {}
            created: "1504201616"
            modified: "1504201616"
          relationships:
            owner:
              type: user
              id: 12
            resource:
              type: resource
              id: 13
    EmailListsExample:
      summary: Regular email list response
      value:
        responseStatus: 200
        data:
        - id: 1
          type: emailList
          attributes:
            name: My friends
            created: {}
            modified: {}
            members:
            - jdoe@exavault.com
            - yk@exavault.com
          relationships:
            owner:
              data:
                type: user
                id: 4
    EmailListsInludedExample:
      summary: Email list reponse with included
      value:
        responseStatus: 200
        data:
        - id: 1
          type: emailList
          attributes:
            name: My friends
            created: {}
            modified: {}
            members:
            - jdoe@exavault.com
            - yk@exavault.com
          relationships:
            owner:
              data:
                type: user
                id: 4
        included:
        - id: 4
          type: user
          attributes:
            status: 1
            created: {}
            modified: {}
            accessTimestamp: {}
            accountId: 5
            accountName: jdoe
            username: john
            nickname: jdoe
            email: jdoe@exavault.com
            homeDir: /
            permissions:
              download: true
              upload: true
              modify: true
              delete: true
              list: true
              changePassword: true
              share: true
              notification: true
              viewFormData: true
              deleteFormData: true
            role: admin
            timeZone: America/Chicago
            onboarding: false
            firstLogin: false
    FormResponseExample:
      summary: Regular form response
      value:
        responseStatus: 200
        data:
          id: 1
          type: form
          attributes:
            submitButtonText: Send Files
            formDescription: Upload your photos to us
            successMessage: Your files were uploaded
            elements:
            - id: 123
              name: You name
              order: 1
              type: name
              settings:
                width: 1
                isRequired: true
                senderEmail: false
                useAsFolderName: false
            - id: 124
              name: Your Email
              order: 1
              type: email
              settings:
                description: Enter your email from the registration system
                width: 1
                isRequired: true
                senderEmail: true
                useAsFolderName: true
            cssStyles: |-
              #ev-widget-form {
                /*Change this to change the font. Remove to use your website font*/
                font-family: Helvetica Neue, sans-serif;
                /*Makes the form the same width as your website */
                margin: 0 -2%;
              } #ev-widget-form label{
                width: 100%;
              } #ev-widget-form input, #ev-widget-form textarea {
                /*Changes color and thickness of borders on form elements */
                border: 2px solid #ccc;
                /*Changes spacing inside the form elements (top/bottom and left/right */
                padding: 5px 5px;
                /* Changes how far away the inputs are from their label */
                margin-top: 2px;
              }
              #ev-widget-form input:focus, #ev-widget-form textarea:focus {
                /*Changes the color of the form elements when they are clicked in to */
                border: 2px solid #b2cf88;
                /*Removes glow effect from form elements that are clicked in to */
                outline: none;
              }
              #ev-widget-form label {
                font-size: 14px;
                font-weight: bold;
                /*Changes color of labels */
                color: #232323
              }
              #ev-widget-form .ev-form-element-description {
                /*Changes size of descriptions */
                font-size: 12px;
                /*Changes color of descriptions */
                color: #777;
                /* Changes how far away the descriptions are from their input */
                margin-top: 2px;
              }
              #ev-widget-form textarea {
                /* Makes textareas (multiline inputs) a taller. */
                min-height: 90px;
              }
          relationships:
            share:
              data:
                type: share
                id: 3
    FormExtendedResponseExample:
      summary: Form response with relationships
      value:
        responseStatus: 200
        data:
          id: 1
          type: form
          attributes:
            submitButtonText: Send Files
            formDescription: Upload your photos to us
            successMessage: Your files were uploaded
            elements:
            - id: 123
              name: You name
              order: 1
              type: name
              settings:
                width: 1
                isRequired: true
                senderEmail: false
                useAsFolderName: false
            - id: 124
              name: Your Email
              order: 1
              type: email
              settings:
                description: Enter your email from the registration system
                width: 1
                isRequired: true
                senderEmail: true
                useAsFolderName: true
            cssStyles: |-
              #ev-widget-form {
                /*Change this to change the font. Remove to use your website font*/
                font-family: Helvetica Neue, sans-serif;
                /*Makes the form the same width as your website */
                margin: 0 -2%;
              } #ev-widget-form label{
                width: 100%;
              } #ev-widget-form input, #ev-widget-form textarea {
                /*Changes color and thickness of borders on form elements */
                border: 2px solid #ccc;
                /*Changes spacing inside the form elements (top/bottom and left/right */
                padding: 5px 5px;
                /* Changes how far away the inputs are from their label */
                margin-top: 2px;
              }
              #ev-widget-form input:focus, #ev-widget-form textarea:focus {
                /*Changes the color of the form elements when they are clicked in to */
                border: 2px solid #b2cf88;
                /*Removes glow effect from form elements that are clicked in to */
                outline: none;
              }
              #ev-widget-form label {
                font-size: 14px;
                font-weight: bold;
                /*Changes color of labels */
                color: #232323
              }
              #ev-widget-form .ev-form-element-description {
                /*Changes size of descriptions */
                font-size: 12px;
                /*Changes color of descriptions */
                color: #777;
                /* Changes how far away the descriptions are from their input */
                margin-top: 2px;
              }
              #ev-widget-form textarea {
                /* Makes textareas (multiline inputs) a taller. */
                min-height: 90px;
              }
          relationships:
            share:
              data:
                type: share
                id: 3322
        included:
        - id: 3322
          type: share
          attributes:
            name: Shared folder
            hasPassword: false
            public: true
            accessMode: upload
            accessDescription: Upload only
            embed: false
            hash: hd1e-3erufo72
            ownerHash: hd1e-3erufo72-fsxak999
            expired: false
    ShareCollectionResponseExample:
      summary: Regular share collection response
      value:
        responseStatus: 200
        totalResults: 2
        returnedResults: 2
        data:
        - id: 10
          type: share
          attributes:
            name: Example Share
            hasPassword: false
            public: true
            accessMode: upload
            accessDescription: Upload only
            embed: true
            hash: sdg1-352
            ownerHash: hd1e-3erufo72-fsxak999
            expired: false
            type: shared_folder
            requireEmail: false
            fileDropCreateFolders: false
            paths:
            - /example share
            recipients:
            - id: 11
              type: direct
              hash: fseowxan
              email: recipient@gmail.com
              sent: true
              received: false
              created: {}
            messages:
            - id: 23
              subject: Message subject.
              body: You have files available for download.
              created: {}
              modified: {}
            inherited: false
            status: 1
            hasNotification: true
            created: {}
            modified: {}
          relationships:
            owner:
              type: user
              id: 12
            resource:
              type: resource
              id: 13
            notifications:
            - type: notification
              id: 14
            - type: notification
              id: 15
    ShareExtendedCollectionResponseExample:
      summary: Share collection response with relationships
      value:
        responseStatus: 200
        totalResults: 2
        returnedResults: 2
        data:
        - id: 10
          type: share
          attributes:
            name: Example Share
            hasPassword: false
            public: true
            accessMode: upload
            accessDescription: Upload only
            embed: true
            hash: sdg1-352
            ownerHash: hd1e-3erufo72-fsxak999
            expired: false
            type: shared_folder
            requireEmail: false
            fileDropCreateFolders: false
            paths:
            - /example share
            recipients:
            - id: 11
              type: direct
              hash: fseowxan
              email: recipient@gmail.com
              sent: true
              received: false
              created: {}
            messages:
            - id: 23
              subject: Message subject.
              body: You have files available for download.
              created: {}
              modified: {}
            inherited: false
            status: 1
            hasNotification: true
            created: {}
            modified: {}
          relationships:
            owner:
              type: user
              id: 12
            resource:
              type: resource
              id: 13
            notifications:
            - type: notification
              id: 14
            - type: notification
              id: 15
        included:
        - type: user
          id: 12
          attributes:
            status: 0
            expiration: {}
            username: exampleuser
            nickname: examplenickname
            email: user@example.com
            homeDir: /
            onboarding: true
            firstLogin: false
            role: master
            timeZone: UTC
            permissions:
              download: true
              upload: true
              modify: true
              delete: true
              list: true
              changePassword: true
              share: true
              notification: true
              viewFormData: true
              deleteFormData: true
            created: {}
            modified: {}
            accessTimestamp: {}
        - type: resource
          id: 13
          attributes:
            hash: ec4aa9a91be282666a165899a14f29b1
            name: Shared Folder
            type: folder
            uploadDate: {}
            createdAt: {}
            updatedAt: {}
            accessedAt: {}
            path: /Shared Folder
            fileCount: 1
            size: 987
            previewable: false
        - type: notification
          id: 14
          attributes:
            type: shared_folder
            path: /Shared Folder
            name: Shared Folder
            action: upload
            usernames:
            - notice_user_all
            recipients:
            - id: 18
              email: recipient@example.com
              notificationId: 14
              created: {}
              modified: {}
            recipientEmails:
            - recipient@example.com
            sendEmail: 1
            readableDescription: PLACEHOLDER
            readableDescriptionWithoutPath: PLACEHOLDER
            message: PLACEHOLDER
            created: {}
            updated: {}
        - type: notification
          id: 15
          attributes:
            type: shared_folder
            path: /Shared Folder2
            name: Shared Folder2
            action: upload
            usernames:
            - notice_user_all
            recipients:
            - id: 18
              email: recipient@example.com
              notificationId: 14
              created: {}
              modified: {}
            recipientEmails:
            - recipient@example.com
            sendEmail: 1
            readableDescription: PLACEHOLDER
            readableDescriptionWithoutPath: PLACEHOLDER
            message: PLACEHOLDER
            created: {}
            updated: {}
    ShareExtendedResponseExample:
      summary: Share response with relationships
      value:
        responseStatus: 200
        data:
          id: 10
          type: share
          attributes:
            name: Example Share
            hasPassword: false
            public: true
            accessMode: upload
            accessDescription: Upload only
            embed: true
            hash: sdg1-352
            ownerHash: hd1e-3erufo72-fsxak999
            expired: false
            type: shared_folder
            requireEmail: false
            fileDropCreateFolders: false
            paths:
            - /example share
            recipients:
            - id: 11
              type: direct
              hash: fseowxan
              email: recipient@gmail.com
              sent: true
              received: false
              created: {}
            messages:
            - id: 23
              subject: Message subject.
              body: You have files available for download.
              created: {}
              modified: {}
            inherited: false
            status: 1
            hasNotification: true
            created: {}
            modified: {}
          relationships:
            owner:
              type: user
              id: 12
            resource:
              type: resource
              id: 13
            notifications:
            - type: notification
              id: 14
            - type: notification
              id: 15
        included:
        - type: user
          id: 12
          attributes:
            status: 0
            expiration: {}
            username: exampleuser
            nickname: examplenickname
            email: user@example.com
            homeDir: /
            onboarding: true
            firstLogin: false
            role: master
            timeZone: UTC
            permissions:
              download: true
              upload: true
              modify: true
              delete: true
              list: true
              changePassword: true
              share: true
              notification: true
              viewFormData: true
              deleteFormData: true
            created: {}
            modified: {}
            accessTimestamp: {}
        - type: resource
          id: 13
          attributes:
            hash: ec4aa9a91be282666a165899a14f29b1
            name: Shared Folder
            type: folder
            uploadDate: {}
            createdAt: {}
            updatedAt: {}
            accessedAt: {}
            path: /Shared Folder
            fileCount: 1
            size: 987
            previewable: false
        - type: notification
          id: 14
          attributes:
            type: shared_folder
            path: /Shared Folder
            name: Shared Folder
            action: upload
            usernames:
            - notice_user_all
            recipients:
            - id: 18
              email: recipient@example.com
              notificationId: 14
              created: {}
              modified: {}
            recipientEmails:
            - recipient@example.com
            sendEmail: 1
            readableDescription: PLACEHOLDER
            readableDescriptionWithoutPath: PLACEHOLDER
            message: PLACEHOLDER
            created: {}
            updated: {}
        - type: notification
          id: 15
          attributes:
            type: shared_folder
            path: /Shared Folder2
            name: Shared Folder2
            action: upload
            usernames:
            - notice_user_all
            recipients:
            - id: 18
              email: recipient@example.com
              notificationId: 14
              created: {}
              modified: {}
            recipientEmails:
            - recipient@example.com
            sendEmail: 1
            readableDescription: PLACEHOLDER
            readableDescriptionWithoutPath: PLACEHOLDER
            message: PLACEHOLDER
            created: {}
            updated: {}
    ShareResponseExample:
      summary: Regular share response
      value:
        responseStatus: 200
        data:
          id: 10
          type: share
          attributes:
            name: Example Share
            hasPassword: false
            public: true
            accessMode: upload
            accessDescription: Upload only
            embed: true
            hash: sdg1-352
            ownerHash: hd1e-3erufo72-fsxak999
            expired: false
            type: shared_folder
            requireEmail: false
            fileDropCreateFolders: false
            paths:
            - /example share
            recipients:
            - id: 11
              type: direct
              hash: fseowxan
              email: recipient@gmail.com
              sent: true
              received: false
              created: {}
            messages:
            - id: 23
              subject: Message subject.
              body: You have files available for download.
              created: {}
              modified: {}
            inherited: false
            status: 1
            hasNotification: true
            created: {}
            modified: {}
          relationships:
            owner:
              type: user
              id: 12
            resource:
              type: resource
              id: 13
            notifications:
            - type: notification
              id: 14
            - type: notification
              id: 15
  requestBodies:
    ShareBody:
      description: PLACEHOLDER
      content:
        application/json:
          schema:
            type: object
            properties:
              type:
                type: string
                description: The type of share to create. See above for a description
                  of each.
                example: shared_folder
                enum:
                - directSend
                - shared_folder
                - receive
              name:
                type: string
                description: Name of the share.
                example: Shared Folder
              filePaths:
                type: array
                description: Array of strings containing the file paths to share.
                example:
                - /testfolder
                items:
                  type: string
              accessMode:
                type: array
                example:
                - download
                - upload
                items:
                  type: string
                enum:
                - download
                - upload
                - modify
                - delete
              ccEmail:
                type: string
                format: email
                example: notify@example.com
              embed:
                type: boolean
                description: PLACEHOLDER
                example: false
              expiration:
                type: string
                description: PLACEHOLDER
                format: ISO 8601
                example: '{}'
              hasNotification:
                type: boolean
                description: PLACEHOLDER
                example: false
              isPublic:
                type: boolean
                description: PLACEHOLDER
                example: true
              message:
                type: string
                description: PLACEHOLDER
              notificationEmails:
                type: array
                description: PLACEHOLDER
                example:
                - notify@example.com
                - notify2@example.com
                items:
                  type: string
                  format: email
              password:
                type: string
                description: PLACEHOLDER
              requireEmail:
                type: boolean
                description: PLACEHOLDER
                example: false
              subject:
                type: string
                description: PLACEHOLDER
                example: Invitation to a shared folder
              fileDropCreateFolders:
                type: boolean
                description: PLACEHOLDER
                example: false
      required: true
    AccountAdminBody:
      description: PLACEHOLDER
      content:
        application/json:
          schema:
            required:
            - accountName
            - domain
            - email
            - password
            - planCode
            - productMonthly
            - storagePodServerName
            - whmcsClientId
            - whmcsPlanId
            - whmcsProductId
            type: object
            properties:
              whmcsClientId:
                type: integer
                description: PLACEHOLDER
                example: 23
              whmcsPlanId:
                type: integer
                description: PLACEHOLDER
                example: 24
              accountName:
                type: string
                description: PLACEHOLDER
                example: accountexample
              email:
                type: string
                description: PLACEHOLDER
                format: email
                example: account@example.com
              password:
                type: string
                description: PLACEHOLDER
                example: secureexamplepassword
              domain:
                type: string
                description: PLACEHOLDER
                example: exampleaccount.exavault.com
              planCode:
                type: string
                description: PLACEHOLDER
                example: 35gb
              whmcsProductId:
                type: integer
                description: PLACEHOLDER
                example: 25
              productMonthly:
                type: number
                description: PLACEHOLDER
                format: double
                example: 50
              storagePodServerName:
                type: string
                description: PLACEHOLDER
                example: pod-sjc1
              diskQuotaLimit:
                type: integer
                description: PLACEHOLDER
                format: int32
                example: 3434532
                default: 0
              bandwidthQuotaLimit:
                type: integer
                description: PLACEHOLDER
                format: int32
                example: 3434532
                default: 0
              quotaNoticeEnabled:
                type: boolean
                description: PLACEHOLDER
                example: true
                default: true
                enum:
                - true
                - false
              quotaNoticeThreshold:
                type: integer
                description: PLACEHOLDER
                format: int32
                example: 100
                default: 90
              userLimit:
                type: integer
                description: PLACEHOLDER
                format: int32
                example: 500
                default: 250
              branding:
                type: boolean
                description: PLACEHOLDER
                example: true
                default: true
                enum:
                - true
                - false
              customDomain:
                type: boolean
                description: PLACEHOLDER
                example: true
                default: true
                enum:
                - true
                - false
              uid:
                type: integer
                description: PLACEHOLDER
                example: 3214
      required: true
    AccountAdminPatchBody:
      description: PLACEHOLDER
      content:
        application/json:
          schema:
            type: object
            properties:
              planCode:
                type: string
                description: Required field. PLACEHOLDER
                example: 350gb
              whmcsProductId:
                type: integer
                description: Required field. PLACEHOLDER
                example: 24
              productMonthly:
                type: number
                description: Required field. PLACEHOLDER
                format: double
                example: 100
              status:
                type: integer
                description: PLACEHOLDER
                example: 1
              diskQuotaLimit:
                type: number
                description: PLACEHOLDER
                example: 18248912701
              bandwidthQuotaLimit:
                type: number
                description: PLACEHOLDER
                example: 124511242
              userLimit:
                type: integer
                description: PLACEHOLDER
                example: 100
              branding:
                type: boolean
                description: PLACEHOLDER
                example: false
              customDomain:
                type: boolean
                description: PLACEHOLDER
                example: false
      required: true
    AccountBody:
      description: PLACEHOLDER
      content:
        application/json:
          schema:
            type: object
            properties:
              quotaNoticeThreshold:
                type: integer
                description: PLACEHOLDER
                example: 90
              secureOnly:
                type: boolean
                description: PLACEHOLDER
                example: false
              complexPasswords:
                type: boolean
                description: PLACEHOLDER
                example: false
              showReferralLinks:
                type: boolean
                description: PLACEHOLDER
                example: false
              expiration:
                type: string
                description: PLACEHOLDER
                format: ISO 8601
                example: '{}'
              externalDomain:
                type: string
                description: PLACEHOLDER
              emailContent:
                type: string
                description: PLACEHOLDER
                example: 'Great news, your new account is ready! For your records,
                  we''ve listed information you''ll use to log in below: FTP Server:
                  [[ftpserver]] Username (Web and FTP access): [[username]] [[setpassword]]'
              emailSubject:
                type: string
                description: PLACEHOLDER
                example: ExaVault File Sharing Account
              allowedIpRanges:
                type: object
                properties:
                  ipStart:
                    type: string
                    description: PLACEHOLDER
                    example: 127.0.0.1
                  ipEnd:
                    type: string
                    description: PLACEHOLDER
                    example: 255.255.255.255
              callbackSettings:
                title: CallbackSettings
                type: object
                properties:
                  accountId:
                    type: string
                    description: ID of the account these settings belongs to.
                    example: "13058"
                  endpointUrl:
                    type: string
                    description: Where callback settings object sent to.
                    example: http://test-endpoint.exavault.com
                  token:
                    type: string
                    description: Verification token for the request authentication.
                    example: 380814daa6886641d2ffsw2f43b30312
                  triggers:
                    type: object
                    properties:
                      upload:
                        type: string
                        description: Trigger callback on upload.
                        example: "1"
                      download:
                        type: string
                        description: Trigger callback on download.
                        example: "0"
                      delete:
                        type: string
                        description: Trigger callback on delete.
                        example: "0"
                      createFolder:
                        type: string
                        description: Trigger callback on fodler create.
                        example: "1"
                      rename:
                        type: string
                        description: Trigger callback on rename.
                        example: "0"
                      move:
                        type: string
                        description: Trigger callback on move.
                        example: "0"
                      copy:
                        type: string
                        description: Trigger callback on copy.
                        example: "0"
                      compress:
                        type: string
                        description: Trigger callback on compress.
                        example: "0"
                      extract:
                        type: string
                        description: Trigger callback on extract.
                        example: "0"
                      shareFolder:
                        type: string
                        description: Trigger callback on share folder create.
                        example: "0"
                      sendFiles:
                        type: string
                        description: Trigger callback on send files.
                        example: "0"
                      receiveFiles:
                        type: string
                        description: Trigger callback on receive folder create.
                        example: "1"
                      updateShare:
                        type: string
                        description: Trigger callback on share folder update.
                        example: "0"
                      updateReceive:
                        type: string
                        description: Trigger callback on receive folder update.
                        example: "0"
                      deleteSend:
                        type: string
                        description: Trigger callback on send files delete.
                        example: "0"
                      deleteReceive:
                        type: string
                        description: Trigger callback on receive folder delete.
                        example: "0"
                      deleteShare:
                        type: string
                        description: Trigger callback on share folder delete.
                        example: "0"
                      createNotification:
                        type: string
                        description: Trigger callback on notification create.
                        example: "0"
                      updateNotification:
                        type: string
                        description: Trigger callback on notification update.
                        example: "1"
                      deleteNotification:
                        type: string
                        description: Trigger callback on notification delete.
                        example: "0"
                      createUser:
                        type: string
                        description: Trigger callback on user create.
                        example: "0"
                      updateUser:
                        type: string
                        description: Trigger callback on user update.
                        example: "0"
                      deleteUser:
                        type: string
                        description: Trigger callback on user delete.
                        example: "0"
                      userConnect:
                        type: string
                        description: Trigger callback on user connect.
                        example: "0"
                      userDisconnect:
                        type: string
                        description: Trigger callback on user disconnect.
                        example: "0"
              brandingSettings:
                title: BrandingSettings
                type: object
                properties:
                  companyName:
                    type: string
                    description: PLACEHOLDER
                  customEmail:
                    type: string
                    description: PLACEHOLDER
                    format: email
                    example: custom@example.com
                  logo:
                    type: string
                    description: PLACEHOLDER
                    example: examplelogo.png
                  logoExt:
                    type: string
                    description: PLACEHOLDER
                    example: png
                  theme:
                    type: string
                    description: PLACEHOLDER
                    example: default
              accountOnboarding:
                type: boolean
                description: PLACEHOLDER
                example: true
              customSignature:
                type: string
                description: PLACEHOLDER
x-tagGroups:
- name: API Documentation
  tags:
  - Resources
  - Activity
  - Users
  - Notifications
  - Shares
  - Recipients
  - Form
  - Email Lists
  - Account
  - Email
